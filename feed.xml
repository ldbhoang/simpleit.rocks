<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Simple IT ü§ò Rocks</title>
    <description>Clutter-free software concepts. Written on the go.
</description>
    <link>https://simpleit.rocks/</link>
    <atom:link href="https://simpleit.rocks/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 06 Nov 2017 20:54:59 +0000</pubDate>
    <lastBuildDate>Mon, 06 Nov 2017 20:54:59 +0000</lastBuildDate>
    <generator>Jekyll v3.5.2</generator>
    
      <item>
        <title>Exploring React Framework Notes And Core Concepts</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;This is a guide to understand React framework to build web
applications. It explores its main concepts and common project
structure.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;React is a declarative JavaScript library for building user
interfaces.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://en.wikipedia.org/wiki/Declarative_programming&quot;&gt;
  &lt;p&gt;&lt;strong&gt;declarative programming&lt;/strong&gt; is a programming paradigm‚Äîa style of
building the structure and elements of computer programs‚Äîthat
expresses the logic of a computation without describing its control
flow. (Opposite: imperative programming)&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Declarative_programming&quot;&gt;Wikipedia
Declarative Programming page&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;concepts&quot;&gt;Concepts&lt;/h2&gt;

&lt;h3 id=&quot;components&quot;&gt;Components&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;React&lt;/em&gt; is based around a &lt;strong&gt;React Components class&lt;/strong&gt;. Everything in
React is a &lt;em&gt;Component&lt;/em&gt;, it is said that its architecture is
&lt;em&gt;Component-based&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Each component&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;takes in parameters, called &lt;strong&gt;props&lt;/strong&gt; to customize it
when creating them, and&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;returns a hierarchy of &lt;strong&gt;views&lt;/strong&gt; to display via the &lt;code class=&quot;highlighter-rouge&quot;&gt;render&lt;/code&gt;
method, which returns a &lt;strong&gt;React element&lt;/strong&gt; (a lightweight
description of what to render)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;elements&quot;&gt;Elements&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;React Elements&lt;/strong&gt; is what a &lt;strong&gt;React Component&lt;/strong&gt; returns, describing what
should appear on the screen.&lt;/p&gt;

&lt;h4 id=&quot;props&quot;&gt;Props&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Props&lt;/strong&gt; are arbitrary inputs passed to &lt;strong&gt;React Components&lt;/strong&gt;. 
They can be seen as object arguments that customize &lt;em&gt;components&lt;/em&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;this.props
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;state&quot;&gt;State&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;State&lt;/strong&gt; allows &lt;strong&gt;React components&lt;/strong&gt; to change their output over time
in response to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;user actions,&lt;/li&gt;
  &lt;li&gt;network responses, and&lt;/li&gt;
  &lt;li&gt;anything else&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;without preventing &lt;strong&gt;components&lt;/strong&gt; acting like &lt;strong&gt;pure functions&lt;/strong&gt; with
respect to their props. &lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;www.nicoespeon.com/en/2015/01/pure-functions-javascript/&quot;&gt;
  &lt;p&gt;A pure function doesn‚Äôt depend on and doesn‚Äôt modify the states of
variables out of its scope. Concretely, that means a pure function
always returns the same result given same parameters.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;&lt;a href=&quot;http://www.nicoespeon.com/en/2015/01/pure-functions-javascript/&quot;&gt;Pure functions in JavaScript&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;React components can have state by setting &lt;code class=&quot;highlighter-rouge&quot;&gt;this.state&lt;/code&gt; in the
constructor.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;jsx&quot;&gt;JSX&lt;/h3&gt;

&lt;p class=&quot;alert alert-info&quot;&gt;JSX produces React ‚Äúelements‚Äù.&lt;/p&gt;

&lt;p&gt;JSX adds XML syntax to JavaScript, so it can be thought that its name
is a mix of &lt;strong&gt;Javascript&lt;/strong&gt;+&lt;strong&gt;XML&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;To make the rendering definition easier, we use JSX that allows us to
use react components in an XML-syntax style, e.g.:&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;div /&amp;gt;&lt;/code&gt; syntax is transformed at build time to
&lt;code class=&quot;highlighter-rouge&quot;&gt;React.createElement('div')&lt;/code&gt;, so writing the above tag is the same as
writing using &lt;a href=&quot;https://facebook.github.io/react/docs/react-api.html#createelement&quot;&gt;React.createElement&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;return React.createElement('div', {className: '...'},
  React.createElement('h1', ...),
  React.createElement('ul', ...)
);
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://facebook.github.io/react/tutorial/tutorial.html&quot;&gt;
  &lt;p&gt;You can put any JavaScript expression within braces inside JSX. Each
React element is a real JavaScript object that you can store in a
variable or pass around your program.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;&lt;a href=&quot;https://facebook.github.io/react/tutorial/tutorial.html&quot;&gt;React tutorial&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;recipes&quot;&gt;Recipes&lt;/h2&gt;

&lt;h3 id=&quot;passing-data-through-components&quot;&gt;Passing data through Components&lt;/h3&gt;

&lt;p&gt;Using &lt;strong&gt;props&lt;/strong&gt; when instantiating a component like &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;MyComponent
value=somevalue /&amp;gt;&lt;/code&gt; then we can use it in another component accessing
&lt;code class=&quot;highlighter-rouge&quot;&gt;this.props&lt;/code&gt; in &lt;em&gt;MyComponent&lt;/em&gt;, e.g.:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class Board extends React.Component {
  render() {
    return &amp;lt;Square value={i} /&amp;gt;;
  }
}

class Square extends React.Component {
  ...
  render() {
    return (
      &amp;lt;button className=&quot;square&quot;&amp;gt;
        {this.props.value}
      &amp;lt;/button&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;aggregation-of-many-components&quot;&gt;Aggregation of many components&lt;/h4&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://facebook.github.io/react/tutorial/tutorial.html#passing-data-through-props&quot;&gt;
  &lt;p&gt;When you want to aggregate data from multiple children or to have
two child components communicate with each other, move the state
upwards so that it lives in the parent component. The parent can
then pass the state back down to the children via props, so that the
child components are always in sync with each other and with the
parent.&lt;/p&gt;

  &lt;p&gt;Pulling state upwards like this is common when refactoring React components.&lt;/p&gt;
  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;&lt;a href=&quot;https://facebook.github.io/react/tutorial/tutorial.html#passing-data-through-props&quot;&gt;Passing
data through props&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;inmutability&quot;&gt;Inmutability&lt;/h3&gt;

&lt;p&gt;There are two ways of changing data:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;mutation&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;replace with new copy&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In React it is better to create new versions of data instead of
directly modifying it, like instead of directly modifying an array
value, make a copy of it.&lt;/p&gt;

&lt;p&gt;This has several advantages:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;better performance.&lt;/li&gt;
  &lt;li&gt;easier to implement complex features (keeping older versions we can
switch to them as needed).&lt;/li&gt;
  &lt;li&gt;tracking changes is difficult, determining an immutable object
change is trivial, this helps to determine when a component requires
being re-rendered.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;More at: &lt;a href=&quot;https://facebook.github.io/react/tutorial/tutorial.html#why-immutability-is-important&quot;&gt;https://facebook.github.io/react/tutorial/tutorial.html#why-immutability-is-important&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;interactive-components&quot;&gt;Interactive Components&lt;/h3&gt;

&lt;h3 id=&quot;functional-components&quot;&gt;Functional Components&lt;/h3&gt;

&lt;p&gt;Functional Components is a simpler syntax for component types &lt;strong&gt;that only consist of a render method&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Rather than defining a class extending &lt;code class=&quot;highlighter-rouge&quot;&gt;React.Component&lt;/code&gt;, have a
function that takes &lt;code class=&quot;highlighter-rouge&quot;&gt;props&lt;/code&gt; and returns what should be rendered.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;function Mycomponent(props) {
  return (
    &amp;lt;button className=&quot;foobar&quot;&amp;gt;
      {props.value}
    &amp;lt;/button&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p class=&quot;alert alert-danger&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt; won‚Äôt be available, so &lt;code class=&quot;highlighter-rouge&quot;&gt;this.props&lt;/code&gt; become &lt;code class=&quot;highlighter-rouge&quot;&gt;props&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;history&quot;&gt;History&lt;/h3&gt;

&lt;h2 id=&quot;useful-commands&quot;&gt;Useful commands&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Installation of &lt;code class=&quot;highlighter-rouge&quot;&gt;create-react&lt;/code&gt; command line utility:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   npm install -g create-react-app
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;create-react-app&quot;&gt;Create react app&lt;/h3&gt;

&lt;p&gt;This tool creates a fronted build pipeline without backend logic or
databases &lt;kbd&gt;create-react-app my-app&lt;/kbd&gt;.&lt;/p&gt;

&lt;p&gt;It makes available the commands &lt;code class=&quot;highlighter-rouge&quot;&gt;start&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;build&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;test&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;eject&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;To start the app &lt;kbd&gt;npm start&lt;/kbd&gt;, which will run &lt;code class=&quot;highlighter-rouge&quot;&gt;react-scripts start&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;To deploy, first create an optimized build in the &lt;code class=&quot;highlighter-rouge&quot;&gt;build&lt;/code&gt; folder with &lt;kbd&gt;npm run build&lt;/kbd&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://facebook.github.io/react/docs/installation.html&quot;&gt;https://facebook.github.io/react/docs/installation.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;https://facebook.github.io/react/docs/&amp;nbsp;&lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 27 Aug 2017 00:00:00 +0000</pubDate>
        <link>https://simpleit.rocks/exploring-react-framework-notes-and-core-concepts/</link>
        <guid isPermaLink="true">https://simpleit.rocks/exploring-react-framework-notes-and-core-concepts/</guid>
        
        
        <category>docs</category>
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>Angular Framework Notes A First Approach</title>
        <description>&lt;p&gt;This is a guide to understand Angular core concepts.&lt;/p&gt;

&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;Angular is a Javascript framework to build &lt;em&gt;web&lt;/em&gt; and &lt;em&gt;mobile&lt;/em&gt;
applications.&lt;/p&gt;

&lt;p&gt;It has a command line utility to facilitate tasks &lt;kbd&gt;ng&lt;/kbd&gt;
installed with &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install -g @angular/cli&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;basic-concepts&quot;&gt;Basic Concepts&lt;/h2&gt;

&lt;p&gt;Angular is based in these concepts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Javascript classes&lt;/li&gt;
  &lt;li&gt;Javascript modules&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Dependency injection&lt;/strong&gt; defined by &lt;strong&gt;TypeScript types&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Metadata&lt;/strong&gt; defined by &lt;strong&gt;decorators&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;alert alert-info&quot;&gt;&lt;em&gt;Typescript&lt;/em&gt; is a superset of JavaScript that compiles to plain
Javascript, with the ability to add optional static typing to the
language.&lt;/p&gt;

&lt;h3 id=&quot;javascript-classes&quot;&gt;Javascript classes&lt;/h3&gt;

&lt;p&gt;Javascript
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes&quot;&gt;classes&lt;/a&gt; are
used to&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;create objects&lt;/p&gt;

    &lt;p&gt;To define a class we can use one of two methods, both using
 prototype-based inheritance.&lt;/p&gt;

    &lt;p&gt;A &lt;strong&gt;class expression&lt;/strong&gt;:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; var MyClass = class [className] [extends] {
   // class body
 };
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;Or we can use a &lt;strong&gt;class declaration&lt;/strong&gt;.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; class name [extends] {
   // class body
 }
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;The difference between them is that &lt;em&gt;class declaration&lt;/em&gt; doesn‚Äôt
 allow an existing class to be re-declared.&lt;/p&gt;

    &lt;p&gt;Technically speaking, it is said that&lt;/p&gt;

    &lt;blockquote class=&quot;blockquote&quot;&gt;
      &lt;p&gt;function declarations
are
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Hoisting&quot;&gt;hoisted&lt;/a&gt; and
class declarations are not&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;deal with inheritance&lt;/p&gt;

    &lt;p&gt;Inheritance makes it possible to extend existing classes to create
 new ones.&lt;/p&gt;

    &lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;extends&lt;/code&gt; keyword is used to create a subclass.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; class Cat extends Animal {
 }
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;javascript-modules&quot;&gt;Javascript modules&lt;/h3&gt;

&lt;p&gt;Each module is a piece of code (variable and function declarations,
objects, etc) that is executed once it is loaded. Some of them can be marked to
be exported so other modules can import and use them.&lt;/p&gt;

&lt;p&gt;To import them we use the &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt; keyword and to expose them to other
modules the &lt;code class=&quot;highlighter-rouge&quot;&gt;export&lt;/code&gt; keyword.&lt;/p&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;defaultMember&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;module-name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;module-name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;member&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;module-name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;member&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;   &lt;span class=&quot;s2&quot;&gt;&quot;module-name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;member1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;member2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;module-name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;member1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;member2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alias2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[...]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;module-name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;defaultMember&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;member&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[...]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;module-name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;defaultMember&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;module-name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;module-name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://angular.io/guide/architecture&quot;&gt;
  &lt;p&gt;Angular apps are modular and Angular has its own modularity system
called NgModules&lt;/p&gt;

  &lt;p&gt;Every Angular app has at least one NgModule class, the root module,
conventionally named AppModule.&lt;/p&gt;

  &lt;p&gt;JavaScript also has its own module system for managing collections
of JavaScript objects. It‚Äôs completely different and unrelated to
the NgModule system.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;&lt;a href=&quot;https://angular.io/guide/architecture&quot;&gt;ngModules docs&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;dependency-injection&quot;&gt;Dependency injection&lt;/h3&gt;

&lt;p&gt;Dependency injection (DI) is an application design pattern. In this
coding pattern the class receives its dependencies from external
sources rather than creating them itself.&lt;/p&gt;

&lt;p&gt;Angular comes with a &lt;strong&gt;dependency injection framework&lt;/strong&gt; called
&lt;strong&gt;injector&lt;/strong&gt; where
you
&lt;a href=&quot;https://angular.io/guide/dependency-injection#injectable&quot;&gt;register classes&lt;/a&gt;,
and it figures out how to create them.&lt;/p&gt;

&lt;p&gt;Every time you need a class instance, instead of using a Factory, you
ask the injector to get it for you.&lt;/p&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;car&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;injector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Car&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;metadata&quot;&gt;Metadata&lt;/h3&gt;

&lt;p&gt;Decorators support annotating or modifying a class declaration,
method, accessor, property, or parameter. They can be used in Angular
with TypeScript.&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://angular.io/guide/architecture&quot;&gt;
  &lt;p&gt;Angular has many decorators that attach metadata to classes so that it
knows what those classes mean and how they should work.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;&lt;a href=&quot;https://angular.io/guide/architecture&quot;&gt;Modules notes&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Decorators use the form &lt;code class=&quot;highlighter-rouge&quot;&gt;@expression&lt;/code&gt;, where &lt;em&gt;expression&lt;/em&gt; must
evaluate to a function that will be called at runtime with
information about the decorated declaration.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://angular.io/api/core/NgModule&quot;&gt;NgModule&lt;/a&gt; is a decorator
function that takes a single metadata object whose properties describe
the module.&lt;/p&gt;

&lt;h2 id=&quot;project-structure&quot;&gt;Project Structure&lt;/h2&gt;

&lt;p&gt;To analyze a typical Angular project structure we create a new one
with the command line app &lt;code class=&quot;highlighter-rouge&quot;&gt;ng&lt;/code&gt;:&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;ng new --help&lt;/kbd&gt;
ng new &amp;lt; options... &amp;gt;
  Creates a new directory and a new Angular app eg. &quot;ng new [name]&quot;.
  aliases: n
  --dry-run (Boolean) (Default: false) Run through without making any changes. Will list all files that would have been created when running &quot;ng new&quot;.
    aliases: -d, --dryRun
  --verbose (Boolean) (Default: false) Adds more details to output logging.
    aliases: -v, --verbose
  --skip-install (Boolean) (Default: false) Skip installing packages.
    aliases: -si, --skipInstall
  --skip-git (Boolean) (Default: false) Skip initializing a git repository.
    aliases: -sg, --skipGit
  --skip-tests (Boolean) (Default: false) Skip creating spec files.
    aliases: -st, --skipTests
  --skip-commit (Boolean) (Default: false) Skip committing the first commit to git.
    aliases: -sc, --skipCommit
  --directory (String) The directory name to create the app in.
    aliases: -dir &amp;lt; value &amp;gt;, --directory &amp;lt; value &amp;gt;
  --source-dir (String) (Default: src) The name of the source directory. You can later change the value in &quot;.angular-cli.json&quot; (apps[0].root).
    aliases: -sd &amp;lt; value &amp;gt;, --sourceDir &amp;lt; value &amp;gt;
  --style (String) (Default: css) The style file default extension. Possible values: css, scss, less, sass, styl(stylus). You can later change the value in &quot;.angular-cli.json&quot; (defaults.styleExt).
    aliases: --style &amp;lt; value &amp;gt;
  --prefix (String) (Default: app) The prefix to use for all component selectors. You can later change the value in &quot;.angular-cli.json&quot; (apps[0].prefix).
    aliases: -p &amp;lt; value &amp;gt;, --prefix &amp;lt; value &amp;gt;
  --routing (Boolean) (Default: false) Generate a routing module.
    aliases: --routing
  --inline-style (Boolean) (Default: false) Should have an inline style.
    aliases: -is, --inlineStyle
  --inline-template (Boolean) (Default: false) Should have an inline template.
    aliases: -it, --inlineTemplate
  --minimal (Boolean) (Default: false) Should create a minimal app.
    aliases: --minimal
&lt;/samp&gt;
&lt;/pre&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;ng new my-app&lt;/kbd&gt;
installing ng
  create .editorconfig
  create README.md
  create src/app/app.component.css
  create src/app/app.component.html
  create src/app/app.component.spec.ts
  create src/app/app.component.ts
  create src/app/app.module.ts
  create src/assets/.gitkeep
  create src/environments/environment.prod.ts
  create src/environments/environment.ts
  create src/favicon.ico
  create src/index.html
  create src/main.ts
  create src/polyfills.ts
  create src/styles.css
  create src/test.ts
  create src/tsconfig.app.json
  create src/tsconfig.spec.json
  create src/typings.d.ts
  create .angular-cli.json
  create e2e/app.e2e-spec.ts
  create e2e/app.po.ts
  create e2e/tsconfig.e2e.json
  create .gitignore
  create karma.conf.js
  create package.json
  create protractor.conf.js
  create tsconfig.json
  create tslint.json
You can `ng set --global packageManager=yarn`.
Installing packages for tooling via npm.
        Installed packages for tooling via npm.
Successfully initialized git.
Project 'my-app' successfully created.

&lt;/samp&gt;
&lt;/pre&gt;

&lt;h3 id=&quot;tree&quot;&gt;Tree&lt;/h3&gt;

&lt;p&gt;The project is arranged in the following way:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.
‚îî‚îÄ‚îÄ my-app
    ‚îú‚îÄ‚îÄ e2e                            # end-to-end tests
    ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ app.e2e-spec.ts
    ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ app.po.ts
    ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ tsconfig.e2e.json
    ‚îú‚îÄ‚îÄ karma.conf.js                  # https://karma-runner.github.io/
    ‚îú‚îÄ‚îÄ .editorconfig                  # http://editorconfig.org
    ‚îú‚îÄ‚îÄ .angular-cli.json              # Configuration for Angular CLI
    ‚îú‚îÄ‚îÄ package.json                   # npm - third party packages
    ‚îú‚îÄ‚îÄ protractor.conf.js             # http://www.protractortest.org/#/
    ‚îú‚îÄ‚îÄ README.md
    ‚îú‚îÄ‚îÄ src
    ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ app
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ app.component.css
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ app.component.html
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ app.component.spec.ts
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ app.component.ts       # Defines AppComponent
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ app.module.ts          # Defines AppModule
    ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ assets                     # Static files copied at build time
    ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ environments               # Configurations for each env
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ environment.prod.ts
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ environment.ts
    ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ favicon.ico
    ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ index.html                 # Page served
    ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ main.ts                    # Main entry point of the app 
    ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ polyfills.ts
    ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ styles.css                 # Styles that affect all of your app
    ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ test.ts                    # Main entry point for unit tests
    ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ tsconfig.app.json          # TypeScript compiler config for app
    ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ tsconfig.spec.json         # TypeScript compiler config	for tests
    ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ typings.d.ts
    ‚îú‚îÄ‚îÄ tsconfig.json
    ‚îî‚îÄ‚îÄ tslint.json
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;files&quot;&gt;Files&lt;/h2&gt;

&lt;p&gt;As we see in this particular project structure, the project is full of
HTML and Typescript files (&lt;code class=&quot;highlighter-rouge&quot;&gt;.ts&lt;/code&gt; extension).&lt;/p&gt;

&lt;p&gt;Most relevant files goes inside &lt;code class=&quot;highlighter-rouge&quot;&gt;src&lt;/code&gt; directory, while files outside
&lt;code class=&quot;highlighter-rouge&quot;&gt;src&lt;/code&gt; folder are just meant to support building the app.&lt;/p&gt;

&lt;h2 id=&quot;components&quot;&gt;Components&lt;/h2&gt;

&lt;p&gt;The typescript file located at &lt;code class=&quot;highlighter-rouge&quot;&gt;./src/app/app.component.ts&lt;/code&gt; is a
special one called &lt;strong&gt;root component&lt;/strong&gt; and its noted &lt;code class=&quot;highlighter-rouge&quot;&gt;app-root&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Components&lt;/strong&gt; control a section of the screen called &lt;strong&gt;view&lt;/strong&gt;. They
can be a navigation bar, a list of items, etc.&lt;/p&gt;

&lt;p&gt;Each component can have associated files to define its CSS styling and
HTML template.&lt;/p&gt;

&lt;p&gt;A component contains the &lt;code class=&quot;highlighter-rouge&quot;&gt;AppComponent&lt;/code&gt; class definition, like:&lt;/p&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppComponent&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'This is my component'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and a decorator with for example, data bindings to properties defined
in the class:&lt;/p&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'my-app'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/h1&amp;gt;`&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Double curly braces are the interpolation binding syntax used by
Angular.&lt;/p&gt;

&lt;p&gt;Instead of a literal string as a property value in the Component, a
class can be used:&lt;/p&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Description&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppComponent&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Description&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Some desc'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'my-app'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/h1&amp;gt;`&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;modules&quot;&gt;Modules&lt;/h2&gt;

&lt;p&gt;There is also a special file called &lt;strong&gt;root module&lt;/strong&gt;. It tells
Angular
&lt;a href=&quot;https://angular.io/guide/bootstrapping&quot;&gt;how to assemble the application&lt;/a&gt; and
is located at ` app/app.module.ts`.&lt;/p&gt;

&lt;h2 id=&quot;useful-commands&quot;&gt;Useful commands&lt;/h2&gt;

&lt;p&gt;Commands to work with and without the &lt;code class=&quot;highlighter-rouge&quot;&gt;ng&lt;/code&gt; command line tool.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create a new project based on the QuickStart: &lt;kbd&gt;git clone https://github.com/angular/quickstart.git my-app&lt;/kbd&gt;&lt;/li&gt;
  &lt;li&gt;Install npm packages:  &lt;kbd&gt;npm install&lt;/kbd&gt;&lt;/li&gt;
  &lt;li&gt;Compile and serve: &lt;kbd&gt;npm start&lt;/kbd&gt;&lt;/li&gt;
  &lt;li&gt;Run the TypeScript compiler once: &lt;kbd&gt;npm run build&lt;/kbd&gt;&lt;/li&gt;
  &lt;li&gt;Run the TypeScript compiler in watch mode: &lt;kbd&gt;npm run
build:w&lt;/kbd&gt;&lt;/li&gt;
  &lt;li&gt;Run a light-weight, static file server &lt;a href=&quot;https://www.npmjs.com/package/lite-server&quot;&gt;lite-server&lt;/a&gt; &lt;kbd&gt;npm run serve&lt;/kbd&gt;&lt;/li&gt;
  &lt;li&gt;Karma unit tests (compiles the application, simultaneously re-compiles and runs the karma test-runner): &lt;kbd&gt;npm test&lt;/kbd&gt;&lt;/li&gt;
  &lt;li&gt;Protractor e2e tests (compiles, starts the lite-server and launches Protractor): &lt;kbd&gt;npm run e2e&lt;/kbd&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://angular.io/guide/quickstart&quot;&gt;https://angular.io/guide/quickstart&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/TypeScript&quot;&gt;https://en.wikipedia.org/wiki/TypeScript&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;https://www.typescriptlang.org/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://angular.io/guide/bootstrapping&quot;&gt;https://angular.io/guide/bootstrapping&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/classes.html&quot;&gt;https://www.typescriptlang.org/docs/handbook/classes.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/decorators.html&quot;&gt;https://www.typescriptlang.org/docs/handbook/decorators.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 26 Aug 2017 00:00:00 +0000</pubDate>
        <link>https://simpleit.rocks/angular-framework-notes-a-first-approach/</link>
        <guid isPermaLink="true">https://simpleit.rocks/angular-framework-notes-a-first-approach/</guid>
        
        
        <category>docs</category>
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>Set Up Ubuntu To Serve A Django Website Step By Step</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;This is a guide to have a website in an Ubuntu server using &lt;strong&gt;nginx&lt;/strong&gt;
and &lt;strong&gt;systemd&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Ubuntu uses &lt;em&gt;systemd&lt;/em&gt; to manage system and service daemons and
processes, we will create configuration files to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;create temporary files&lt;/li&gt;
  &lt;li&gt;manage gunicorn system service&lt;/li&gt;
  &lt;li&gt;manage gunicorn system socket&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And lastly configuring &lt;em&gt;nginx&lt;/em&gt; to handle requests.&lt;/p&gt;

&lt;p&gt;We assume the following configuration to set up the server, this is a
basic configuration example to follow the tutorial and be easier to
customize with your own data:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;website domain: &lt;code class=&quot;highlighter-rouge&quot;&gt;example.com&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Django source code located in &lt;code class=&quot;highlighter-rouge&quot;&gt;/home/chengue/sites/example&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;environment variable pointing to production settings:
&lt;code class=&quot;highlighter-rouge&quot;&gt;DJANGO_SETTINGS_MODULE=example.settings.production&lt;/code&gt;`&lt;/li&gt;
  &lt;li&gt;Python virtual environment for the &lt;code class=&quot;highlighter-rouge&quot;&gt;example&lt;/code&gt; project at:
&lt;code class=&quot;highlighter-rouge&quot;&gt;/home/chengue/.virtualenvs/example&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Ubuntu User: chengue&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At the end of the tutorial we will have:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;nginx handling requests to &lt;code class=&quot;highlighter-rouge&quot;&gt;example.com&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;traffic gets redirected from &lt;em&gt;non-www&lt;/em&gt; to &lt;em&gt;www&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;configuring-systemd-services&quot;&gt;Configuring Systemd services&lt;/h2&gt;

&lt;h3 id=&quot;socket&quot;&gt;Socket&lt;/h3&gt;

&lt;p&gt;To handle incoming Gunicorn requests we create a unix socket
controlled by &lt;em&gt;systemd&lt;/em&gt;. As the configuration filename should end in
&lt;code class=&quot;highlighter-rouge&quot;&gt;.socket&lt;/code&gt; we create the following file:
&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/systemd/system/gunicorn.socket&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Unit]
Description=gunicorn socket

[Socket]
ListenStream=/run/gunicorn/socket

[Install]
WantedBy=sockets.target
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p cite=&quot;http://docs.gunicorn.org/en/stable/deploy.html#systemd&quot;&gt;&lt;em&gt;systemd&lt;/em&gt; will listen on this socket and start &lt;strong&gt;Gunicorn&lt;/strong&gt;
automatically in response to traffic.&lt;/p&gt;

&lt;p&gt;This sockets will be used by Gunicorn service using the parameter
&lt;code class=&quot;highlighter-rouge&quot;&gt;--bind unix:/run/gunicorn/socket&lt;/code&gt; in the service file.&lt;/p&gt;

&lt;h3 id=&quot;service&quot;&gt;Service&lt;/h3&gt;

&lt;p&gt;Then the service that use the above socket, In
&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/systemd/system/gunicorn.service&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Unit]
Description=gunicorn daemon
Requires=gunicorn.socket
After=network.target

[Service]
PIDFile=/run/gunicorn/pid
User=chengue
Group=www-data
RuntimeDirectory=gunicorn
WorkingDirectory=/home/chengue/sites/example/example
ExecStart=/home/chengue/.virtualenvs/example/bin/gunicorn \
          --access-logfile /home/chengue/sites/logs/example.access.log \
          --error-logfile /home/chengue/sites/logs/example.error.log \
          --pid /run/gunicorn/pid   \
          --env DJANGO_SETTINGS_MODULE=example.settings.production \
          --bind unix:/run/gunicorn/socket example.wsgi
ExecReload=/bin/kill -s HUP $MAINPID
ExecStop=/bin/kill -s TERM $MAINPID
PrivateTmp=true

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p class=&quot;alert alert-info&quot;&gt;Be sure to adjust &lt;code class=&quot;highlighter-rouge&quot;&gt;WorkingDirectory&lt;/code&gt; to your application root.&lt;/p&gt;

&lt;h3 id=&quot;temporal-file&quot;&gt;Temporal file&lt;/h3&gt;

&lt;p&gt;Temporal files handled by &lt;em&gt;systemd&lt;/em&gt; are located in &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/tmpfiles.d/&lt;/code&gt;,
we create &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/tmpfiles.d/gunicorn.conf&lt;/code&gt; with the following content:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;d /run/gunicorn 0755 chengue www-data -
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p class=&quot;alert alert-info&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;www-data&lt;/code&gt; is the Linux group of &lt;code class=&quot;highlighter-rouge&quot;&gt;nginx&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;web-proxy&quot;&gt;Web proxy&lt;/h2&gt;

&lt;p&gt;Lastly, configure the web proxy to send traffic to the &lt;em&gt;Gunicorn&lt;/em&gt;
socket. Create a virtual site in &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/nginx/sites-available/example.com&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server {
	# redirect www to non-www
    server_name www.example.com;
    return 301 $scheme://example.com$request_uri;
}

server {
	server_name example.com;

	#location /static {
	#    alias /home/chengue/sites/example/static;
	#}

	#location /media {
	#    alias /home/chengue/sites/example/media;
	#}

	location / {
		proxy_set_header Host $host;
		proxy_pass http://unix:/run/gunicorn/socket;
	}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now that we have our &lt;code class=&quot;highlighter-rouge&quot;&gt;example.com&lt;/code&gt; configuration as an available
website in nginx, we should enable it creating a symbolic link in
&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/nginx/sites-enabled/example.com&lt;/code&gt; pointing to the above file:&lt;/p&gt;

&lt;p&gt;&lt;kbd&gt;sudo ln -s /etc/nginx/sites-available/example.com \
    /etc/nginx/sites-enabled/example.com&lt;/kbd&gt;&lt;/p&gt;

&lt;h2 id=&quot;commands&quot;&gt;Commands&lt;/h2&gt;

&lt;h3 id=&quot;enabling-services&quot;&gt;Enabling services&lt;/h3&gt;

&lt;p&gt;Enable services to autostart at boot:&lt;/p&gt;

&lt;p&gt;&lt;kbd&gt;systemctl enable gunicorn.socket&lt;/kbd&gt;
&lt;kbd&gt;systemctl enable nginx.service&lt;/kbd&gt;&lt;/p&gt;

&lt;h3 id=&quot;activate-services&quot;&gt;Activate services&lt;/h3&gt;

&lt;p&gt;Manually activating services:&lt;/p&gt;

&lt;p&gt;&lt;kbd&gt;systemctl start gunicorn.socket&lt;/kbd&gt;
&lt;kbd&gt;systemctl start nginx&lt;/kbd&gt;&lt;/p&gt;

&lt;h3 id=&quot;testing&quot;&gt;Testing&lt;/h3&gt;

&lt;p&gt;To test if Gunicorn works &lt;kbd&gt;curl --unix-socket /run/gunicorn/socket
http&lt;/kbd&gt; should retrieve an HTML from the server.&lt;/p&gt;

&lt;h3 id=&quot;status&quot;&gt;Status&lt;/h3&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;systemctl status gunicorn.socket&lt;/kbd&gt;
‚óè gunicorn.socket - gunicorn socket
   Loaded: loaded (/etc/systemd/system/gunicorn.socket; enabled; vendor preset: enabled)
   Active: active (running) since Mon 2017-07-03 18:52:15 EDT; 2h 58min ago
   Listen: /run/gunicorn/socket (Stream)

Jul 03 18:52:15  systemd[1]: Closed gunicorn socket.
Jul 03 18:52:15  systemd[1]: Stopping gunicorn socket.
Jul 03 18:52:15  systemd[1]: Listening on gunicorn socket.
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;systemctl status gunicorn.service&lt;/kbd&gt;
   Loaded: loaded (/etc/systemd/system/gunicorn.service; disabled; vendor preset: enabled)
   Active: active (running) since Mon 2017-07-03 18:52:15 EDT; 2h 59min ago
 Main PID: 14216 (gunicorn)
    Tasks: 2 (limit: 4915)
   Memory: 41.8M
      CPU: 5.544s
   CGroup: /system.slice/gunicorn.service
           ‚îú‚îÄ14216 /home/chengue/.virtualenvs/example/bin/python3.6 /home/chengue/.virtualenvs/example/bin/gunicorn --access
           ‚îî‚îÄ14252 /home/chengue/.virtualenvs/pullgravity/bin/python3.6 /home/chengue/.virtualenvs/example/bin/gunicorn --access

Jul 03 18:52:15  systemd[1]: Started gunicorn daemon.
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;systemctl status nginx.service&lt;/kbd&gt;
   Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset: enabled)
  Drop-In: /etc/systemd/system/nginx.service.d
           ‚îî‚îÄoverride.conf
   Active: active (running) since Mon 2017-07-03 18:52:21 EDT; 3h 1min ago
     Docs: man:nginx(8)
 Main PID: 14353 (nginx)
    Tasks: 2 (limit: 4915)
   Memory: 2.8M
      CPU: 205ms
   CGroup: /system.slice/nginx.service
           ‚îú‚îÄ14353 nginx: master process /usr/sbin/nginx -g daemon on; master_process on;
           ‚îî‚îÄ14357 nginx: worker process

Jul 03 18:52:21  systemd[1]: Starting A high performance web server and a reverse proxy server...
Jul 03 18:52:21  systemd[1]: Started A high performance web server and a reverse proxy server.
&lt;/samp&gt;
&lt;/pre&gt;

&lt;h3 id=&quot;debugging&quot;&gt;Debugging&lt;/h3&gt;

&lt;p&gt;An useful command to see &lt;em&gt;systemd&lt;/em&gt; logs filtered by service is
&lt;kbd&gt;journalctl&lt;/kbd&gt;, it query the &lt;em&gt;systemd&lt;/em&gt; journal and with the
&lt;code class=&quot;highlighter-rouge&quot;&gt;-u&lt;/code&gt; parameter show messages for the specified systemd unit.&lt;/p&gt;

&lt;p&gt;Using our services:&lt;/p&gt;

&lt;p&gt;&lt;kbd&gt;journalctl -u nginx.service&lt;/kbd&gt;
&lt;kbd&gt;journalctl -u gunicorn.service&lt;/kbd&gt;
&lt;kbd&gt;journalctl -u gunicorn.socket&lt;/kbd&gt;&lt;/p&gt;

&lt;h2 id=&quot;repo&quot;&gt;Repo&lt;/h2&gt;

&lt;p&gt;The files created in this tutorial are available in this Github repository: &lt;a href=&quot;https://github.com/marcanuy/django-deploy-guide&quot;&gt;https://github.com/marcanuy/django-deploy-guide&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Official page &lt;a href=&quot;https://www.freedesktop.org/wiki/Software/systemd/&quot;&gt;https://www.freedesktop.org/wiki/Software/systemd/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Gunicorn systemd section &lt;a href=&quot;http://docs.gunicorn.org/en/stable/deploy.html#systemd&quot;&gt;http://docs.gunicorn.org/en/stable/deploy.html#systemd&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Linux manual pages:
    &lt;ul&gt;
      &lt;li&gt;&lt;kbd&gt;man systemd.socket&lt;/kbd&gt;&lt;/li&gt;
      &lt;li&gt;&lt;kbd&gt;man systemd.service&lt;/kbd&gt;&lt;/li&gt;
      &lt;li&gt;&lt;kbd&gt;man tmpfiles.d&lt;/kbd&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Unix socket &lt;a href=&quot;https://en.wikipedia.org/wiki/Unix_domain_socket&quot;&gt;https://en.wikipedia.org/wiki/Unix_domain_socket&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;nginx proxy &lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass&quot;&gt;http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 03 Jul 2017 00:00:00 +0000</pubDate>
        <link>https://simpleit.rocks/set-up-ubuntu-to-serve-a-django-website-step-by-step/</link>
        <guid isPermaLink="true">https://simpleit.rocks/set-up-ubuntu-to-serve-a-django-website-step-by-step/</guid>
        
        
        <category>docs</category>
        
        <category>python</category>
        
        <category>django</category>
        
      </item>
    
      <item>
        <title>How To Download A Website With Wget The Right Way</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;To download an entire website from Linux it is often recommended to
use &lt;code class=&quot;highlighter-rouge&quot;&gt;wget&lt;/code&gt;, however, it must be done using the right parameters or the
downloaded website won‚Äôt be similar to the original one, with probably
relative broken links. This tutorial explores the right combination to
download a website:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;converting relative links to full paths so they can be browsed
offline.&lt;/li&gt;
  &lt;li&gt;preventing requesting too many web pages too fast, overloading the server
and possibly being blocked from requesting more.&lt;/li&gt;
  &lt;li&gt;avoid overwriting or creating duplicates of already downloaded files.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;wget-summary&quot;&gt;Wget summary&lt;/h2&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://www.gnu.org/software/wget/manual/html_node/Overview.html#Overview&quot;&gt;
  &lt;p&gt;GNU Wget is a free utility for non-interactive download of files
from the Web&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;&lt;a href=&quot;https://www.gnu.org/software/wget/manual/html_node/Overview.html#Overview&quot;&gt;wget
manual Overview&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;wget&lt;/code&gt; command is very popular in Linux and present in most
distributions.&lt;/p&gt;

&lt;p&gt;To download an entire website we use the following parameters:&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--wait=2&lt;/code&gt;&lt;/dt&gt;
  &lt;dd&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Wait the specified number of seconds between the retrievals. In
this case 2 seconds.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/dd&gt;
  &lt;dt&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--limit-rate=20K&lt;/code&gt;&lt;/dt&gt;
  &lt;dd&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Limit the download speed to amount bytes per second.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/dd&gt;
  &lt;dt&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--recursive&lt;/code&gt;&lt;/dt&gt;
  &lt;dd&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Turn on recursive retrieving. The default maximum depth is 5.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/dd&gt;
  &lt;dd&gt;If the website has more levels than 5, then you can specify it with &lt;code class=&quot;highlighter-rouge&quot;&gt;--level=depth&lt;/code&gt;&lt;/dd&gt;
  &lt;dt&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--page-requisites&lt;/code&gt;&lt;/dt&gt;
  &lt;dd&gt;
    &lt;blockquote&gt;
      &lt;p&gt;download all the files that are necessary to properly display a
given HTML page.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/dd&gt;
  &lt;dd&gt;
    &lt;blockquote&gt;
      &lt;p&gt;This includes such things as inlined images, sounds, and
referenced stylesheets.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/dd&gt;
  &lt;dt&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--user-agent=Mozilla&lt;/code&gt;`&lt;/dt&gt;
  &lt;dd&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Identify as Mozilla to the HTTP server.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/dd&gt;
  &lt;dt&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--no-parent&lt;/code&gt;&lt;/dt&gt;
  &lt;dd&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Do not ever ascend to the parent directory when retrieving
recursively.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/dd&gt;
  &lt;dt&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--convert-links&lt;/code&gt;&lt;/dt&gt;
  &lt;dd&gt;
    &lt;blockquote&gt;
      &lt;p&gt;After the download is complete, convert the links in the document
to make them suitable for local viewing.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/dd&gt;
  &lt;dt&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--adjust-extension&lt;/code&gt;&lt;/dt&gt;
  &lt;dd&gt;
    &lt;blockquote&gt;
      &lt;p&gt;If a file of type application/xhtml+xml or text/html is downloaded
and the URL does not end with the regexp &lt;code class=&quot;highlighter-rouge&quot;&gt;\.[Hh][Tt][Mm][Ll]?&lt;/code&gt;, this
option will cause the suffix .html to be appended to the local
filename.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/dd&gt;
  &lt;dt&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--no-clobber&lt;/code&gt;&lt;/dt&gt;
  &lt;dd&gt;
    &lt;blockquote&gt;
      &lt;p&gt;When running Wget with -r, re-downloading a file will result in
the new copy simply overwriting the old.  Adding -nc will prevent
this behavior, instead causing the original version to be preserved
and any newer copies on the server to be ignored.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Summarizing, these are the needed parameters:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget --wait&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	 --limit-rate&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;20K &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	 --recursive
	 --page-requisites &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	 --user-agent&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Mozilla &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	 --no-parent &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	 --convert-links &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	 --adjust-extension &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	 --no-clobber &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	 https://example.com
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Or in one line:&lt;/p&gt;

&lt;p&gt;&lt;kbd&gt;wget --wait=2 --limit-rate=20K --recursive --page-requisites --user-agent=Mozilla --no-parent --convert-links --adjust-extension --no-clobber https://example.com&lt;/kbd&gt;&lt;/p&gt;

&lt;h2 id=&quot;example&quot;&gt;Example&lt;/h2&gt;

&lt;p&gt;Let‚Äôs try to download the &lt;a href=&quot;https://example.com&quot;&gt;https://example.com&lt;/a&gt; website (single page)
to see how verbose is &lt;code class=&quot;highlighter-rouge&quot;&gt;wget&lt;/code&gt; and how it behaves.&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;wget --wait=2
--limit-rate=20K --recursive --page-requisites --user-agent=Mozilla
--no-parent --convert-links --adjust-extension --no-clobber  https://example.com&lt;/kbd&gt;
--2017-06-30 19:48:46--  https://example.com/
Resolving example.com (example.com)... 93.184.216.34
Connecting to example.com (example.com)|93.184.216.34|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 1270 (1,2K) [text/html]
Saving to: ‚Äòexample.com/index.html‚Äô

example.com/index.html            100%[===========================================================&amp;gt;]   1,24K  --.-KB/s    in 0,003s

2017-06-30 19:48:46 (371 KB/s) - ‚Äòexample.com/index.html‚Äô saved [1270/1270]

FINISHED --2017-06-30 19:48:46--
Total wall clock time: 0,6s
Downloaded: 1 files, 1,2K in 0,003s (371 KB/s)
Converting links in example.com/index.html... nothing to do.
Converted links in 1 files in 0 seconds.
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;tree example.com/&lt;/kbd&gt;
example.com/
‚îî‚îÄ‚îÄ index.html

0 directories, 1 file

&lt;/samp&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;wget&lt;/code&gt; is a fantastic command line tool, it has everything you will
ever need without having to use any other GUI tool, just be sure to
browse its manual for the right parameters you want.&lt;/p&gt;

&lt;p&gt;The above parameters combination will make you have a browseable
website locally.&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;wget&lt;/code&gt; manual &lt;a href=&quot;https://www.gnu.org/software/wget/&quot;&gt;https://www.gnu.org/software/wget/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 30 Jun 2017 00:00:00 +0000</pubDate>
        <link>https://simpleit.rocks/how-to-download-a-website-with-wget-the-right-way/</link>
        <guid isPermaLink="true">https://simpleit.rocks/how-to-download-a-website-with-wget-the-right-way/</guid>
        
        
        <category>docs</category>
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>Writing Alternating Between English And Spanish In Emacs</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;If you write in Spanish and English then you will have to choose
between using a keyboard with Spanish or English layout. No matter
which one you select, when you write in the other language you will
have to choose a strategy to handle the letters that are present in
one language that are not in the other one.&lt;/p&gt;

&lt;p&gt;This is a quick overview to handle this situation with an English
keyboard layout (i.e.: not having &lt;code class=&quot;highlighter-rouge&quot;&gt;√±&lt;/code&gt;, and tildes &lt;code class=&quot;highlighter-rouge&quot;&gt;√≥&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;√°&lt;/code&gt;, etc)&lt;/p&gt;

&lt;h2 id=&quot;changing-the-keyboard-layout&quot;&gt;Changing the keyboard layout&lt;/h2&gt;

&lt;p&gt;In Emacs you can quickly change the layout with &lt;code class=&quot;highlighter-rouge&quot;&gt;set-input-method&lt;/code&gt;,
which will change the keyboard layout for the current buffer.&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot;&gt;
  &lt;p&gt;set-input-method:
 Select and activate input method INPUT-METHOD for the current buffer.
 This also sets the default input method to the one you specify.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt;mule-cmds.el &lt;cite&gt;Emacs manual&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are three alternatives for &lt;strong&gt;Spanish&lt;/strong&gt;:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;spanish-keyboard&lt;/li&gt;
  &lt;li&gt;spanish-postfix&lt;/li&gt;
  &lt;li&gt;spanish-prefix&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;check-layouts&quot;&gt;Check layouts&lt;/h2&gt;

&lt;p&gt;What layout each keyboard uses? Let‚Äôs find out with
&lt;kbd&gt;quail-show-keyboard-layout&lt;/kbd&gt;, in each input method it prints
the recognized layout:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;spanish-keyboard&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Keyboard layout (keyboard type: standard)

     +----------------------------------------------------------------+
      | 1 ! | 2 &quot; | 3 ¬∑ | 4 $ | 5 % | 6 &amp;amp; | 7 / | 8 ( | 9 ) | 0 = | ' ? | ¬° ¬ø | √≠ √ç |
     +----------------------------------------------------------------+
        | q Q | w W | e E | r R | t T | y Y | u U | i I | o O | p P | √© √â | √≥ √ì |
       +------------------------------------------------------------+
         | a A | s S | d D | f F | g G | h H | j J | k K | l L | √± √ë | √° √Å | √∫ √ö |
        +-----------------------------------------------------------+
           | z Z | x X | c C | v V | b B | n N | m M | , ; | . : | - _ |
          +-------------------------------------------------+
		    +-----------------------------+
		    |          space bar          |
		    +-----------------------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;spanish-postfix&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Keyboard layout (keyboard type: standard)

     +----------------------------------------------------------------+
      | 1 ! | 2 @ | 3 # | 4 $ | 5 % | 6 ^ | 7 &amp;amp; | 8 * | 9 ( | 0 ) | - _ | = + | ` ~ |
     +----------------------------------------------------------------+
        | q Q | w W | e E | r R | t T | y Y | u U | i I | o O | p P | [ { | ] } |
       +------------------------------------------------------------+
         | a A | s S | d D | f F | g G | h H | j J | k K | l L | ; : | ' &quot; | \ | |
        +-----------------------------------------------------------+
           | z Z | x X | c C | v V | b B | n N | m M | , &amp;lt; | . &amp;gt; | / ? |
          +-------------------------------------------------+
		    +-----------------------------+
		    |          space bar          |
		    +-----------------------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;spanish-prefix&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Keyboard layout (keyboard type: standard)

     +----------------------------------------------------------------+
      | 1 ! | 2 @ | 3 # | 4 $ | 5 % | 6 ^ | 7 &amp;amp; | 8 * | 9 ( | 0 ) | - _ | = + | ` ~ |
     +----------------------------------------------------------------+
        | q Q | w W | e E | r R | t T | y Y | u U | i I | o O | p P | [ { | ] } |
       +------------------------------------------------------------+
         | a A | s S | d D | f F | g G | h H | j J | k K | l L | ; : | ' &quot; | \ | |
        +-----------------------------------------------------------+
           | z Z | x X | c C | v V | b B | n N | m M | , &amp;lt; | . &amp;gt; | / ? |
          +-------------------------------------------------+
		    +-----------------------------+
		    |          space bar          |
		    +-----------------------------+

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;choosing-the-layout&quot;&gt;Choosing the layout&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;spanish-keyboard&lt;/strong&gt;: while having all the typical Spanish letters
their own key, I don‚Äôt find it pretty close to any other keyboard I
have ever tried.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;spanish-postfix&lt;/strong&gt;: expects to press tildes &lt;strong&gt;after&lt;/strong&gt; the desired
letter, for example &lt;code class=&quot;highlighter-rouge&quot;&gt;o+tilde=√≥&lt;/code&gt; which I find a bit unnatural.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;spanish-prefix&lt;/strong&gt;: The one that resembles more the classical Spanish keyboard behaviour
is the &lt;strong&gt;spanish-prefix&lt;/strong&gt; one. In this one you will write tildes
before the letter, e.g.:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;to write &lt;strong&gt;√≥&lt;/strong&gt;: press the tilde key and &lt;strong&gt;then&lt;/strong&gt; the &lt;kbd&gt;o&lt;/kbd&gt;.&lt;/li&gt;
      &lt;li&gt;to write &lt;strong&gt;√±&lt;/strong&gt;: press the &lt;kbd&gt;~&lt;/kbd&gt; symbol and &lt;strong&gt;then&lt;/strong&gt; &lt;kbd&gt;o&lt;/kbd&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;After executing &lt;kbd&gt;set-input-method&lt;/kbd&gt; and selecting
&lt;strong&gt;spanish-prefix&lt;/strong&gt;, writing in each language is as easy as switching
them with &lt;kbd&gt;C-\&lt;/kbd&gt; &lt;em&gt;(toggle-input-method)&lt;/em&gt; and have a pretty close experience as using a
Spanish keyboard in an English keyboard layout.&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot;&gt;
  &lt;p&gt;toggle-input-method:&lt;/p&gt;

  &lt;p&gt;Enable or disable multilingual text input method for the current
  buffer. Only one input method can be enabled at any time in a given buffer.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt;mule-cmds.el &lt;cite&gt;Emacs manual&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Sat, 17 Jun 2017 00:00:00 +0000</pubDate>
        <link>https://simpleit.rocks/writing-alternating-between-english-and-spanish-in-emacs/</link>
        <guid isPermaLink="true">https://simpleit.rocks/writing-alternating-between-english-and-spanish-in-emacs/</guid>
        
        
        <category>docs</category>
        
        <category>lisp</category>
        
        <category>emacs</category>
        
      </item>
    
      <item>
        <title>Writing In Emacs Checking Spelling Style And Grammar</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;Emacs comes with several options to make your writing better by
avoiding mistakes, controlling typos and grammar, like the
ones described in the Emacs
manual:
&lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Spelling.html&quot;&gt;Checking and Correcting Spelling&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After getting familiar with them you will probably want to
&lt;strong&gt;automatically&lt;/strong&gt; enable them in text modes (like markdown), and even
controlling your source code comments and strings.&lt;/p&gt;

&lt;p&gt;This guide shows how to make it with two of the best packages for
writing:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.emacswiki.org/emacs/FlySpell&quot;&gt;flyspell-mode&lt;/a&gt;&lt;/strong&gt;: Flyspell enables on-the-fly spell checking, highlighting incorrect words as soon as they are completed.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/mhayashi1120/Emacs-langtool&quot;&gt;langtool&lt;/a&gt;&lt;/strong&gt;: is a grammar check utility using &lt;a href=&quot;http://languagetool.org/&quot;&gt;LanguageTool&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;LanguageTool&lt;/em&gt; is &lt;cite&gt;an Open Source proof¬≠reading program for
English, Spanish, and more than 20 other languages. It finds many
errors that a simple spell checker cannot detect and several grammar
problems.&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;After having both packages installed and properly configured, we will
activate &lt;strong&gt;flyspell-mode&lt;/strong&gt; as soon as we load a text mode, and check
for grammatical errors each time we save the file.&lt;/p&gt;

&lt;h2 id=&quot;activate-flyspell-mode-when-loading-text-modes&quot;&gt;Activate flyspell-mode when loading text-modes&lt;/h2&gt;

&lt;p&gt;I find very helpful to activate &lt;code class=&quot;highlighter-rouge&quot;&gt;flyspell-mode&lt;/code&gt; as soon as I load any
&lt;em&gt;Markdown&lt;/em&gt; file, as &lt;code class=&quot;highlighter-rouge&quot;&gt;markdown-mode&lt;/code&gt; is a derivate of &lt;code class=&quot;highlighter-rouge&quot;&gt;text-mode&lt;/code&gt; you
can choose what works better for you. In this case I will activate it
for &lt;code class=&quot;highlighter-rouge&quot;&gt;text-mode&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To load &lt;code class=&quot;highlighter-rouge&quot;&gt;flyspell-mode&lt;/code&gt; when loading a file in any of the recognized
&lt;code class=&quot;highlighter-rouge&quot;&gt;text-mode&lt;/code&gt;‚Äôs, we load it with:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-lisp&quot;&gt;(dolist (hook '(text-mode-hook))
    (add-hook hook (lambda () (flyspell-mode 1))))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And we can also avoid loading them in any other specific &lt;code class=&quot;highlighter-rouge&quot;&gt;text-mode&lt;/code&gt;,
for example &lt;code class=&quot;highlighter-rouge&quot;&gt;change-log-mode&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;log-edit-mode&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-lisp&quot;&gt;(dolist (hook '(change-log-mode-hook log-edit-mode-hook))
    (add-hook hook (lambda () (flyspell-mode -1))))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To also use &lt;code class=&quot;highlighter-rouge&quot;&gt;flyspell-mode&lt;/code&gt; to check source code comments and strings there is a
special mode called &lt;code class=&quot;highlighter-rouge&quot;&gt;flyspell-prog-mode&lt;/code&gt;, for example we can enable
for &lt;code class=&quot;highlighter-rouge&quot;&gt;python-mode&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-lisp&quot;&gt;(add-hook 'python-mode-hook
    (lambda ()
    (flyspell-prog-mode)
    ))
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;check-grammar-after-saving-a-text-file-with-languagetools&quot;&gt;Check grammar after saving a text file with LanguageTools&lt;/h2&gt;

&lt;p&gt;To check a text buffer and light up errors with &lt;code class=&quot;highlighter-rouge&quot;&gt;langtool&lt;/code&gt; we use the
&lt;code class=&quot;highlighter-rouge&quot;&gt;langtool-check&lt;/code&gt; function each time we save the buffer using
&lt;code class=&quot;highlighter-rouge&quot;&gt;after-save-hook&lt;/code&gt;, in this case I will activate it only for &lt;code class=&quot;highlighter-rouge&quot;&gt;markdown-mode&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-lisp&quot;&gt;(add-hook 'markdown-mode-hook
          (lambda () 
             (add-hook 'after-save-hook 'langtool-check nil 'make-it-local)))
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;In Emacs is easy to forget to check for errors manually, enabling them
automatically is a great way to minimize errors that can be avoided
easily and improving our documents legibility.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;flyspell-mode&lt;/em&gt;: &lt;a href=&quot;https://www.emacswiki.org/emacs/FlySpell&quot;&gt;https://www.emacswiki.org/emacs/FlySpell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;langtool&lt;/em&gt;: &lt;a href=&quot;https://github.com/mhayashi1120/Emacs-langtool&quot;&gt;https://github.com/mhayashi1120/Emacs-langtool&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;LanguageTool&lt;/em&gt;: &lt;a href=&quot;http://languagetool.org/&quot;&gt;http://languagetool.org/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/users/6148/trey-jackson&quot;&gt;Trey Jackson&lt;/a&gt;
answer to &lt;a href=&quot;https://stackoverflow.com/a/6141681/1165509&quot;&gt;How to add a hook to only run in a particular mode?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 10 Jun 2017 00:00:00 +0000</pubDate>
        <link>https://simpleit.rocks/writing-in-emacs-checking-spelling-style-and-grammar/</link>
        <guid isPermaLink="true">https://simpleit.rocks/writing-in-emacs-checking-spelling-style-and-grammar/</guid>
        
        
        <category>docs</category>
        
        <category>lisp</category>
        
        <category>emacs</category>
        
      </item>
    
      <item>
        <title>Start Emacs in Ubuntu The Right Way</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;Emacs can
be
&lt;a href=&quot;http://www.geekherocomic.com/2009/02/02/emacs-vs-vim/&quot;&gt;slow to start up&lt;/a&gt;,
if you use it constantly this can be a problem.&lt;/p&gt;

&lt;p&gt;Fortunately, there is a &lt;code class=&quot;highlighter-rouge&quot;&gt;daemon&lt;/code&gt; version of Emacs that you can start
once per session, loading the initialization file, and then connect to
the running process with &lt;kbd&gt;emacsclient&lt;/kbd&gt; fast.&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot;&gt;
  &lt;p&gt;‚Äìdaemon
	 Start  Emacs  as  a daemon, enabling the Emacs server and disconnecting from the terminal.  You can then use
	 the emacsclient command to connect to the server (see emacsclient(1)).&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;Emacs man page&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;p&gt;From Ubuntu 15.04, &lt;a href=&quot;https://www.freedesktop.org/wiki/Software/systemd&quot;&gt;systemd&lt;/a&gt; has become the default init system.&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://www.freedesktop.org/wiki/Software/systemd/&quot;&gt;
  &lt;p&gt;systemd is a suite of basic building blocks for a Linux system. It
provides a system and service manager that runs as PID 1 and starts
the rest of the system.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;&lt;a href=&quot;https://www.freedesktop.org/wiki/Software/systemd/&quot;&gt;systemd System and Service Manager&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this tutorial we will create a new &lt;em&gt;systemd&lt;/em&gt; service to handle the
Emacs server so we will be able to &lt;code class=&quot;highlighter-rouge&quot;&gt;start&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;stop&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;restart&lt;/code&gt;,
&lt;code class=&quot;highlighter-rouge&quot;&gt;enable&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;disable&lt;/code&gt; the service as any other Linux service.&lt;/p&gt;

&lt;h2 id=&quot;systemd-unit&quot;&gt;systemd Unit&lt;/h2&gt;

&lt;p&gt;To turn Emacs into a &lt;em&gt;systemd&lt;/em&gt; service that can be started automatically
during system startup we will create a service to start the daemon.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;systemd&lt;/em&gt; can manage services under the user‚Äôs control with a
per-user &lt;em&gt;systemd&lt;/em&gt; instance, enabling users to handle their own units.&lt;/p&gt;

&lt;p&gt;User services like this one, should be placed in
&lt;code class=&quot;highlighter-rouge&quot;&gt;~/.config/systemd/user/&lt;/code&gt; so then we will be able to run them with
&lt;kbd&gt;systemctl --user enable *service*&lt;/kbd&gt;.&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://wiki.archlinux.org/index.php/Systemd/User#Basic_setup&quot;&gt;
  &lt;p&gt;‚Äìuser
   Talk to the service manager of the calling user, rather than the service manager of the system.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;&lt;a href=&quot;https://wiki.archlinux.org/index.php/Systemd/User#Basic_setup&quot;&gt;systemctl --help&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;p&gt;The resources that &lt;em&gt;systemd&lt;/em&gt; knows how to manage are called &lt;em&gt;units&lt;/em&gt;.&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://www.freedesktop.org/software/systemd/man/systemd.service.html&quot;&gt;
  &lt;p&gt;A unit configuration file whose name ends in &lt;code class=&quot;highlighter-rouge&quot;&gt;.service&lt;/code&gt; encodes
information about a process controlled and supervised by systemd.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;&lt;a href=&quot;https://www.freedesktop.org/software/systemd/man/systemd.service.html&quot;&gt;systemd.service ‚Äî Service unit configuration&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;p class=&quot;alert alert-danger&quot;&gt;&lt;em&gt;systemd&lt;/em&gt; ‚Äìuser instance is a per-user process, and not per-session.&lt;/p&gt;

&lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.config/systemd/user/emacs.service&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Unit]
Description=Emacs Daemon

[Service]
Type=forking
ExecStart=/usr/bin/emacs --daemon
ExecStop=/usr/bin/emacsclient --eval &quot;(progn (setq kill-emacs-hook 'nil) (kill-emacs))&quot;
Restart=always

[Install]
WantedBy=default.target
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;start-server&quot;&gt;Start server&lt;/h2&gt;

&lt;p&gt;Now we enable the &lt;em&gt;unit&lt;/em&gt; to be started at login with &lt;kbd&gt;systemctl
--user enable emacs.service&lt;/kbd&gt; and start the service for the
current session &lt;kbd&gt;systemctl --user start emacs.service&lt;/kbd&gt;:&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;systemctl --user enable emacs.service&lt;/kbd&gt;
Created symlink ~/.config/systemd/user/default.target.wants/emacs.service ‚Üí ~/.config/systemd/user/emacs.service.
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;tree .config/systemd/user/&lt;/kbd&gt;
.config/systemd/user/
‚îú‚îÄ‚îÄ default.target.wants
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ emacs.service -&amp;gt; ~/.config/systemd/user/emacs.service
‚îî‚îÄ‚îÄ emacs.service

1 directory, 2 files
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;systemctl --user list-unit-files|grep emacs&lt;/kbd&gt;
emacs.service                           enabled
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;systemctl --user status emacs.service&lt;/kbd&gt;
‚óè emacs.service - Emacs Daemon
   Loaded: loaded (~/.config/systemd/user/emacs.service; enabled; vendor preset: enabled)
   Active: inactive (dead)
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;systemctl --user start emacs.service&lt;/kbd&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;systemctl --user status emacs.service&lt;/kbd&gt;
   Loaded: loaded (~/.config/systemd/user/emacs.service; enabled; vendor preset: enabled)
   Active: active (running) since Sat 2017-06-10 15:13:33 -03; 1min 23s ago
  Process: 22639 ExecStop=/usr/bin/emacsclient --eval (progn (setq kill-emacs-hook 'nil) (kill-emacs)) (code=exited, status=0/SUCCESS)
  Process: 22782 ExecStart=/usr/bin/emacs --daemon (code=exited, status=0/SUCCESS)
 Main PID: 22783 (emacs)
   CGroup: /user.slice/user-1000.slice/user@1000.service/emacs.service
           ‚îî‚îÄ22783 /usr/bin/emacs --daemon

jun 10 15:13:30 scarone emacs[22782]: ad-handle-definition: ‚Äòmoccur-mode‚Äô got redefined
jun 10 15:13:30 scarone emacs[22782]: ad-handle-definition: ‚Äòmoccur-grep-mode‚Äô got redefined
jun 10 15:13:30 scarone emacs[22782]: Loading ~/.emacs.d/.mc-lists.el (source)...
jun 10 15:13:30 scarone emacs[22782]: Loading ~/.emacs.d/.mc-lists.el (source)...done
jun 10 15:13:31 scarone emacs[22782]: [yas] Prepared just-in-time loading of snippets successfully.
jun 10 15:13:32 scarone emacs[22782]: [yas] Prepared just-in-time loading of snippets successfully.
jun 10 15:13:32 scarone emacs[22782]: Turning on magit-auto-revert-mode...
jun 10 15:13:32 scarone emacs[22782]: Turning on magit-auto-revert-mode...done
jun 10 15:13:33 scarone emacs[22782]: Starting Emacs daemon.
jun 10 15:13:33 scarone systemd[1858]: Started Emacs Daemon.

&lt;/samp&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;final-tweaks&quot;&gt;Final tweaks&lt;/h2&gt;

&lt;h3 id=&quot;command-aliases&quot;&gt;Command aliases&lt;/h3&gt;

&lt;p&gt;I‚Äôve &lt;a href=&quot;https://www.emacswiki.org/emacs/EmacsAsDaemon&quot;&gt;found&lt;/a&gt; these
aliases helpful to have at hand:&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;emacsclient -t&lt;/dt&gt;
  &lt;dd&gt;open a new Emacs frame on the current terminal (similar to &lt;code class=&quot;highlighter-rouge&quot;&gt;emacs -nw&lt;/code&gt;)&lt;/dd&gt;
  &lt;dt&gt;emacsclient -c -a emacs&lt;/dt&gt;
  &lt;dd&gt;&lt;strong&gt;-c&lt;/strong&gt; create a new frame instead of trying to use the current Emacs frame&lt;/dd&gt;
  &lt;dd&gt;&lt;strong&gt;-a&lt;/strong&gt; ‚Äìalternate-editor=EDITOR, if  the  Emacs  server  is not running, run the specified editor instead.&lt;/dd&gt;
&lt;/dl&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;emax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;emacsclient -t&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;semac&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sudo emacsclient -t&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;emacsc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;emacsclient -c -a emacs&quot;&lt;/span&gt;           &lt;span class=&quot;c&quot;&gt;# new - opens the GUI with alternate non-daemon&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;default-editor&quot;&gt;Default editor&lt;/h3&gt;

&lt;p&gt;Finally, set the &lt;code class=&quot;highlighter-rouge&quot;&gt;EDITOR&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;VISUAL&lt;/code&gt; environment variables so
&lt;code class=&quot;highlighter-rouge&quot;&gt;emacs&lt;/code&gt; is your default editor:&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;EDITOR&lt;/dt&gt;
  &lt;dd&gt;The name of the lightweight text editor&lt;/dd&gt;
  &lt;dt&gt;VISUAL&lt;/dt&gt;
  &lt;dd&gt;command to run the full-fledged editor&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;.bashrc&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ALTERNATE_EDITOR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# $EDITOR should open in terminal&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;EDITOR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;emacsclient -t&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# $VISUAL opens in GUI with non-daemon as alternate&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;VISUAL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;emacsclient -c -a emacs&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;We created a script to run like a native Ubuntu service, then added
some aliases and defined environment variables. Now we have a better
experience in Ubuntu using Emacs with faster loading times and more
integrated to the OS.&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;systemd/User &lt;a href=&quot;https://wiki.archlinux.org/index.php/Systemd/User#Basic_setup&quot;&gt;https://wiki.archlinux.org/index.php/Systemd/User#Basic_setup&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;EmacsAsDaemon &lt;a href=&quot;https://www.emacswiki.org/emacs/EmacsAsDaemon&quot;&gt;https://www.emacswiki.org/emacs/EmacsAsDaemon&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.freedesktop.org/software/systemd/man/systemd.service.html&quot;&gt;https://www.freedesktop.org/software/systemd/man/systemd.service.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://taingram.org/2017/05/09/using-emacsclient-to-speed-up-editing/&quot;&gt;Using emacsclient to Speed up Editing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 10 Jun 2017 00:00:00 +0000</pubDate>
        <link>https://simpleit.rocks/start-emacs-in-ubuntu-the-right-way/</link>
        <guid isPermaLink="true">https://simpleit.rocks/start-emacs-in-ubuntu-the-right-way/</guid>
        
        
        <category>docs</category>
        
        <category>linux</category>
        
        <category>ubuntu</category>
        
      </item>
    
      <item>
        <title>How To Search Packages Using Yarn</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;How to have the &lt;em&gt;search&lt;/em&gt; functionailty like &lt;code class=&quot;highlighter-rouge&quot;&gt;npm search&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;bower
search&lt;/code&gt; in Yarn, or simply look for packages in a browser.&lt;/p&gt;

&lt;h2 id=&quot;options&quot;&gt;Options&lt;/h2&gt;

&lt;h3 id=&quot;cli-search&quot;&gt;CLI search&lt;/h3&gt;

&lt;p&gt;Search yarn packages in command line using &lt;a href=&quot;https://github.com/npms-io/npms-cli&quot;&gt;npms-cli&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;Install &lt;code class=&quot;highlighter-rouge&quot;&gt;npms-cli&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yarn global add npms-cli
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;yarn global add npms-cli&lt;/kbd&gt;
yarn global v0.24.5
[1/4] Resolving packages...
[2/4] Fetching packages...
[3/4] Linking dependencies...
[4/4] Building fresh packages...
success Installed &quot;npms-cli@1.6.0&quot; with binaries:
      - npms
Done in 14.05s.
&lt;/samp&gt;
&lt;/pre&gt;

&lt;p&gt;Then you will have available &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/bin/npms&lt;/code&gt; and can search like:
&lt;code class=&quot;highlighter-rouge&quot;&gt;npms search &amp;lt;desired package&amp;gt;&lt;/code&gt;, for example for the package &lt;code class=&quot;highlighter-rouge&quot;&gt;font-awesome&lt;/code&gt;:&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;npms search font-awesome&lt;/kbd&gt;
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ Package                                                                     ‚îÇ Quality ‚îÇ Popularity ‚îÇ Maintenance ‚îÇ Score ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ font-awesome ‚Ä¢ https://github.com/FortAwesome/Font-Awesome                  ‚îÇ         ‚îÇ            ‚îÇ             ‚îÇ       ‚îÇ
‚îÇ The iconic font and CSS framework                                           ‚îÇ   83    ‚îÇ     71     ‚îÇ     38      ‚îÇ  63   ‚îÇ
‚îÇ updated 7 months ago by juliankrispel                                       ‚îÇ         ‚îÇ            ‚îÇ             ‚îÇ       ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ ember-font-awesome ‚Ä¢ https://github.com/martndemus/ember-font-awesome       ‚îÇ         ‚îÇ            ‚îÇ             ‚îÇ       ‚îÇ
‚îÇ An ember-cli addon for using Font Awesome icons in Ember applications.      ‚îÇ   89    ‚îÇ     22     ‚îÇ     100     ‚îÇ  70   ‚îÇ
‚îÇ updated 2 months ago by martndemus                                          ‚îÇ         ‚îÇ            ‚îÇ             ‚îÇ       ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ font-awesome-filetypes ‚Ä¢ https://github.com/spatie/font-awesome-filetypes   ‚îÇ         ‚îÇ            ‚îÇ             ‚îÇ       ‚îÇ
‚îÇ Helper to retrieve the Font Awesome icon for a specific file extension      ‚îÇ   95    ‚îÇ     9      ‚îÇ     100     ‚îÇ  67   ‚îÇ
‚îÇ updated 2 years ago by sebastiandedeyne                                     ‚îÇ         ‚îÇ            ‚îÇ             ‚îÇ       ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
....
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
&lt;/samp&gt;
&lt;/pre&gt;

&lt;h3 id=&quot;search-with-browser&quot;&gt;Search with browser&lt;/h3&gt;

&lt;p&gt;You can also search them using &lt;code class=&quot;highlighter-rouge&quot;&gt;https://npms.io/search?q=&amp;lt;desired
package&amp;gt;&lt;/code&gt;:&lt;/p&gt;

&lt;form action=&quot;https://npms.io/search&quot; method=&quot;get&quot; target=&quot;_blank&quot;&gt;
  &lt;div class=&quot;form-group&quot;&gt;
    &lt;label for=&quot;packageSearch&quot;&gt;Package Search&lt;/label&gt;
    &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;q&quot; aria-describedby=&quot;packageSearch&quot; placeholder=&quot;Enter package name&quot; name=&quot;q&quot; /&gt;
  &lt;/div&gt;
  &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot;&gt;Search&lt;/button&gt;
&lt;/form&gt;
</description>
        <pubDate>Sat, 03 Jun 2017 00:00:00 +0000</pubDate>
        <link>https://simpleit.rocks/how-to-search-packages-using-yarn/</link>
        <guid isPermaLink="true">https://simpleit.rocks/how-to-search-packages-using-yarn/</guid>
        
        
        <category>docs</category>
        
        <category>javascript</category>
        
        <category>yarn</category>
        
      </item>
    
      <item>
        <title>How To Uninstall Old Versions Of Ruby Gems</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;Chances are that if you have been using Ruby for a while, your system
will be full of &lt;a href=&quot;https://rubygems.org/&quot;&gt;gems&lt;/a&gt; and more specifically,
&lt;strong&gt;outdated gems&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Every time you perform an update with &lt;kbd&gt;$ gem update&lt;/kbd&gt; the
default behaviour is to install a new gem version &lt;strong&gt;maintaining&lt;/strong&gt; the
older one.&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot;&gt;
  &lt;p&gt;The update command does not remove the previous version.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;Gem update command Help&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;removing-old-unused-gems&quot;&gt;Removing old unused gems&lt;/h2&gt;

&lt;p&gt;To remove older gems we use the &lt;code class=&quot;highlighter-rouge&quot;&gt;clean&lt;/code&gt; command:&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot;&gt;
  &lt;p&gt;The cleanup command removes old versions of gems from GEM_HOME that
are not required to meet a dependency.  If a gem is installed
elsewhere in GEM_PATH the cleanup command won‚Äôt delete it.&lt;/p&gt;

  &lt;p&gt;If no gems are named all gems in GEM_HOME are cleaned.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;Gem cleanup command Help&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;p&gt;We can choose to specify a gem to remove its older versions or remove
every old gem:&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;gem cleanup&lt;/kbd&gt;
Cleaning up installed gems...
Attempting to uninstall test-unit-3.1.7
Unable to uninstall test-unit-3.1.7:
        Gem::InstallError: test-unit is not installed in GEM_HOME, try:
        gem uninstall -i /usr/share/rubygems-integration/all test-unit
Attempting to uninstall public_suffix-2.0.4
Successfully uninstalled public_suffix-2.0.4
Attempting to uninstall power_assert-0.2.7
Unable to uninstall power_assert-0.2.7:
        Gem::InstallError: power_assert is not installed in GEM_HOME, try:
        gem uninstall -i /usr/share/rubygems-integration/all power_assert
Attempting to uninstall nokogiri-1.6.8.1
Successfully uninstalled nokogiri-1.6.8.1
Attempting to uninstall minitest-5.9.0
Unable to uninstall minitest-5.9.0:
        Gem::InstallError: minitest is not installed in GEM_HOME, try:
        gem uninstall -i /usr/share/rubygems-integration/all minitest
Attempting to uninstall rb-inotify-0.9.7
Successfully uninstalled rb-inotify-0.9.7
Attempting to uninstall kramdown-1.12.0
Successfully uninstalled kramdown-1.12.0
Attempting to uninstall jekyll-seo-tag-2.0.0
Successfully uninstalled jekyll-seo-tag-2.0.0
Attempting to uninstall jekyll-3.3.0
Successfully uninstalled jekyll-3.3.0
Attempting to uninstall jekyll-sass-converter-1.4.0
Successfully uninstalled jekyll-sass-converter-1.4.0
Attempting to uninstall sass-3.4.22
Successfully uninstalled sass-3.4.22
Attempting to uninstall kramdown-1.13.1
Successfully uninstalled kramdown-1.13.1
Attempting to uninstall html-proofer-3.3.1
Successfully uninstalled html-proofer-3.3.1
Attempting to uninstall parallel-1.9.0
Successfully uninstalled parallel-1.9.0
Attempting to uninstall nokogiri-1.7.0
Successfully uninstalled nokogiri-1.7.0
&lt;/samp&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/q/27933683/1165509&quot;&gt;Removing old versions of gems&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 25 May 2017 00:00:00 +0000</pubDate>
        <link>https://simpleit.rocks/how-to-uninstall-old-versions-of-ruby-gems/</link>
        <guid isPermaLink="true">https://simpleit.rocks/how-to-uninstall-old-versions-of-ruby-gems/</guid>
        
        
        <category>docs</category>
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Multilingual Jekyll Without Plugins</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;This article shows a solution to have a multi language jekyll website
based mainly in having a file that groups all the available
translations for each page.&lt;/p&gt;

&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;

&lt;p&gt;A common configuration for a multilanguage site is to use
subdirectories with Generic top-level domains (gTLDs).&lt;/p&gt;

&lt;p&gt;This way the URLs of your site would look like: &lt;code class=&quot;highlighter-rouge&quot;&gt;example.com/&amp;lt;lang&amp;gt;/&lt;/code&gt;,
e.g.:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;English &lt;code class=&quot;highlighter-rouge&quot;&gt;example.com/en/&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Spanish &lt;code class=&quot;highlighter-rouge&quot;&gt;example.com/es/&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;German &lt;code class=&quot;highlighter-rouge&quot;&gt;example.com/de/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This configuration has the benefit that it is easy to configure, can
use Search Console geotargeting and requires low maintenance as it is
in the same host.&lt;/p&gt;

&lt;p&gt;To indicate to Search Engines that the German URL is the
German-language equivalent of the Spanish page, one of three ways can
be used:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;HTML link element in header&lt;/li&gt;
  &lt;li&gt;HTTP header&lt;/li&gt;
  &lt;li&gt;Sitemap&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In this guide I will be using the first one, adding a &lt;code class=&quot;highlighter-rouge&quot;&gt;link&lt;/code&gt; element
in the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt; section of each HTML page. Each language page URL
should identify different language versions, &lt;strong&gt;including itself&lt;/strong&gt;&lt;sup id=&quot;fnref:confirmationlink&quot;&gt;&lt;a href=&quot;#fn:confirmationlink&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;So the markup to tell Search Engine‚Äôs algorithms to consider all of
these pages as alternate versions of each other is:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;link rel=&quot;alternate&quot; hreflang=&quot;es&quot; href=&quot;http://example.com/es&quot; /&amp;gt;
&amp;lt;link rel=&quot;alternate&quot; hreflang=&quot;de&quot; href=&quot;http://example.com/de&quot; /&amp;gt;
&amp;lt;link rel=&quot;alternate&quot; hreflang=&quot;en&quot; href=&quot;http://example.com/en&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To achieve this structure in Jekyll we will use:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;language subdirectories&lt;/li&gt;
  &lt;li&gt;two data files
    &lt;ul&gt;
      &lt;li&gt;one to specify the navigation structure of the website&lt;/li&gt;
      &lt;li&gt;another one to map posts and pages equivalents based in their full path&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;steps&quot;&gt;Steps&lt;/h2&gt;

&lt;p&gt;I will create a new Jekyll site to show the process:&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;jekyll new --blank mysite&lt;/kbd&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;cd mysite&lt;/kbd&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;bundle init&lt;/kbd&gt;
Writing new Gemfile to /mysite/Gemfile
&lt;span class=&quot;shell-prompt&quot;&gt;mysite$&lt;/span&gt; &lt;kbd&gt;tree&lt;/kbd&gt;
.
‚îú‚îÄ‚îÄ _drafts
‚îú‚îÄ‚îÄ Gemfile
‚îú‚îÄ‚îÄ index.html
‚îú‚îÄ‚îÄ _layouts
‚îî‚îÄ‚îÄ _posts

3 directories, 2 file
&lt;/samp&gt;
&lt;/pre&gt;

&lt;p&gt;Edit &lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt; to have the Jekyll gem:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;source &quot;https://rubygems.org&quot;

gem &quot;jekyll&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;bundle install&lt;/kbd&gt;
...
Bundle complete! 1 Gemfile dependency, 19 gems now installed.
&lt;/samp&gt;
&lt;/pre&gt;

&lt;h3 id=&quot;language-directories&quot;&gt;Language directories&lt;/h3&gt;

&lt;p&gt;For each language we create a new directory that will contain its
posts, pages and, eventually, some categories as subdirectories.&lt;/p&gt;

&lt;p&gt;In this example, one for English &lt;code class=&quot;highlighter-rouge&quot;&gt;/en&lt;/code&gt;, one for Spanish &lt;code class=&quot;highlighter-rouge&quot;&gt;/es&lt;/code&gt; and one
for German &lt;code class=&quot;highlighter-rouge&quot;&gt;/de&lt;/code&gt;.&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;mysite$&lt;/span&gt; &lt;kbd&gt;mkdir -vp {en,es/_posts,de/_posts}&lt;/kbd&gt;
mkdir: created directory 'en'
mkdir: created directory 'es'
mkdir: created directory 'es/_posts'
mkdir: created directory 'de'
mkdir: created directory 'de/_posts'
&lt;span class=&quot;shell-prompt&quot;&gt;mysite$&lt;/span&gt; &lt;kbd&gt;mv _posts/ en/&lt;/kbd&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;mysite$&lt;/span&gt; &lt;kbd&gt;tree&lt;/kbd&gt;
‚îú‚îÄ‚îÄ de
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ _posts
‚îú‚îÄ‚îÄ _drafts
‚îú‚îÄ‚îÄ en
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ _posts
‚îú‚îÄ‚îÄ es
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ _posts
‚îú‚îÄ‚îÄ index.html
‚îî‚îÄ‚îÄ _layouts

8 directories, 1 file
&lt;/samp&gt;
&lt;/pre&gt;

&lt;p&gt;This way our URLs will be generated containing the language at the
first level.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://example.com/es/...
http://example.com/de/...
http://example.com/en/...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Following this example we create example posts in each language.&lt;/p&gt;

&lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;en/_posts/2017-05-08-hello-world.md&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
title: Hello World
---

A &quot;Hello, World!&quot; program is a computer program that outputs or displays &quot;Hello, World!&quot; to a user. Being a very simple program in most programming languages...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;es/_posts/2017-05-08-hola-mundo.md&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
title: Hola Mundo
---

En inform√°tica, un programa Hola mundo es el que imprime el texto
¬´¬°Hola, mundo!¬ª ...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;de/_posts/2017-05-08-hallo-welt.md&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
title: Hallo Welt
---

Ein Hallo-Welt-Programm ist ein kleines Computerprogramm, das auf
m√∂glichst einfache Weise zeigen soll...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;tree&lt;/kbd&gt;
.
‚îú‚îÄ‚îÄ de
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ _posts
‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ 2017-05-08-hallo-welt.md
‚îú‚îÄ‚îÄ _drafts
‚îú‚îÄ‚îÄ en
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ _posts
‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ 2017-05-08-hello-world.md
‚îú‚îÄ‚îÄ es
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ _posts
‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ 2017-05-08-hola-mundo.md
‚îú‚îÄ‚îÄ Gemfile
‚îú‚îÄ‚îÄ Gemfile.lock
‚îú‚îÄ‚îÄ index.html
‚îî‚îÄ‚îÄ _layouts

8 directories, 6 files
&lt;/samp&gt;
&lt;/pre&gt;

&lt;h3 id=&quot;set-post-language&quot;&gt;Set post language&lt;/h3&gt;

&lt;p&gt;Now we automatically set the language of each post depending on the
above language folder
using
&lt;a href=&quot;https://jekyllrb.com/docs/configuration/#front-matter-defaults&quot;&gt;Front Matter Defaults&lt;/a&gt;,
in &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;defaults&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;#languages&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;en&quot;&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;default&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;es&quot;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;es&quot;&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;de&quot;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;de&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Every post and page located inside each folder, will automatically get
the right language.&lt;/p&gt;

&lt;p&gt;So each webpage should have the language specified at the opening html
tag: &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In the default layout in &lt;code class=&quot;highlighter-rouge&quot;&gt;_layouts/default.html&lt;/code&gt; using English as the
fallback language:&lt;/p&gt;

&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;site.lang&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'en'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&quot;&amp;gt;
    &amp;lt;head&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
	&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you don‚Äôt put the post/page in one of the language subdirectories,
then you will need to specify its language in the front matter, i.e.:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
title: &quot;Prueba&quot;
lang: es
---
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;map-set&quot;&gt;Map set&lt;/h3&gt;

&lt;p&gt;Each time we add a post or page, the full path of each page should be
added to a special &lt;code class=&quot;highlighter-rouge&quot;&gt;_data/map.yml&lt;/code&gt; where we specify which files are
equivalent in the other languages.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-
  en: en/_posts/2017-05-08-hello-world.md 
  es: es/_posts/2017-05-08-hola-mundo.md
  de: de/_posts/2017-05-08-hallo-welt.md
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;navigation-menu&quot;&gt;Navigation menu&lt;/h3&gt;

&lt;p&gt;We create an include that iterates through pages and posts and select
only the group (located in &lt;code class=&quot;highlighter-rouge&quot;&gt;_data/map.yml&lt;/code&gt;) which one of its items
equals the current page path. In &lt;code class=&quot;highlighter-rouge&quot;&gt;_includes/lang_nav.html&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;nav&amp;gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;block&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;site.data.map&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;item&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;block[page.lang]&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;trans&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;block&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;trans_path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;trans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;path&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;trans_path&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt; 

    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;item&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;posts&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &amp;lt;a hreflang=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&quot; class=&quot;active&quot;&amp;gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;locales&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&amp;lt;/a&amp;gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &amp;lt;a hreflang=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&quot; href=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;absolute_url}}&quot;&amp;gt;{{site.data.locales[item.lang].title}}&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;{%&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;endif&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endfor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;pages&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;pages&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;path&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;trans_path&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;item&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;pages&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &amp;lt;a hreflang=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&quot; class=&quot;active&quot;&amp;gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;locales&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&amp;lt;/a&amp;gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &amp;lt;a hreflang=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&quot; href=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;absolute_url}}&quot;&amp;gt;{{site.data.locales[item.lang].title}}&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;{%&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;endif&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endfor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endfor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;endif&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endfor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endfor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;

&amp;lt;/nav&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And use it in a layout:&lt;/p&gt;

&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;body&amp;gt;
...
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang_nav&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;alternate-links&quot;&gt;Alternate links&lt;/h3&gt;

&lt;p&gt;Finally to create the urls with the &lt;em&gt;alternate&lt;/em&gt; link tags, in
&lt;code class=&quot;highlighter-rouge&quot;&gt;_includes/alternate.html&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;block&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;site.data.map&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;item&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;block[page.lang]&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;trans&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;block&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;trans_path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;trans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;path&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;trans_path&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;item&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;posts&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&amp;lt;link rel=&quot;alternate&quot; hreflang=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&quot; href=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;absolute_url}}&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;/&amp;gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;{%&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;endfor&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;pages&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;pages&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;path&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;trans_path&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;item&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;pages&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&amp;lt;link rel=&quot;alternate&quot; hreflang=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&quot; href=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;absolute_url}}&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;/&amp;gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;{%&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;endfor&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endfor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;endif&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endfor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endfor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And use it in the head section of the layout:&lt;/p&gt;

&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;head&amp;gt;
...
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;alternate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&amp;lt;/head&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;repo&quot;&gt;Repo&lt;/h2&gt;

&lt;p&gt;Putting it all together: &lt;a href=&quot;https://github.com/marcanuy/jekyll-multilanguage&quot;&gt;https://github.com/marcanuy/jekyll-multilanguage&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://support.google.com/webmasters/answer/182192?hl=en#1&quot;&gt;Multi-regional and multilingual sites&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://support.google.com/webmasters/answer/189077?hl=en&amp;amp;ref_topic=2370587&quot;&gt;Use hreflang for language and regional URLs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://support.google.com/webmasters/answer/2620865?hl=en&amp;amp;ref_topic=2370587&quot;&gt;Use a sitemap to indicate alternate language pages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:confirmationlink&quot;&gt;

      &lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://support.google.com/webmasters/answer/189077?hl=en&amp;amp;ref_topic=2370587&quot;&gt;
        &lt;p&gt;If page A links to page B, page B must link back to page A. If
this is not the case for all pages that use hreflang
annotations, those annotations may be ignored or not interpreted
correctly.&lt;/p&gt;

        &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;Missing confirmation links in &lt;a href=&quot;https://support.google.com/webmasters/answer/189077?hl=en&amp;amp;ref_topic=2370587&quot;&gt;Common Mistakes&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
      &lt;/blockquote&gt;
      &lt;p&gt;&lt;a href=&quot;#fnref:confirmationlink&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 08 May 2017 00:00:00 +0000</pubDate>
        <link>https://simpleit.rocks/multilingual-jekyll-without-plugins/</link>
        <guid isPermaLink="true">https://simpleit.rocks/multilingual-jekyll-without-plugins/</guid>
        
        
        <category>docs</category>
        
        <category>ruby</category>
        
        <category>jekyll</category>
        
        <category>tutorials</category>
        
      </item>
    
  </channel>
</rss>
