<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Techy Reference Notes</title>
    <description>Notes about technology, written on the go.
</description>
    <link>/it-notes/</link>
    <atom:link href="/it-notes/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 17 Jun 2016 18:39:50 -0300</pubDate>
    <lastBuildDate>Fri, 17 Jun 2016 18:39:50 -0300</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>HTML</title>
        <description>&lt;!-- markdown-toc start - Don&#39;t edit this section. Run M-x markdown-toc-generate-toc again --&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#concepts&quot;&gt;Concepts&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#front-matter&quot;&gt;Front Matter&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#posts-formatting-syntax&quot;&gt;Posts formatting syntax&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#kramdown&quot;&gt;kramdown&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#blockquotes&quot;&gt;Blockquotes&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#templating-system&quot;&gt;Templating system&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#commands&quot;&gt;Commands&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#references&quot;&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- markdown-toc end --&gt;

&lt;h1 id=&quot;concepts&quot;&gt;Concepts&lt;/h1&gt;

&lt;h1 id=&quot;optimization-for-mobile&quot;&gt;Optimization for mobile&lt;/h1&gt;

&lt;h2 id=&quot;using-the-viewport-meta-tag&quot;&gt;Using the viewport meta tag&lt;/h2&gt;

&lt;blockquote cite=&quot;https://developers.google.com/speed/docs/insights/ConfigureViewport#overview&quot;&gt;
  &lt;p&gt;A viewport controls how a webpage is displayed on a mobile device. Without a viewport, mobile devices will render the page at a typical desktop screen width, scaled to fit the screen. Setting a viewport gives control over the page’s width and scaling on different devices.
 Pages optimized to display well on mobile devices should include a meta viewport in the head of the document specifying width=device-width, initial-scale=1.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;CSS Media queries&lt;/em&gt; can be applied based on viewport size. Based on the characteristics of the device rendering the content, such as &lt;em&gt;width&lt;/em&gt; and &lt;em&gt;height&lt;/em&gt;, media queries can change the styles used for each device characteristic.&lt;/p&gt;

&lt;blockquote cite=&quot;https://developers.google.com/web/fundamentals/design-and-ui/responsive/fundamentals/use-media-queries?hl=en&quot;&gt;
  &lt;p&gt;Use min-width over min-device-width to ensure the broadest experience.
Use relative sizes for elements to avoid breaking layout.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@media (query) {
  /* CSS Rules used when query matches */
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Mozilla/Mobile/Viewport_meta_tag&quot;&gt;https://developer.mozilla.org/en/docs/Mozilla/Mobile/Viewport_meta_tag&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.google.com/speed/docs/insights/ConfigureViewport&quot;&gt;https://developers.google.com/speed/docs/insights/ConfigureViewport&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.w3.org/TR/mwabp/#bp-viewport&quot;&gt;https://www.w3.org/TR/mwabp/#bp-viewport&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.w3schools.com/css/css_rwd_viewport.asp&quot;&gt;http://www.w3schools.com/css/css_rwd_viewport.asp&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/design-and-ui/responsive/fundamentals/use-media-queries?hl=en&quot;&gt;https://developers.google.com/web/fundamentals/design-and-ui/responsive/fundamentals/use-media-queries?hl=en&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/HTML/&quot;&gt;HTML Wikipedia&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[]&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 11 Jun 2016 00:00:00 -0300</pubDate>
        <link>/it-notes/html/</link>
        <guid isPermaLink="true">/it-notes/html/</guid>
        
        
      </item>
    
      <item>
        <title>Ruby</title>
        <description>&lt;!-- markdown-toc start - Don&#39;t edit this section. Run M-x markdown-toc-generate-toc again --&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#concepts&quot;&gt;Concepts&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#ruby-sandbox&quot;&gt;Ruby Sandbox&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#bundler&quot;&gt;Bundler&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#bundler-common-workflow&quot;&gt;Bundler common workflow&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#references&quot;&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- markdown-toc end --&gt;

&lt;h1 id=&quot;concepts&quot;&gt;Concepts&lt;/h1&gt;

&lt;h2 id=&quot;ruby-sandbox&quot;&gt;Ruby Sandbox&lt;/h2&gt;

&lt;p&gt;Manage dependencies independently of the current platform.&lt;/p&gt;

&lt;h3 id=&quot;bundler&quot;&gt;Bundler&lt;/h3&gt;

&lt;blockquote cite=&quot;http://bundler.io/&quot;&gt;
  &lt;p&gt;Bundler provides a consistent environment for Ruby projects by tracking and installing the exact gems and versions that are needed.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;bundler-common-workflow&quot;&gt;Bundler common workflow&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Declare dependencies of an application in a &lt;a href=&quot;http://bundler.io/gemfile.html&quot;&gt;Gemfile&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://bundler.io/bundle_install.html&quot;&gt;Install&lt;/a&gt; above versions of the dependencies into an isolated location &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle install&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;run the app: &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle exec&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Official Documentation &lt;a href=&quot;https://www.ruby-lang.org/&quot;&gt;https://www.ruby-lang.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 10 Jun 2016 00:00:00 -0300</pubDate>
        <link>/it-notes/ruby/</link>
        <guid isPermaLink="true">/it-notes/ruby/</guid>
        
        
      </item>
    
      <item>
        <title>Linux</title>
        <description>&lt;!-- markdown-toc start - Don&#39;t edit this section. Run M-x markdown-toc-generate-toc again --&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#concepts&quot;&gt;Concepts&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#language&quot;&gt;Language&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#entering-unicode-values&quot;&gt;Entering Unicode values&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#references&quot;&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- markdown-toc end --&gt;

&lt;h1 id=&quot;concepts&quot;&gt;Concepts&lt;/h1&gt;

&lt;h1 id=&quot;language&quot;&gt;Language&lt;/h1&gt;

&lt;h2 id=&quot;entering-unicode-values&quot;&gt;Entering Unicode values&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Enter any code: &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl+Shift+U +&amp;lt;a Hex Value&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Unicode Spanish codes:
    &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;á&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00e1&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;Á&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00c1&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;é&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00e9&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;É&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00c9&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;í&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00ed&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;Í&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00cd&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;ó&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00f3&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;Ó&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00d3&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;ú&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00fa&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;Ú&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00da&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;ñ&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00f1&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;Ñ&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00d1&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;ü&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00fc&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;Ü&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00dc&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;¡&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00a1&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;¿&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00bf&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;www.tldp.org&quot;&gt;Linux Documentation Project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 06 Jun 2016 00:00:00 -0300</pubDate>
        <link>/it-notes/linux/</link>
        <guid isPermaLink="true">/it-notes/linux/</guid>
        
        
      </item>
    
      <item>
        <title>Django</title>
        <description>&lt;!-- markdown-toc start - Don&#39;t edit this section. Run M-x markdown-toc-generate-toc again --&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#concepts&quot;&gt;Concepts&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#environment&quot;&gt;Environment&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#same-database-engine-in-all-the-environments&quot;&gt;Same database engine in all the environments&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#models&quot;&gt;Models&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#view&quot;&gt;View&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#testing&quot;&gt;Testing&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#related-links&quot;&gt;Related Links&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#admin&quot;&gt;Admin&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#references&quot;&gt;References&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#books&quot;&gt;Books&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;!-- markdown-toc end --&gt;

&lt;h1 id=&quot;concepts&quot;&gt;Concepts&lt;/h1&gt;

&lt;p&gt;Fat models, thin views.&lt;/p&gt;

&lt;p&gt;Each Django &lt;em&gt;project&lt;/em&gt; can be composed of many &lt;em&gt;apps&lt;/em&gt;. An &lt;em&gt;app&lt;/em&gt; is a small project that should focus on performing one task (e.g. A website project can have: a blog, ratings, news apps).&lt;/p&gt;

&lt;h1 id=&quot;django-project-structure&quot;&gt;Django project structure&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://amzn.to/25QCIkE&quot;&gt;Two Scoops Of Django&lt;/a&gt; recommends the following structure: ( implemented in &lt;a href=&quot;https://github.com/pydanny/cookiecutter-django&quot;&gt;Cookiecutter&lt;/a&gt;)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;̃ /.virtualenvs/&amp;lt;django_project_name&amp;gt;/    #keep venv outside project structure
...
&amp;lt;repository_root&amp;gt;/ #git repo
    README.rst
	docs/
	.gitignore
	requirements/
		base.txt
		local.txt
		production.txt
		test.txt
	Makefile - Deployment tasks
    &amp;lt;django_project_root&amp;gt;/
	    manage.py
		media/ #only in development, user generated static media assets (e.g. photos)
		static/ #non user generated static media assets (e.g. css)
		        #controlled by STATICFILES DIRS config variable
		templates/ # site-wide templates
		&amp;lt;an_app&amp;gt;/
        &amp;lt;configuration_root&amp;gt;/
			__init.py__
			settings/
				__init.py__
				base.py
				local.py
				production.py
			urls.py
			wsgi.py
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Media&lt;/strong&gt; and &lt;strong&gt;static&lt;/strong&gt; directories in production should be located in a static media server.&lt;/p&gt;

&lt;h1 id=&quot;configuration-and-environment-isolation&quot;&gt;Configuration and environment isolation&lt;/h1&gt;

&lt;p&gt;Every config file should be version controlled, even the developers local configuration, all the developers of a project should use the same development configuration.&lt;/p&gt;

&lt;p&gt;However there are special config keys that should be left out of versioning, like the SECRET_KEY setting (used for &lt;a href=&quot;https://docs.djangoproject.com/en/1.9/topics/signing/&quot;&gt;cryptographic signing functionalities&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;The default &lt;em&gt;Config file&lt;/em&gt; that comes shipped with Django should be pulled apart into several settings for each environment: &lt;em&gt;local&lt;/em&gt;, &lt;em&gt;staging&lt;/em&gt;, &lt;em&gt;test&lt;/em&gt;, &lt;em&gt;production&lt;/em&gt;. This can be done easily inheriting from a &lt;em&gt;base config file&lt;/em&gt;, changing what the specific environment needs and &lt;strong&gt;&lt;a href=&quot;http://12factor.net/config&quot;&gt;leaving secret keys outside config files versioning using environment variables&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If &lt;em&gt;virtualenvwrapper&lt;/em&gt; is being used, the default development settings parameter to work with &lt;em&gt;manage.py&lt;/em&gt; can be specified in the &lt;em&gt;postactivate&lt;/em&gt; hook: &lt;code class=&quot;highlighter-rouge&quot;&gt;echo &quot;export DJANGO_SETTINGS_MODULE=settings.local&quot; &amp;gt;&amp;gt; $VIRTUAL_ENV/bin/postactivate&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;When using &lt;em&gt;manage.py&lt;/em&gt; many commands accepts the parameter to specify a specific settings file: &lt;code class=&quot;highlighter-rouge&quot;&gt;python manage.py runserver --settings=myproject.settings.local&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;To compare the current settings file with the one that installs Django by default: &lt;code class=&quot;highlighter-rouge&quot;&gt;$ manage.py diffsettings&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;setting-environment-variables&quot;&gt;Setting environment variables&lt;/h2&gt;

&lt;p&gt;In a &lt;strong&gt;development&lt;/strong&gt; environment, variables can be set with &lt;code class=&quot;highlighter-rouge&quot;&gt;$ export A_SECRET_KEY=shhh1234&lt;/code&gt;, and placed in:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;.bashrc&lt;/em&gt; or &lt;em&gt;.profile&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;virtualenvwrapper’s&lt;/em&gt; &lt;strong&gt;bin/activate&lt;/strong&gt; hook file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To check that the secret environment key is being loaded, it is possibleto check it from a python shell:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;A_SECRET_KEY&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&quot;shhh1234&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then to get the value for a specific environment, the &lt;em&gt;production config file&lt;/em&gt; in version control only needs to get this environment variable value: &lt;code class=&quot;highlighter-rouge&quot;&gt;A_SECRET_KEY = os.environ[&quot;A_SECRET_KEY&quot;]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In a &lt;strong&gt;production&lt;/strong&gt; environment like &lt;a href=&quot;https://devcenter.heroku.com/articles/config-vars&quot;&gt;Heroku&lt;/a&gt;, this can be done with: &lt;code class=&quot;highlighter-rouge&quot;&gt;$ heroku config:set A_SECRET_KEY=shhh1234&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;splitting-the-default-djangos-settings-file-into-several-files-for-different-environments&quot;&gt;Splitting the default Django’s settings file into several files for different environments&lt;/h2&gt;

&lt;p&gt;Django automatically creates a configuration file in &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;project_name&amp;gt;/settings.py&lt;/code&gt;, to break it up into &lt;em&gt;local&lt;/em&gt;, &lt;em&gt;testing&lt;/em&gt;, &lt;em&gt;staging&lt;/em&gt; and &lt;em&gt;production&lt;/em&gt; config files, the best way is to create a &lt;code class=&quot;highlighter-rouge&quot;&gt;base.py&lt;/code&gt; config with common configurations accross all of them and leave:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create the settings directory &lt;code class=&quot;highlighter-rouge&quot;&gt;$ mkdir &amp;lt;project_name&amp;gt;/settings&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Add &lt;code class=&quot;highlighter-rouge&quot;&gt;__init__.py&lt;/code&gt; file to make Python treat the settings directory as containing packages &lt;code class=&quot;highlighter-rouge&quot;&gt;$ touch &amp;lt;project_name&amp;gt;/settings/__init__.py&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Move the default settings file into the settings directory and change its name &lt;code class=&quot;highlighter-rouge&quot;&gt;$ mv &amp;lt;project_name&amp;gt;/settings.py &amp;lt;project_name&amp;gt;/settings/base.py&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Create all the configuration files (&lt;em&gt;local.py&lt;/em&gt;, &lt;em&gt;testing.py&lt;/em&gt;, &lt;em&gt;staging&lt;/em&gt;, &lt;em&gt;production&lt;/em&gt; )and specify to inherit &lt;em&gt;base.py&lt;/em&gt; configurations, for example, for the development file: &lt;code class=&quot;highlighter-rouge&quot;&gt;echo &quot;from .base import *&quot; &amp;gt;&amp;gt; &amp;lt;project_name&amp;gt;/settings/local.py&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Configure the current environment to use the appropriate settings file, in development: &lt;code class=&quot;highlighter-rouge&quot;&gt;$ export DJANGO_SETTINGS_MODULE=mysite.settings.local&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Django has two administrative scripts: &lt;strong&gt;django_admin.py&lt;/strong&gt; and &lt;strong&gt;manage.py&lt;/strong&gt; (that automatically configures the django instance with the current project). 
One of the &lt;a href=&quot;https://docs.djangoproject.com/en/1.9/ref/django-admin/&quot;&gt;differences&lt;/a&gt; between them is that &lt;em&gt;manage.py&lt;/em&gt; automatically configures the  &lt;strong&gt;DJANGO_SETTINGS_MODULE&lt;/strong&gt; environment variable using the project’s &lt;em&gt;settings.py&lt;/em&gt;.&lt;/p&gt;

&lt;blockquote cite=&quot;https://docs.djangoproject.com/en/1.9/ref/django-admin/&quot;&gt;
  &lt;p&gt;Generally, when working on a single Django project, it’s easier to use manage.py than django-admin. 
If you need to switch between multiple Django settings files, use django-admin with DJANGO_SETTINGS_MODULE or the –settings command line option.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;packages-for-each-environment&quot;&gt;Packages for each environment&lt;/h2&gt;

&lt;p&gt;Each environment needs a specific requirements file, having a &lt;em&gt;base.txt&lt;/em&gt; requirement file with common packages across environments and then adding the needed packages for each environment.&lt;/p&gt;

&lt;p&gt;Common commands:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;To make it possible for each environment to inherit the packages from the &lt;em&gt;base.txt&lt;/em&gt; requirement file, each new file should begin with: &lt;code class=&quot;highlighter-rouge&quot;&gt;-r base.txt&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;To generate a requirements file: &lt;a href=&quot;https://pip.pypa.io/en/stable/reference/pip_freeze/&quot;&gt;$ pip freeze&lt;/a&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;$ pip freeze --local &amp;gt; requirements/base.txt&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;To install the requirements file in a local environment: &lt;code class=&quot;highlighter-rouge&quot;&gt;$ pip install -r requirements/base.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;models&quot;&gt;Models&lt;/h2&gt;

&lt;h2 id=&quot;view&quot;&gt;View&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Generic views &lt;a href=&quot;https://docs.djangoproject.com/en/1.9/topics/class-based-views/generic-display/&quot;&gt;https://docs.djangoproject.com/en/1.9/topics/class-based-views/generic-display/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Model forms &lt;a href=&quot;https://docs.djangoproject.com/en/1.9/topics/forms/modelforms/&quot;&gt;https://docs.djangoproject.com/en/1.9/topics/forms/modelforms/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;testing&quot;&gt;Testing&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/1.9/topics/testing/&quot;&gt;https://docs.djangoproject.com/en/1.9/topics/testing/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Assertions available are from &lt;em&gt;unittest&lt;/em&gt; and from Django’s &lt;em&gt;TestCase&lt;/em&gt; so the full list of &lt;em&gt;assertions&lt;/em&gt; available are:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/dev/topics/testing/tools/#assertions&quot;&gt;https://docs.djangoproject.com/en/dev/topics/testing/tools/#assertions&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/library/unittest.html#assert-methods&quot;&gt;https://docs.python.org/3/library/unittest.html#assert-methods&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote cite=&quot;https://docs.djangoproject.com/en/1.9/topics/testing/&quot;&gt;
  &lt;p&gt;The preferred way to write tests in Django is using the &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#module-unittest&quot;&gt;unittest&lt;/a&gt; module built in to the Python standard library&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote cite=&quot;https://docs.djangoproject.com/en/1.9/topics/testing/overview/&quot;&gt;
  &lt;p&gt;In Django we subclasses from django.test.TestCase, which is a subclass of unittest.TestCase that runs each test inside a transaction to provide isolation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Django provides a &lt;a href=&quot;https://docs.djangoproject.com/en/1.9/intro/tutorial05/#the-django-test-client&quot;&gt;test Client&lt;/a&gt; to simulate a user interacting with the code at the view level. We can use it in tests.py&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;related-links&quot;&gt;Related Links&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Testing tutorial &lt;a href=&quot;https://docs.djangoproject.com/en/1.9/topics/testing/&quot;&gt;https://docs.djangoproject.com/en/1.9/topics/testing/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;admin&quot;&gt;Admin&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Edit models on the same page as a parent model with Model Inlines &lt;a href=&quot;https://docs.djangoproject.com/en/dev/ref/contrib/admin/#inlinemodeladmin-objects&quot;&gt;https://docs.djangoproject.com/en/dev/ref/contrib/admin/#inlinemodeladmin-objects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Official Documentation in categories &lt;a href=&quot;https://docs.djangoproject.com/en/&quot;&gt;https://docs.djangoproject.com/en/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Single page with links to each doc &lt;a href=&quot;https://docs.djangoproject.com/en/1.9/contents/&quot;&gt;https://docs.djangoproject.com/en/1.9/contents/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;books&quot;&gt;Books&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://amzn.to/25QCIkE&quot;&gt;Two Scoops Of Django&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 02 Jun 2016 00:00:00 -0300</pubDate>
        <link>/it-notes/django/</link>
        <guid isPermaLink="true">/it-notes/django/</guid>
        
        
      </item>
    
      <item>
        <title>kramdown</title>
        <description>&lt;!-- markdown-toc start - Don&#39;t edit this section. Run M-x markdown-toc-generate-toc again --&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#concepts&quot;&gt;Concepts&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#syntax&quot;&gt;Syntax&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#blockquotes&quot;&gt;Blockquotes&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#references&quot;&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- markdown-toc end --&gt;

&lt;h1 id=&quot;concepts&quot;&gt;Concepts&lt;/h1&gt;

&lt;p&gt;Markdown superset converter&lt;/p&gt;

&lt;h1 id=&quot;syntax&quot;&gt;Syntax&lt;/h1&gt;

&lt;h2 id=&quot;blockquotes&quot;&gt;Blockquotes&lt;/h2&gt;

&lt;p&gt;Two alternatives for fully semantically correct &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote&quot;&gt;blockquotes&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Adding the &lt;em&gt;cite&lt;/em&gt; attribute in &lt;em&gt;blockquote&lt;/em&gt; tag:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-kramdown&quot;&gt;&amp;gt; The rule of thumb is, don&#39;t introduce a new attribute outside of the __init__ method, otherwise you&#39;ve given the caller an object that isn&#39;t fully initialized.
{: cite=&quot;https://jeffknupp.com/blog/2014/06/18/improve-your-python-python-classes-and-object-oriented-programming/&quot;}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Generates the following HTML:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;blockquote&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cite=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://jeffknupp.com/blog/2014/06/18/improve-your-python-python-classes-and-object-oriented-programming/&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;The rule of thumb is, don’t introduce a new attribute outside of the &lt;span class=&quot;nt&quot;&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;init&lt;span class=&quot;nt&quot;&gt;&amp;lt;/strong&amp;gt;&lt;/span&gt; method, otherwise you’ve given the caller an object that isn’t fully initialized.
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/blockquote&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Adding a &lt;em&gt;cite&lt;/em&gt; element inside the &lt;em&gt;blockquote&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-kramdown&quot;&gt;&amp;gt; The secret to creativity is knowing how to hide your sources. 
&amp;gt; -- &amp;lt;cite&amp;gt;[Albert Einstein][1]&amp;lt;/cite&amp;gt;

[1]:http://www.quotedb.com/quotes/2112
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Generates in HTML:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;blockquote&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;The secret to creativity is knowing how to hide your sources. 
– &lt;span class=&quot;nt&quot;&gt;&amp;lt;cite&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.quotedb.com/quotes/2112&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Albert Einstein&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/cite&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/blockquote&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;code-syntax-highlighting&quot;&gt;Code syntax highlighting&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;kramdown&lt;/em&gt; can use &lt;a href=&quot;https://github.com/jneen/rouge&quot;&gt;rouge&lt;/a&gt; or &lt;a href=&quot;http://coderay.rubychan.de/&quot;&gt;Coderay&lt;/a&gt; for &lt;a href=&quot;http://kramdown.gettalong.org/syntax_highlighter/coderay.html&quot;&gt;syntax highlighting&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The language of the source code can be specified appending the name of the language after the opening line. e.g. for HTML:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~~~ html
&amp;lt;p&amp;gt; a small example&amp;lt;/p&amp;gt;
~~~
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;redcarpet&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;markdown&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Redcarpet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;markdown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_html&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;foo&#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;links&quot;&gt;Links&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Languages Supported &lt;a href=&quot;https://highlightjs.org/static/demo/&quot;&gt;https://highlightjs.org/static/demo/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Documentation &lt;a href=&quot;http://kramdown.gettalong.org/syntax.html&quot;&gt;http://kramdown.gettalong.org/syntax.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Quickref &lt;a href=&quot;http://kramdown.gettalong.org/quickref.html&quot;&gt;http://kramdown.gettalong.org/quickref.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 31 May 2016 00:00:00 -0300</pubDate>
        <link>/it-notes/kramdown/</link>
        <guid isPermaLink="true">/it-notes/kramdown/</guid>
        
        
      </item>
    
      <item>
        <title>Python</title>
        <description>&lt;!-- markdown-toc start - Don&#39;t edit this section. Run M-x markdown-toc-generate-toc again --&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#concepts&quot;&gt;Concepts&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#object-oriented-related-concepts&quot;&gt;Object Oriented related concepts&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#environment-isolation&quot;&gt;Environment isolation&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#same-database-engine-in-all-the-environments&quot;&gt;Same database engine in all the environments&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#usage-of-virtual-environments&quot;&gt;Usage of Virtual Environments&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#virtualenv&quot;&gt;virtualenv&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#virtualenvwrapper&quot;&gt;virtualenvwrapper&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#os-isolation&quot;&gt;OS isolation&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#project-structure&quot;&gt;Project structure&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#database&quot;&gt;Database&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#peewee&quot;&gt;Peewee&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#references&quot;&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- markdown-toc end --&gt;

&lt;h1 id=&quot;concepts&quot;&gt;Concepts&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Style guide&lt;/em&gt; for python code PEP-8 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0008/&quot;&gt;https://www.python.org/dev/peps/pep-0008/&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;Tools to help in formatting Python code:
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://pypi.python.org/pypi/pep8&quot;&gt;pep8&lt;/a&gt; checks your Python code against some of the style conventions.&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://pypi.python.org/pypi/autopep8&quot;&gt;autopep8&lt;/a&gt; automatically formats Python code to conform to the PEP 8 style guide.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Relative imports makes code more portable.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;absolut import&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;from core.views import absolute&lt;/code&gt; &amp;lt;—  To import from outside the app&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;explicit relative&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;from .models import CommandModel&lt;/code&gt; &amp;lt;— To import in current app&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Avoid Using &lt;code class=&quot;highlighter-rouge&quot;&gt;Import *&lt;/code&gt; as it can lead to undesirable results. You can’t really know which packages you are using.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;object-oriented-concepts-in-python&quot;&gt;Object Oriented concepts in Python&lt;/h2&gt;

&lt;blockquote cite=&quot;https://jeffknupp.com/blog/2014/06/18/improve-your-python-python-classes-and-object-oriented-programming/&quot;&gt;
  &lt;p&gt;The rule of thumb is, don’t introduce a new attribute outside of the &lt;strong&gt;init&lt;/strong&gt; method, otherwise you’ve given the caller an object that isn’t fully initialized.
– &lt;cite&gt;https://jeffknupp.com/blog/2014/06/18/improve-your-python-python-classes-and-object-oriented-programming/&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Why you need &lt;em&gt;self&lt;/em&gt; as the first positional argument of a method&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote cite=&quot;http://stackoverflow.com/questions/23944657/typeerror-method-takes-1-positional-argument-but-2-were-given&quot;&gt;
  &lt;p&gt;In Python, this: &lt;code class=&quot;highlighter-rouge&quot;&gt;my_object.method(&quot;foo&quot;)&lt;/code&gt; is syntactic sugar, which the interpreter translates behind the scenes into: &lt;code class=&quot;highlighter-rouge&quot;&gt;MyClass.method(my_object, &quot;foo&quot;)&lt;/code&gt; which, as you can see, does indeed have two arguments - it’s just that the first one is implicit, from the point of view of the caller. 
This is because most methods do some work with the object they’re called on, so there needs to be some way for that object to be referred to inside the method. By convention, this first argument is called self inside the method definition.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;environment-isolation&quot;&gt;Environment isolation&lt;/h2&gt;

&lt;h3 id=&quot;same-database-engine-in-all-the-environments&quot;&gt;Same database engine in all the environments&lt;/h3&gt;

&lt;p&gt;The same database engine (e.g. PostgreSQL, sqlite, MySQL), should be used in all the different environments of a project.&lt;/p&gt;

&lt;p&gt;It is a common bad practice to have a lightweight database in the &lt;em&gt;development&lt;/em&gt; environment and something more powerful in &lt;em&gt;production&lt;/em&gt;, all of them should use the same engine to avoid the different ways each one handle the data.&lt;/p&gt;

&lt;p&gt;This way it is possible to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;examine the &lt;em&gt;production environment&lt;/em&gt; data locally.&lt;/li&gt;
  &lt;li&gt;avoid the different &lt;em&gt;types&lt;/em&gt; and &lt;em&gt;constraints&lt;/em&gt; each database engine has. (e.g. sqlite does not support foreign key constraint, while PostgreSQL does )&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;pip&lt;/strong&gt; and &lt;strong&gt;virtualenv&lt;/strong&gt; are used to have isolated  environments for each projects, so they can handle their own dependencies and versions.&lt;/p&gt;

&lt;h3 id=&quot;usage-of-virtual-environments&quot;&gt;Usage of Virtual Environments&lt;/h3&gt;

&lt;p&gt;Handle dependencies and app versions for each project.&lt;/p&gt;

&lt;h4 id=&quot;virtualenv&quot;&gt;virtualenv&lt;/h4&gt;

&lt;p&gt;General workflow for project isolation:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create a project dir&lt;/li&gt;
  &lt;li&gt;Create a virtual environment for the project outside its directory structure
    &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;virtualenvwrapper&lt;/em&gt; uses the variable WORKON_HOME to specify the location of new virtual environments. The default value is &lt;strong&gt;$HOME/.virtualenvs&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Then each time you work on the project you have two alternatives:&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Manually activate the virtual environment&lt;/em&gt; for the project, so it handles all the commands instead of executing the current Operating System ones. &lt;code class=&quot;highlighter-rouge&quot;&gt;source ~/.virtualenvs/my_project/bin/activate&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;Configure a virtualenvwrapper&lt;/em&gt; and then just select your environment with a command like: &lt;code class=&quot;highlighter-rouge&quot;&gt;workon my_project&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Common workflow to create a new &lt;em&gt;virtualenv&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create the virtual environment (preferable in a directory outside your project)&lt;/li&gt;
  &lt;li&gt;activate the project to work on&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mkdir my_project;
### Create the virtual environment (optionally select python version)
$ virtualenv -p python3.5 ~/.virtualenvs/my_project
### Activate it
$ source ~/.virtualenvs/my_project/bin/activate #the following commands will use the packages installed in this virtual environment
### Your Bash prompt will change to show you are in a virtual environment
(virtualenv)$ ... #work 
(virtualenv)$ deactivate #finish work
$
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;virtualenv &lt;a href=&quot;https://virtualenv.pypa.io&quot;&gt;https://virtualenv.pypa.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;virtualenvwrapper&quot;&gt;virtualenvwrapper&lt;/h4&gt;

&lt;p&gt;Virtualenvwrapper makes it easier to perform &lt;em&gt;virtualenv&lt;/em&gt; tasks. It is build upon the following concepts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Projects&lt;/li&gt;
  &lt;li&gt;The source code that needs a special virtual environment specified in a &lt;em&gt;requirements&lt;/em&gt; file.&lt;/li&gt;
  &lt;li&gt;The base directory for projects is specified in &lt;strong&gt;PROJECT_HOME&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;A Virtualenv directory
    &lt;ul&gt;
      &lt;li&gt;All the &lt;em&gt;virtualenvs&lt;/em&gt; for each project will be contained here in subdirectories.&lt;/li&gt;
      &lt;li&gt;Specified in the variable &lt;strong&gt;WORKON_HOME&lt;/strong&gt;, by default will be: &lt;em&gt;$HOME/.virtualenvs&lt;/em&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mkvirtualenv&lt;/code&gt; provides the same options as &lt;code class=&quot;highlighter-rouge&quot;&gt;virtualenv&lt;/code&gt; plus a few options. It creates by default the &lt;em&gt;virtualenv&lt;/em&gt; environment in &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.virtualenvs/&amp;lt;env_name&amp;gt;&lt;/code&gt; and then activates it.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Usage: mkvirtualenv [-a project_path] [-i package] [-r requirements_file] [virtualenv options] env_name&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Common workflow to create a new &lt;em&gt;virtualenv&lt;/em&gt; with &lt;em&gt;virtualenvwrapper&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create the virtual environment (by default in &lt;strong&gt;$WORKON_HOME&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;list the available &lt;em&gt;environments&lt;/em&gt; and activate the project to work on&lt;/li&gt;
  &lt;li&gt;Go to the project directory &lt;code class=&quot;highlighter-rouge&quot;&gt;cdvirtualenv&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;deactivate the environment when finished working&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;mkvirtualenv myenvname
New python executable &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; /home/marcanuy/.virtualenvs/myenvname/bin/python
Installing setuptools, pip, wheel...done.
&lt;span class=&quot;gp&quot;&gt;(myenvname)$ &lt;/span&gt;workon &lt;span class=&quot;c&quot;&gt;#the previous created env will appear listed, along the other envs&lt;/span&gt;
myenvname
&lt;span class=&quot;gp&quot;&gt;(myenvname)$ &lt;/span&gt;cdvirtualenv myenvname &lt;span class=&quot;c&quot;&gt;#changes to the associated project directory&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;(myenvname)/opt/development/myproject$ &lt;/span&gt;cdsitepackages
&lt;span class=&quot;gp&quot;&gt;(myenvname)~/.virtualenvs/myenvname/lib/python3.5/site-packages$ &lt;/span&gt;cdvirtualenv
&lt;span class=&quot;gp&quot;&gt;(myenvname)/opt/development/myproject$ &lt;/span&gt;deactivate &lt;span class=&quot;c&quot;&gt;#finish work&lt;/span&gt;
/opt/development/myproject&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To create a new environment having a requirements file and a specific python version: &lt;code class=&quot;highlighter-rouge&quot;&gt;mkvirtualenv -r requirements/local.txt -p /usr/bin/python3.5 myprojectname&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;virtualenvwrapper &lt;a href=&quot;https://virtualenvwrapper.readthedocs.io&quot;&gt;https://virtualenvwrapper.readthedocs.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;os-isolation&quot;&gt;OS isolation&lt;/h3&gt;

&lt;p&gt;If there is more than one computer in the development process, there would be probably different Operating Systems and software versions involved that can lead to inconsistencies in source code. There are two applications that play nice together:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.vagrantup.com&quot;&gt;Vagrant&lt;/a&gt; creates reproducible development environments. In addition to being useful in setting up &lt;em&gt;developers environments&lt;/em&gt;, it makes easier to configure &lt;strong&gt;development&lt;/strong&gt;, &lt;strong&gt;staging&lt;/strong&gt; and &lt;strong&gt;production&lt;/strong&gt; environment.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.virtualbox.org&quot;&gt;VirtualBox&lt;/a&gt; is a virtualization product, makes it easy to have the same OS that the Vagrant file is built for.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;project-structure&quot;&gt;Project structure&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://docs.python-guide.org/en/latest/writing/structure/&quot;&gt;http://docs.python-guide.org/en/latest/writing/structure/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jeffknupp.com/blog/2013/08/16/open-sourcing-a-python-project-the-right-way/&quot;&gt;https://jeffknupp.com/blog/2013/08/16/open-sourcing-a-python-project-the-right-way/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;database&quot;&gt;Database&lt;/h1&gt;

&lt;h2 id=&quot;peewee&quot;&gt;Peewee&lt;/h2&gt;

&lt;p&gt;A small &lt;abbr title=&quot;Object Relational Mapping&quot;&gt;ORM&lt;/abbr&gt; that supports postgresql, mysql and sqlite. Can be used with models like Django.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://docs.peewee-orm.com/&quot;&gt;http://docs.peewee-orm.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/coleifer/peewee&quot;&gt;https://github.com/coleifer/peewee&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/&quot;&gt;Phyton 3 Official Documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/tutorial/&quot;&gt;https://docs.python.org/3/tutorial/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 30 May 2016 00:00:00 -0300</pubDate>
        <link>/it-notes/python/</link>
        <guid isPermaLink="true">/it-notes/python/</guid>
        
        
      </item>
    
      <item>
        <title>Git</title>
        <description>&lt;!-- markdown-toc start - Don&#39;t edit this section. Run M-x markdown-toc-generate-toc again --&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#concepts&quot;&gt;Concepts&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#remotes&quot;&gt;Remotes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#use-cases&quot;&gt;Use Cases&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#set-up-a-git-server&quot;&gt;Set up a Git server&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#references&quot;&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- markdown-toc end --&gt;

&lt;h1 id=&quot;concepts&quot;&gt;Concepts&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Git saves data like a &lt;strong&gt;stream of snapshots&lt;/strong&gt;. Every time you commit, or save the state of your project in Git, it basically takes a picture of what all your files look like at that moment and stores a reference to that snapshot. if files have not changed, Git doesn’t store the file again, just a link to the previous identical file it has already stored.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Git has &lt;strong&gt;integrity&lt;/strong&gt;. Everything in Git is check-summed before it is stored and is then referred to by that checksum. It uses SHA-1.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;There are three &lt;em&gt;file states&lt;/em&gt;:&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Committed&lt;/strong&gt; means that the data is stored in your local database.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Modified&lt;/strong&gt; means that you have changed the file but have not committed it to your database yet.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Staged&lt;/strong&gt; means that you have marked a modified fi\e in its current version to go into your next commit snapshot.&lt;/li&gt;
      &lt;li&gt;Lifecycle of the status of files&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;       +---------+         +----------+       +--------+          +------+
       |Untracked|         |Unmodified|       |Modified|          |Staged|
       +----+----+         +----+-----+       +----+---+          +---+--+
            |                   |                  |                  |
            o---Add the file----+------------------+-----------------&amp;gt;+
            |                   |                  |                  |
            |                   |                  |                  |
            |                   o---Edit the file-&amp;gt;+                  |
            |                   |                  |                  |
            |                   |                  o--Stage the file-&amp;gt;+
            |                   |                  +                  |
            +&amp;lt;-Remove the file--o                  |                  |
            |                   |                  |                  |
            |                   +&amp;lt;--------------Commit----------------o
            |                   |                  |                  |
            V                   V                  V                  V
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Sections of a Git project:
    &lt;ul&gt;
      &lt;li&gt;the &lt;em&gt;Git directory&lt;/em&gt; is where Git stores the metadata and object database for your project. It is copied when cloning a repo.&lt;/li&gt;
      &lt;li&gt;the &lt;em&gt;working directory&lt;/em&gt; is a single checkout of one version of the project. These files are pulled out of the compressed database in the Git directory and placed on disk for you to use or modify.&lt;/li&gt;
      &lt;li&gt;the &lt;em&gt;staging area&lt;/em&gt; is a file, generally contained in your Git directory, that stores information about what will go into your next commit. It’s sometimes referred to as the “index”.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;commands&quot;&gt;Commands&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Git Config &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git config --list&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Git config username and email for all repos&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ git config --global user.name &quot;John Doe&quot;&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ git config --global user.email &quot;your_email@example.com&quot;&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Initialize a repository. Creates a new subdirectory named .git that contains all of your necessary repository files. &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git init .&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Get a copy of an existing Git repo. &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git clone [url]&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;remotes&quot;&gt;Remotes&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes&quot;&gt;https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remote repositories are versions of your project that are hosted on the Internet or network somewhere. The clone command implicitly adds the origin remote for you.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Show remotes &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git remote -v&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Add a remote &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git remote add pb https://github.com/paulboone/ticgit&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;To get data from a remote project &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git fetch [remote-name]&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;If your current branch is set up to track a remote branch, you can use the &lt;em&gt;git pull&lt;/em&gt; command to automatically fetch and then merge that remote branch into your current branch &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git pull &lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;use-cases&quot;&gt;Use Cases&lt;/h1&gt;

&lt;h2 id=&quot;set-up-a-git-server&quot;&gt;Set up a Git server&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://git-scm.com/book/en/v2/Git-on-the-Server-Getting-Git-on-a-Server&quot;&gt;https://git-scm.com/book/en/v2/Git-on-the-Server-Getting-Git-on-a-Server&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In order to set up a Git server, you have to export an existing repository into a new &lt;em&gt;bare repository&lt;/em&gt; (a repository that doesn’t contain a &lt;em&gt;working directory&lt;/em&gt;).&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git clone --bare my_project my_project.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Put the bare repository in the server.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ scp -r my_project.git user@git.example.com:/srv/git
$ rm -r my_project.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;pending&quot;&gt;Pending&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging&quot;&gt;https://git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Stashing to be able to switch branches when didn’t finished commits &lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Tools-Stashing-and-Cleaning&quot;&gt;https://git-scm.com/book/en/v2/Git-Tools-Stashing-and-Cleaning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://git-scm.com/book/en/v2&quot;&gt;Git book&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 26 May 2016 00:00:00 -0300</pubDate>
        <link>/it-notes/git/</link>
        <guid isPermaLink="true">/it-notes/git/</guid>
        
        
      </item>
    
      <item>
        <title>Jekyll</title>
        <description>&lt;div class=&quot;mermaid&quot;&gt;
graph LR;
    A[Hard edge]--&amp;gt;B(Round edge);
    B--&amp;gt;C{Decision};
    C--&amp;gt;D[Result one];
    C--&amp;gt;E[Result two];
    style A fill:#FF0000;
    style B fill:#00FF00;
    style C fill:#0000FF;
    style D fill:#FFF000;
    style E fill:#0FFFF0;
&lt;/div&gt;

&lt;!-- markdown-toc start - Don&#39;t edit this section. Run M-x markdown-toc-generate-toc again --&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#concepts&quot;&gt;Concepts&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#front-matter&quot;&gt;Front Matter&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#posts-formatting-syntax&quot;&gt;Posts formatting syntax&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#kramdown&quot;&gt;kramdown&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#blockquotes&quot;&gt;Blockquotes&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#templating-system&quot;&gt;Templating system&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#commands&quot;&gt;Commands&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#references&quot;&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- markdown-toc end --&gt;

&lt;h1 id=&quot;concepts&quot;&gt;Concepts&lt;/h1&gt;

&lt;blockquote cite=&quot;https://jekyllrb.com/docs/structure/&quot;&gt;
  &lt;p&gt;Jekyll is, at its core, a text transformation engine. 
The concept behind the system is this: you give it text written in your
favorite markup language, be that Markdown, Textile, or just plain HTML, 
and it churns that through a layout or a series of layout files. 
Throughout that process you can tweak how you want the site URLs to look, 
what data gets displayed in the layout, and more.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;front-matter&quot;&gt;Front Matter&lt;/h2&gt;

&lt;p&gt;The &lt;a href=&quot;https://jekyllrb.com/docs/frontmatter/&quot;&gt;Front Matter&lt;/a&gt; is the piece of code that tell Jekyll to process a page or post in a special way, where you can change the &lt;em&gt;layout&lt;/em&gt;, &lt;em&gt;language&lt;/em&gt; or more configurations that if not specified they just took the default settings of &lt;em&gt;config.yml&lt;/em&gt;.
.&lt;/p&gt;

&lt;p&gt;e.g.:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: post
title: My cool blog
---
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;It has two requirements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It must be at the beginning of the file&lt;/li&gt;
  &lt;li&gt;It must be in &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt; format&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;posts-formatting-syntax&quot;&gt;Posts formatting syntax&lt;/h2&gt;

&lt;p&gt;The most common formatting syntax used in posts and pages are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Markdown &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;https://daringfireball.net/projects/markdown/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/kramdown/&quot;&gt;kramdown&lt;/a&gt; (a more powerful Markdown superset and currently used in &lt;em&gt;Github pages&lt;/em&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;syntax-highlighting&quot;&gt;Syntax highlighting&lt;/h3&gt;

&lt;p&gt;By default Jekyll uses &lt;a href=&quot;https://github.com/jneen/rouge&quot;&gt;Rouge&lt;/a&gt; as its syntax highlter and is compatible with &lt;a href=&quot;http://pygments.org/&quot;&gt;Pygments&lt;/a&gt; highlighter.&lt;/p&gt;

&lt;h2 id=&quot;templating-system&quot;&gt;Templating system&lt;/h2&gt;

&lt;p&gt;Jekyll uses the &lt;strong&gt;Liquid&lt;/strong&gt; template engine: &lt;a href=&quot;https://github.com/Shopify/liquid/wiki/Liquid-for-Designers&quot;&gt;https://github.com/Shopify/liquid/wiki/Liquid-for-Designers&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;commands&quot;&gt;Commands&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Local instance with bundle&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;jekyll serve --watch --drafts
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/docs/home/&quot;&gt;Jekyll Official Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sun, 08 May 2016 00:00:00 -0300</pubDate>
        <link>/it-notes/jekyll/</link>
        <guid isPermaLink="true">/it-notes/jekyll/</guid>
        
        
      </item>
    
  </channel>
</rss>
