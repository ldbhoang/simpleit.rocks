<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Simple IT 🤘 Rocks</title>
    <description>Clutter-free software concepts. Written on the go.
</description>
    <link>https://simpleit.rocks/</link>
    <atom:link href="https://simpleit.rocks/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 08 May 2017 05:23:44 +0000</pubDate>
    <lastBuildDate>Mon, 08 May 2017 05:23:44 +0000</lastBuildDate>
    <generator>Jekyll v3.4.3</generator>
    
      <item>
        <title>Having Pretty Urls In A Jekyll Website Hosted In Amazon S3</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;One of the problems in having pretty URLs when hosting a Jekyll site
in Amazon S3, is that even we set &lt;code class=&quot;highlighter-rouge&quot;&gt;permalinks&lt;/code&gt; URLs without &lt;code class=&quot;highlighter-rouge&quot;&gt;.html&lt;/code&gt;
extensions, the files generated by Jekyll include this extension.&lt;/p&gt;

&lt;p&gt;It relies on the server configuration to be able to detect its
content-type&lt;sup id=&quot;fnref:contenttype&quot;&gt;&lt;a href=&quot;#fn:contenttype&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; so it can handle URLs that does not include the &lt;code class=&quot;highlighter-rouge&quot;&gt;.html&lt;/code&gt;
extension, and serve the corresponding file.&lt;/p&gt;

&lt;p&gt;Amazon S3 isn’t able to make this translation, so it leaves us with
two options to have URLs without ending in &lt;code class=&quot;highlighter-rouge&quot;&gt;.html&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Create each post in Jekyll as a &lt;code class=&quot;highlighter-rouge&quot;&gt;(directory)/index.html&lt;/code&gt; file, so it
will serve each &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt;. E.g.:&lt;/p&gt;

    &lt;p&gt;We try to access &lt;code class=&quot;highlighter-rouge&quot;&gt;https://example.com/my-cool-page&lt;/code&gt;, then Amazon S3
  server will be able to respond to this request if it finds one of
  these files:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  /my-cool-page/index.html
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Or&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Generate HTML files without the extension:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  /my-cool-page
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, the &lt;strong&gt;Content-type&lt;/strong&gt; header of extension-less files should be
set to &lt;code class=&quot;highlighter-rouge&quot;&gt;text/html&lt;/code&gt; after renaming them.&lt;/p&gt;

&lt;h2 id=&quot;remove-extension-from-files-before-deploying&quot;&gt;Remove extension from files before deploying&lt;/h2&gt;

&lt;p&gt;If configuring Jekyll to generate posts/pages in subdirectories is not
an option, then we can remove the &lt;code class=&quot;highlighter-rouge&quot;&gt;.html&lt;/code&gt; extension to all the files,
&lt;strong&gt;except&lt;/strong&gt; those named &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt;, just before deploying them
to the server.&lt;/p&gt;

&lt;p&gt;An easy way to do it is to have a shell script that removes them after
building the site.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find _site/ -type f ! -iname &lt;span class=&quot;s1&quot;&gt;'index.html'&lt;/span&gt; -iname &lt;span class=&quot;s1&quot;&gt;'*.html'&lt;/span&gt; -print0 | &lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; -d &lt;span class=&quot;nv&quot;&gt;$'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' f; do mv &quot;$f&quot; &quot;${f%.html}&quot;; done
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Command explanation:&lt;/p&gt;

&lt;dl class=&quot;row&quot;&gt; 
&lt;dt class=&quot;col-sm-3&quot;&gt;-type f&lt;/dt&gt; 
&lt;dd class=&quot;col-sm-9&quot;&gt;
File is of type &quot;regular file&quot;
&lt;/dd&gt; 
&lt;dt class=&quot;col-sm-3&quot;&gt;! -iname 'index.html'&lt;/dt&gt; 
&lt;dd class=&quot;col-sm-9&quot;&gt;
Avoid matching index.html files.
&lt;/dd&gt; 
&lt;dt class=&quot;col-sm-3&quot;&gt;-iname pattern&lt;/dt&gt; 
&lt;dd class=&quot;col-sm-9&quot;&gt;
&lt;blockquote&gt;Base of file name (the path with the leading directories
removed) matches shell pattern pattern.&lt;/blockquote&gt; Case insensitive
&lt;/dd&gt; 
&lt;dt class=&quot;col-sm-3&quot;&gt;-print0&lt;/dt&gt; 
&lt;dd class=&quot;col-sm-9&quot;&gt;
&lt;blockquote&gt;True;  print the full file name on the standard output, followed by a
null character (instead of the newline character that -print uses).
This allows file names that contain newlines or other types of white
space to be correctly interpreted by programs that process the find
output. This option corresponds to the -0 option of xargs.&lt;/blockquote&gt;
&lt;/dd&gt; 
&lt;dt class=&quot;col-sm-3&quot;&gt;read -d delimiter&lt;/dt&gt; 
&lt;dd class=&quot;col-sm-9&quot;&gt;
&lt;blockquote&gt;The first character of DELIM is used to terminate the input line, rather than newline.&lt;/blockquote&gt;
&lt;/dd&gt; 
&lt;/dl&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;jekyll build&lt;/kbd&gt;
Configuration file: /tmp/j/_config.yml
            Source: /tmp/j
       Destination: /tmp/j/_site
 Incremental build: disabled. Enable with --incremental
      Generating... 
                    done in 1.433 seconds.
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;tree _site/&lt;/kbd&gt;
_site/
|-- about
|   `-- index.html
|-- assets
|   `-- main.css
|-- feed.xml
|-- index.html
`-- jekyll
    `-- update
        `-- 2017
            `-- 04
                `-- 24
                    `-- welcome-to-jekyll.html

7 directories, 5 files
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;find _site/ -type f ! -iname 'index.html' -iname '*.html' -print0 | while read -d $'\0' f; do mv &quot;$f&quot; &quot;${f%.html}&quot;; done&lt;/kbd&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;tree _site/&lt;/kbd&gt;
_site/
├── about
│   └── index.html
├── assets
│   └── main.css
├── feed.xml
├── index.html
└── jekyll
    └── update
        └── 2017
            └── 04
                └── 26
                    └── welcome-to-jekyll

7 directories, 5 files
&lt;/samp&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;upload-files&quot;&gt;Upload files&lt;/h2&gt;

&lt;p&gt;When uploading the files to the server we must set the correct MIME
type to &lt;code class=&quot;highlighter-rouge&quot;&gt;Content-Type: text/html&lt;/code&gt; to the files that does not have
&lt;code class=&quot;highlighter-rouge&quot;&gt;.html&lt;/code&gt; extension, if we don’t set them, then the server will
interpret them as &lt;code class=&quot;highlighter-rouge&quot;&gt;Content-Type: binary/octet-stream&lt;/code&gt;. Other files
will get the correct &lt;em&gt;Content-Type&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The
&lt;a href=&quot;http://docs.aws.amazon.com/cli/latest/reference/s3/&quot;&gt;Amazon S3 Command Line Interface&lt;/a&gt; has
a special parameter to set the correct &lt;em&gt;Content-Type&lt;/em&gt; for each file
when
&lt;a href=&quot;http://docs.aws.amazon.com/cli/latest/reference/s3/cp.html&quot;&gt;copying&lt;/a&gt;
them: &lt;kbd&gt;aws s3 cp local_directory bucket-name --content-type
text/html&lt;/kbd&gt;&lt;/p&gt;

&lt;p&gt;In this approach, we are going to copy the files without extension,
setting the right &lt;em&gt;Content-Type&lt;/em&gt;, and then just copy the rest of the
files, leaving that task to the server.&lt;/p&gt;

&lt;h3 id=&quot;copy-files-without-extension&quot;&gt;Copy files without extension&lt;/h3&gt;

&lt;p&gt;Copy local files to the S3 bucket.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws s3 cp _site/ s3://cachedpage.co/ --content-type text/html --recursive --exclude &lt;span class=&quot;s2&quot;&gt;&quot;*.*&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;copy-the-rest-of-the-files&quot;&gt;Copy the rest of the files&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws s3 cp _site/ s3://cachedpage.co/ --recursive --exclude &lt;span class=&quot;s2&quot;&gt;&quot;*&quot;&lt;/span&gt; --include &lt;span class=&quot;s2&quot;&gt;&quot;*.*&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;http://docs.aws.amazon.com/cli/latest/reference/s3/#use-of-exclude-and-include-filters&quot;&gt;
  &lt;p&gt;Note that, by default, all files are included. This means that
providing only an –include filter will not change what files are
transferred. –include will only re-include files that have been
excluded from an –exclude filter. If you only want to upload files
with a particular extension, you need to first exclude all files,
then re-include the files with the particular extension.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;&lt;a href=&quot;http://docs.aws.amazon.com/cli/latest/reference/s3/#use-of-exclude-and-include-filters&quot;&gt;Use of Exclude and Include Filters&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;final-script&quot;&gt;Final script&lt;/h2&gt;

&lt;p&gt;The complete process is reflected in the following &lt;code class=&quot;highlighter-rouge&quot;&gt;deploy.sh&lt;/code&gt; script:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/bin/env bash&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Copy Jekyll site to S3 bucket&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;####################################&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Custom vars&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;s3_bucket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;s3://example.com/&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;####################################&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; -e &lt;span class=&quot;c&quot;&gt;# halt script on error&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; -v &lt;span class=&quot;c&quot;&gt;# echo on&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Building site...&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;JEKYLL_ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;production bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;jekyll build

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Removing .html extension&quot;&lt;/span&gt;
find _site/ -type f ! -iname &lt;span class=&quot;s1&quot;&gt;'index.html'&lt;/span&gt; -iname &lt;span class=&quot;s1&quot;&gt;'*.html'&lt;/span&gt; -print0 | &lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; -d &lt;span class=&quot;nv&quot;&gt;$'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' f; do mv &quot;$f&quot; &quot;${f%.html}&quot;; done

echo &quot;Copying files to server&quot;
aws s3 cp _site/ s3://cachedpage.co/ --recursive --exclude &quot;*&quot; --include &quot;*.*&quot;

echo &quot;Copying files with content type...&quot;
aws s3 cp _site/ $s3_bucket --content-type text/html --recursive --exclude &quot;*.*&quot;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This approach will work in most situations, you have to be careful if
you have any other files without extension to avoid setting the wrong
media type.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Index documents in
S3
&lt;a href=&quot;http://docs.aws.amazon.com/AmazonS3/latest/dev/IndexDocumentSupport.html&quot;&gt;http://docs.aws.amazon.com/AmazonS3/latest/dev/IndexDocumentSupport.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Caching user input in bash &lt;a href=&quot;http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_08_02.html&quot;&gt;http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_08_02.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/users/507519/thkala&quot;&gt;thkala&lt;/a&gt; answer in &lt;a href=&quot;http://stackoverflow.com/a/4509530/1165509&quot;&gt;Linux: remove file extensions for multiple files&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;S3 cli docs &lt;a href=&quot;http://docs.aws.amazon.com/cli/latest/reference/s3/&quot;&gt;http://docs.aws.amazon.com/cli/latest/reference/s3/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;S3 Exclude and include
filters
&lt;a href=&quot;http://docs.aws.amazon.com/cli/latest/reference/s3/index.html#use-of-exclude-and-include-filters&quot;&gt;http://docs.aws.amazon.com/cli/latest/reference/s3/index.html#use-of-exclude-and-include-filters&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Complete list of MIME
types
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Complete_list_of_MIME_types&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Complete_list_of_MIME_types&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Content Type Header field &lt;a href=&quot;https://www.w3.org/Protocols/rfc1341/4_Content-Type.html&quot;&gt;https://www.w3.org/Protocols/rfc1341/4_Content-Type.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;MIME media type name : Text &lt;a href=&quot;https://www.iana.org/assignments/media-types/text/html&quot;&gt;https://www.iana.org/assignments/media-types/text/html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:contenttype&quot;&gt;

      &lt;p&gt;The Content-Type entity header is used to indicate the media type
of the resource, a string sent in the headers of a file to
indicate its type&lt;/p&gt;

      &lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://www.w3.org/Protocols/rfc1341/4_Content-Type.html&quot;&gt;
        &lt;p&gt;The purpose of the Content-Type field is to describe the data
contained in the body fully enough that the receiving user agent
can pick an appropriate agent or mechanism to present the data
to the user, or otherwise deal with the data in an appropriate
manner.&lt;/p&gt;

        &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;&lt;a href=&quot;https://www.w3.org/Protocols/rfc1341/4_Content-Type.html&quot;&gt;The content type header field&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
      &lt;/blockquote&gt;
      &lt;p&gt;&lt;a href=&quot;#fnref:contenttype&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 24 Apr 2017 00:00:00 +0000</pubDate>
        <link>https://simpleit.rocks/having-pretty-urls-in-a-jekyll-website-hosted-in-amazon-s3/</link>
        <guid isPermaLink="true">https://simpleit.rocks/having-pretty-urls-in-a-jekyll-website-hosted-in-amazon-s3/</guid>
        
        
        <category>docs</category>
        
        <category>ruby</category>
        
        <category>jekyll</category>
        
        <category>tutorials</category>
        
      </item>
    
      <item>
        <title>Replicate Installed Package Selections From One Ubuntu System To Another</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;This guide shows how to restore all packages used in an Ubuntu
instance into another one, to have the same programs available.&lt;/p&gt;

&lt;p&gt;Having a backup of the software used is a good practice to easily
replicate your environments accross multiple machines.&lt;/p&gt;

&lt;p&gt;We explore some methods to achieve this with their pros and cons.&lt;/p&gt;

&lt;h2 id=&quot;using-dpkg&quot;&gt;Using dpkg&lt;/h2&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://help.ubuntu.com/lts/serverguide/dpkg.html&quot;&gt;
  &lt;p&gt;dpkg is a package manager for Debian-based systems. It can install,
remove, and build packages, but unlike other package management
systems, it cannot automatically download and install packages or
their dependencies.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;Official docs &lt;a href=&quot;https://help.ubuntu.com/lts/serverguide/dpkg.html&quot;&gt;dpkg&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;p&gt;In one machine, we make a local copy of the package selection states running:&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;dpkg --get-selections &amp;gt; packages.txt&lt;/kbd&gt;
&lt;/samp&gt;
&lt;/pre&gt;

&lt;dl class=&quot;row&quot;&gt; 
&lt;dt class=&quot;col-sm-3&quot;&gt;dpkg --get-selections&lt;/dt&gt; 
&lt;dd class=&quot;col-sm-9&quot;&gt;
	Get list of package selections, and write it to
	stdout. Without a pattern, non-installed packages (i.e. those
	which have been previously purged) will not be shown.
&lt;/dd&gt; 
&lt;/dl&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;packages.txt&lt;/code&gt; file will look like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;...
xterm                                           install
xtrans-dev                                      install
xubuntu-artwork                                 install
xul-ext-ubufox                                  install
xz-utils                                        install
yarssr                                          install
yelp                                            install
youtube-dl                                      install
zeitgeist-core                                  install
zenity                                          install
zenity-common                                   install
zip                                             install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then we can backup this file to restore it later on another machine.&lt;/p&gt;

&lt;p&gt;To install these selections we need to do it in three steps:&lt;/p&gt;

&lt;h3 id=&quot;update-available-file&quot;&gt;Update available file&lt;/h3&gt;

&lt;p&gt;Update the &lt;strong&gt;available&lt;/strong&gt; file with the package manager.&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;sudo apt-cache dumpavail | sudo dpkg --merge-avail&lt;/kbd&gt;
Updating available packages info, using -.
Information about 85628 packages was updated.
&lt;/samp&gt;
&lt;/pre&gt;

&lt;dl class=&quot;row&quot;&gt;
&lt;dt class=&quot;col-sm-3&quot;&gt;apt-cache dumpavail&lt;/dt&gt;
&lt;dd class=&quot;col-sm-9&quot;&gt;&lt;blockquote&gt;dumpavail prints out an available list to stdout. This is suitable for use with dpkg(1) and is used by the dselect method.&lt;blockquote&gt;&amp;lt;/dd&amp;gt;
&lt;dt class=&quot;col-sm-3&quot;&gt;dpkg --merge-avail&lt;/dt&gt;
&lt;dd class=&quot;col-sm-9&quot;&gt;&lt;blockquote&gt;Update dpkg's and dselect's idea of which packages are available. With action --merge-avail, old information is combined with information from Packages-file. dpkg keeps its record of available packages in /var/lib/dpkg/available.&lt;blockquote&gt;&amp;lt;/dd&amp;gt;
&amp;lt;/dl&amp;gt;

### Set selection state

Set the selection state on the requested packages with `dpkg`:

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;dpkg --set-selections &amp;lt; packages.txt&lt;/kbd&gt;
&lt;/samp&gt;
&lt;/pre&gt;

&lt;dl class=&quot;row&quot;&gt;
&lt;dt class=&quot;col-sm-3&quot;&gt;dpkg --clear-selections&lt;/dt&gt;
&lt;dt class=&quot;col-sm-3&quot;&gt;dpkg --set-selections&lt;/dt&gt;
&lt;dd class=&quot;col-sm-9&quot;&gt;Set package selections using file read from stdin.&lt;/dd&gt;
&lt;/dl&gt;

### Download and install

Packages are not installed yet, to download and install the requested
packages. Execute `apt-get` to perform the installation of the packages
specified previously in our file.

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;sudo apt-get -u dselect-upgrade&lt;/kbd&gt;
Reading package lists... Done
Building dependency tree       
Reading state information... Done
...
&lt;/samp&gt;
&lt;/pre&gt;

&lt;dl class=&quot;row&quot;&gt;
&lt;dt class=&quot;col-sm-3&quot;&gt;apt-get -u dselect-upgrade&lt;/dt&gt;
&lt;dd class=&quot;col-sm-9&quot;&gt;&lt;blockquote&gt;dselect-upgrade is used in conjunction with the traditional Debian packaging front-end, dselect.  dselect-upgrade follows the changes made by dselect(1) to the Status field of available packages, and performs the actions necessary to realize that state (for instance, the removal of old and the installation of new packages).&lt;/blockquote&gt;
&lt;/dd&gt;
&lt;/dl&gt;

## Using apt-mark

&lt;kbd&gt;apt-mark&lt;/kbd&gt; handles various settings for packages. We can
separate our backup files in two files:

1. One will hold the packages installed automatically
2. Other file will hold the packages we install manually

&lt;dl class=&quot;row&quot;&gt;
&lt;dt class=&quot;col-sm-3&quot;&gt;apt-mark showauto&lt;/dt&gt;
&lt;dd class=&quot;col-sm-9&quot;&gt;&lt;blockquote&gt;showauto is used to print a list of automatically installed packages with each package on a new line. All automatically installed packages will be listed if no package is given. If packages are given only those which are automatically installed will be shown.&lt;/blockquote&gt;
&lt;/dd&gt;
&lt;dt class=&quot;col-sm-3&quot;&gt;apt-mark showmanual&lt;/dt&gt;
&lt;dd class=&quot;col-sm-9&quot;&gt;&lt;blockquote&gt;showmanual can be used in the same way as showauto except that it will print a list of manually installed packages instead.&lt;/blockquote&gt;
&lt;/dd&gt;
&lt;/dl&gt;

So we create these two files:

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;apt-mark showauto &amp;gt; pkgs_auto.lst&lt;/kbd&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;apt-mark showmanual &amp;gt; pkgs_manual.lst&lt;/kbd&gt;
&lt;/samp&gt;
&lt;/pre&gt;

Then we restore the files in the target machine:

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;sudo apt-mark auto $(cat pkgs_auto.lst)&lt;/kbd&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;sudo apt-mark manual $(cat pkgs_manual.lst)&lt;/kbd&gt;
&lt;/samp&gt;
&lt;/pre&gt;

&lt;dl class=&quot;row&quot;&gt;
&lt;dt class=&quot;col-sm-3&quot;&gt;apt-mark auto&lt;/dt&gt;
&lt;dd class=&quot;col-sm-9&quot;&gt;&lt;blockquote&gt;auto is used to mark a package as
being automatically installed, which will cause the package to be removed when no more manually installed packages depend on this package.&lt;/blockquote&gt;
&lt;/dd&gt;
&lt;dt class=&quot;col-sm-3&quot;&gt;apt-mark manual&lt;/dt&gt;
&lt;dd class=&quot;col-sm-9&quot;&gt;&lt;blockquote&gt;manual is used to mark a package as being manually installed, which will prevent the package from being automatically removed if no other packages depend on it.&lt;/blockquote&gt;
&lt;/dd&gt;
&lt;/dl&gt;

## Conclusions

The problem with the first method is that package dependencies get
lost, so each package don't know what other packages are related to
them, which makes something like &lt;kbd&gt;apt-get --purge remove ...&lt;/kbd&gt;
problematic. 

On the other side, the second method is safer and keeps all the
dependencies, and even know if they were installed automatically or
manually which makes it more suitable for this task.

## References

- dpkg Ubuntu docs &amp;lt;https://help.ubuntu.com/lts/serverguide/dpkg.html&amp;gt;
- Advanced Packaging
  Tool &amp;lt;https://en.wikipedia.org/wiki/Advanced_Packaging_Tool&amp;gt;
- [htorque](https://askubuntu.com/users/3037/htorque) answer in [Restoring all data and dependencies from dpkg --set-selections '*'](https://askubuntu.com/a/108760/43253)
&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;/dd&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;/dd&gt;&lt;/dl&gt;
</description>
        <pubDate>Mon, 24 Apr 2017 00:00:00 +0000</pubDate>
        <link>https://simpleit.rocks/replicate-installed-package-selections-from-one-Ubuntu-system-to-another/</link>
        <guid isPermaLink="true">https://simpleit.rocks/replicate-installed-package-selections-from-one-Ubuntu-system-to-another/</guid>
        
        
        <category>docs</category>
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>Redirect HTTP to HTTPS and WWW to non-WWW with AWS S3, Cloudfront and Route 53 with a custom domain</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;This guide explains how to have a custom domain with a secure
connections, using Amazon services only.&lt;/p&gt;

&lt;p&gt;After finishing the guide you will have the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a static website hosted in Amazon &lt;abbr title=&quot;Amazon Simple Storage Service&quot;&gt;S3&lt;/abbr&gt;&lt;/li&gt;
  &lt;li&gt;&lt;abbr title=&quot;Hypertext Transfer Protocol (HTTP) within a connection encrypted by Transport Layer Security&quot;&gt;HTTPS&lt;/abbr&gt; enabled&lt;/li&gt;
  &lt;li&gt;all your requests redirects to the non-WWW version
&lt;code class=&quot;highlighter-rouge&quot;&gt;https://example.com&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;using Cloudfront &lt;abbr title=&quot;Amazon CloudFront – Content Delivery Network (CDN)&quot;&gt;CDN&lt;/abbr&gt;.&lt;/li&gt;
  &lt;li&gt;using &lt;abbr title=&quot;Managed Cloud DNS - Domain Name System - Amazon Route 53 | AWS&quot;&gt;Route 53&lt;/abbr&gt;, Amazon’s domain name server manager&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;set-up-s3&quot;&gt;Set up &lt;abbr title=&quot;Amazon Simple Storage Service&quot;&gt;S3&lt;/abbr&gt;&lt;/h2&gt;

&lt;p&gt;&lt;abbr title=&quot;Amazon Simple Storage Service&quot;&gt;S3&lt;/abbr&gt; allows you to store and retrieve any amount of data, in particular
it makes it easy to set up static websites. The data hosted in &lt;abbr title=&quot;Amazon Simple Storage Service&quot;&gt;S3&lt;/abbr&gt; is
saved as &lt;em&gt;objects&lt;/em&gt; and each object can have its custom permissions.&lt;/p&gt;

&lt;h3 id=&quot;set-up-buckets&quot;&gt;Set up buckets&lt;/h3&gt;

&lt;p&gt;To have our website hosted in &lt;abbr title=&quot;Amazon Simple Storage Service&quot;&gt;S3&lt;/abbr&gt;, we need to configure two buckets
in &lt;a href=&quot;https://console.aws.amazon.com/s3/buckets/&quot;&gt;https://console.aws.amazon.com/s3/buckets/&lt;/a&gt;:&lt;/p&gt;

&lt;h4 id=&quot;non-www-bucket&quot;&gt;non-WWW bucket&lt;/h4&gt;

&lt;p&gt;One bucket for the naked domain called: &lt;code class=&quot;highlighter-rouge&quot;&gt;example.com&lt;/code&gt;. This bucket will hold
our static website files.&lt;/p&gt;

&lt;p&gt;Turn on the Static Website Hosting for &lt;code class=&quot;highlighter-rouge&quot;&gt;example.com&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Adjust permissions to allow reading your objects, go to the bucket
&lt;code class=&quot;highlighter-rouge&quot;&gt;Permissions&lt;/code&gt; tab, and then &lt;code class=&quot;highlighter-rouge&quot;&gt;Bucket Policy&lt;/code&gt;. We need to configure the
&lt;em&gt;Action&lt;/em&gt;: &lt;strong&gt;s3:GetObject&lt;/strong&gt;, then if you don’t use the generator, it
will look something like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;Version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2012-10-17&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;Id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Policy1492008478664&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;Statement&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;Sid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Stmt1492008213599&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;Effect&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Allow&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;Principal&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;*&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;Action&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;s3:GetObject&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;Resource&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;arn:aws:s3:::example.com/*&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;www-bucket&quot;&gt;WWW bucket&lt;/h4&gt;

&lt;p&gt;Another bucket for the www-version domain called: &lt;code class=&quot;highlighter-rouge&quot;&gt;www.example.com&lt;/code&gt;. This
bucket will redirect all the requests that start with &lt;strong&gt;&lt;em&gt;WWW&lt;/em&gt;&lt;/strong&gt; to the
non WWW version.&lt;/p&gt;

&lt;p&gt;Turn on the Static Website Hosting for &lt;code class=&quot;highlighter-rouge&quot;&gt;www.example.com&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Go to &lt;code class=&quot;highlighter-rouge&quot;&gt;Properties&lt;/code&gt; tabs, &lt;code class=&quot;highlighter-rouge&quot;&gt;Static Website Hosting&lt;/code&gt; and select
&lt;strong&gt;Redirect requests&lt;/strong&gt; with the following values:&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;Target bucket or domain&lt;/dt&gt;
  &lt;dd&gt;example.com&lt;/dd&gt;
  &lt;dt&gt;Protocol&lt;/dt&gt;
  &lt;dd&gt;https&lt;/dd&gt;
&lt;/dl&gt;

&lt;h3 id=&quot;set-up-cdn&quot;&gt;Set up &lt;abbr title=&quot;Amazon CloudFront – Content Delivery Network (CDN)&quot;&gt;CDN&lt;/abbr&gt;&lt;/h3&gt;

&lt;p&gt;We need a CloudFront Distribution for each &lt;abbr title=&quot;Amazon Simple Storage Service&quot;&gt;S3&lt;/abbr&gt; bucket, so each website
will have its own &lt;abbr title=&quot;Amazon CloudFront – Content Delivery Network (CDN)&quot;&gt;CDN&lt;/abbr&gt;.&lt;/p&gt;

&lt;p&gt;Go to &lt;a href=&quot;https://console.aws.amazon.com/cloudfront/&quot;&gt;https://console.aws.amazon.com/cloudfront/&lt;/a&gt; and create two
&lt;strong&gt;distributions&lt;/strong&gt; with just the default settings but with small
changes.&lt;/p&gt;

&lt;h4 id=&quot;cdn-for-examplecom&quot;&gt;&lt;abbr title=&quot;Amazon CloudFront – Content Delivery Network (CDN)&quot;&gt;CDN&lt;/abbr&gt; for example.com&lt;/h4&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;origin&lt;/code&gt; setting should contain the custom URL endpoint of our &lt;abbr title=&quot;Amazon Simple Storage Service&quot;&gt;S3&lt;/abbr&gt;
website, &lt;strong&gt;avoid selecting the one that the dropdown list suggests for
us&lt;/strong&gt; (REST endpoint) as we need the &lt;em&gt;web site endpoint&lt;/em&gt;, not the
bucket, it should have the following form:
&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;bucket-name&amp;gt;.s3-website-&amp;lt;region&amp;gt;.amazonaws.com&lt;/code&gt;, in this case:&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;Origin&lt;/dt&gt;
  &lt;dd&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;example.com.s3-website-us-east-1.amazonaws.com&lt;/code&gt;&lt;/dd&gt;
  &lt;dt&gt;Default Cache Behavior Settings / Viewer Protocol Policy&lt;/dt&gt;
  &lt;dd&gt;Redirect HTTP to &lt;abbr title=&quot;Hypertext Transfer Protocol (HTTP) within a connection encrypted by Transport Layer Security&quot;&gt;HTTPS&lt;/abbr&gt;&lt;/dd&gt;
  &lt;dt&gt;Distribution Settings / Alternate Domain Names (CNAMEs)&lt;/dt&gt;
  &lt;dd&gt;example.com&lt;/dd&gt;
&lt;/dl&gt;

&lt;p class=&quot;alert alert-info&quot;&gt;Do &lt;strong&gt;not&lt;/strong&gt; set the &lt;code class=&quot;highlighter-rouge&quot;&gt;Default Root Object&lt;/code&gt; property.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;Distribution Settings / SSL Certificate:&lt;/dt&gt;
  &lt;dd&gt;Custom SSL Certificate (example.com)&lt;/dd&gt;
  &lt;dd&gt;Request or Import a Certificate with ACM&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;When you create the Certificate &lt;strong&gt;include both domains&lt;/strong&gt; as we are
going to use this in the other distribution also:&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;Add domain names&lt;/dt&gt;
  &lt;dd&gt;example.com&lt;/dd&gt;
  &lt;dd&gt;www.example.com&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;And follow the instructions to validate the certificate, then make
sure it is selected in the &lt;em&gt;Distribution&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Leave all other setting with their default value.&lt;/p&gt;

&lt;h4 id=&quot;cdn-for-wwwexamplecom&quot;&gt;&lt;abbr title=&quot;Amazon CloudFront – Content Delivery Network (CDN)&quot;&gt;CDN&lt;/abbr&gt; for www.example.com&lt;/h4&gt;

&lt;p&gt;Create another distribution for the &lt;code class=&quot;highlighter-rouge&quot;&gt;www.example.com&lt;/code&gt; domain with
these values:&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;Origin&lt;/dt&gt;
  &lt;dd&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;www.example.com.s3-website-us-east-1.amazonaws.com&lt;/code&gt;&lt;/dd&gt;
  &lt;dt&gt;Default Cache Behavior Settings / Viewer Protocol Policy&lt;/dt&gt;
  &lt;dd&gt;Redirect HTTP to &lt;abbr title=&quot;Hypertext Transfer Protocol (HTTP) within a connection encrypted by Transport Layer Security&quot;&gt;HTTPS&lt;/abbr&gt;&lt;/dd&gt;
  &lt;dt&gt;Distribution Settings / Alternate Domain Names (CNAMEs)&lt;/dt&gt;
  &lt;dd&gt;www.example.com&lt;/dd&gt;
  &lt;dt&gt;Distribution Settings / SSL Certificate:&lt;/dt&gt;
  &lt;dd&gt;Custom SSL Certificate (example.com)&lt;/dd&gt;
  &lt;dd&gt;Select our previously created certificate that includes this domain&lt;/dd&gt;
&lt;/dl&gt;

&lt;h3 id=&quot;set-up-domains&quot;&gt;Set up domains&lt;/h3&gt;

&lt;p&gt;We are almost there, now it is time to configure the DNS registry
with &lt;a href=&quot;https://console.aws.amazon.com/route53/home&quot;&gt;&lt;abbr title=&quot;Managed Cloud DNS - Domain Name System - Amazon Route 53 | AWS&quot;&gt;Route 53&lt;/abbr&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Go to &lt;strong&gt;DNS management&lt;/strong&gt; / &lt;strong&gt;Hosted Zones&lt;/strong&gt; and create a hosted zone
&lt;code class=&quot;highlighter-rouge&quot;&gt;example.com.&lt;/code&gt;:&lt;/p&gt;

&lt;dl class=&quot;row&quot;&gt;
  &lt;dt class=&quot;col-sm-3&quot;&gt;Domain Name:&lt;/dt&gt;
  &lt;dd class=&quot;col-sm-9&quot;&gt;example.com.&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;In this hosted zone, create a &lt;strong&gt;Record Set&lt;/strong&gt; with these values:&lt;/p&gt;

&lt;dl class=&quot;row&quot;&gt;
  &lt;dt class=&quot;col-sm-3&quot;&gt;Name:&lt;/dt&gt;
  &lt;dd class=&quot;col-sm-9&quot;&gt;(leave it empty)&lt;/dd&gt;
  
  &lt;dt class=&quot;col-sm-3&quot;&gt;Type:&lt;/dt&gt;
  &lt;dd class=&quot;col-sm-9&quot;&gt;Alias: Yes&lt;/dd&gt;
  &lt;dd class=&quot;col-sm-9 offset-sm-3&quot;&gt;Select the CloudFront distribution corresponding to &lt;strong&gt;example.com&lt;/strong&gt;&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Then create another &lt;strong&gt;Record Set&lt;/strong&gt; for &lt;code class=&quot;highlighter-rouge&quot;&gt;www.example.com&lt;/code&gt;:&lt;/p&gt;

&lt;dl class=&quot;row&quot;&gt;
  &lt;dt class=&quot;col-sm-3&quot;&gt;Name:&lt;/dt&gt;
  &lt;dd class=&quot;col-sm-9&quot;&gt;www&lt;/dd&gt;
  
  &lt;dt class=&quot;col-sm-3&quot;&gt;Type:&lt;/dt&gt;
  &lt;dd class=&quot;col-sm-9&quot;&gt;Alias: Yes&lt;/dd&gt;
  &lt;dd class=&quot;col-sm-9 offset-sm-3&quot;&gt;Select the CloudFront distribution corresponding to &lt;strong&gt;www.example.com&lt;/strong&gt;&lt;/dd&gt;
&lt;/dl&gt;

&lt;h2 id=&quot;verification&quot;&gt;Verification&lt;/h2&gt;

&lt;p&gt;All DNS changes and &lt;abbr title=&quot;Amazon CloudFront – Content Delivery Network (CDN)&quot;&gt;CDN&lt;/abbr&gt; setup take time to propagate, you will have to
wait for propagation, then verify it is all working as expected for
HTTP, &lt;abbr title=&quot;Hypertext Transfer Protocol (HTTP) within a connection encrypted by Transport Layer Security&quot;&gt;HTTPS&lt;/abbr&gt; and WWW, non-WWW URLs:&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;curl -sI http://example.com | grep -E '(301|Server|Location|X-Cache|HTTP)'&lt;/kbd&gt;
HTTP/1.1 301 Moved Permanently
Server: CloudFront
Location: https://example.com/
X-Cache: Redirect from cloudfront
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;curl -sI https://example.com | grep -E '(X-Cache|HTTP)'&lt;/kbd&gt;
HTTP/1.1 200 OK
X-Cache: Hit from cloudfront
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;curl -sI http://www.example.com | grep -E '(301|Server|Location|X-Cache|HTTP)'&lt;/kbd&gt;
HTTP/1.1 301 Moved Permanently
Server: CloudFront
Location: https://www.example.com/
X-Cache: Redirect from cloudfront
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;curl -sI https://www.example.com | grep -E '(301|Server|Location|HTTP)'&lt;/kbd&gt;
HTTP/1.1 301 Moved Permanently
Location: https://example.com/
Server: AmazonS3
&lt;/samp&gt;
&lt;/pre&gt;

&lt;p&gt;Explanation of commands:&lt;/p&gt;

&lt;dl class=&quot;row&quot;&gt;
  &lt;dt class=&quot;col-sm-3&quot;&gt;&lt;kbd&gt;curl&lt;/kbd&gt;&lt;/dt&gt;
  &lt;dd class=&quot;col-sm-9&quot;&gt;&lt;blockquote&gt;curl - transfer a URL&lt;/blockquote&gt;&lt;/dd&gt;

  &lt;dt class=&quot;col-sm-3&quot;&gt;&lt;kbd&gt;curl -s&lt;/kbd&gt;&lt;/dt&gt;
  &lt;dd class=&quot;col-sm-9&quot;&gt;Silent  or  quiet mode. Don't show progress meter or error messages.&lt;/dd&gt;

  &lt;dt class=&quot;col-sm-3&quot;&gt;&lt;kbd&gt;curl -I&lt;/kbd&gt;&lt;/dt&gt;
  &lt;dd class=&quot;col-sm-9&quot;&gt;(HTTP/FTP/FILE) Fetch the HTTP-header only&lt;/dd&gt;

  &lt;dt class=&quot;col-sm-3&quot;&gt;&lt;kbd&gt;grep&lt;/kbd&gt;&lt;/dt&gt;
  &lt;dd class=&quot;col-sm-9&quot;&gt;&lt;blockquote&gt;print lines matching a pattern&lt;/blockquote&gt;&lt;/dd&gt;

  &lt;dt class=&quot;col-sm-3&quot;&gt;&lt;kbd&gt;grep -E, --extended-regexp&lt;/kbd&gt;&lt;/dt&gt;
  &lt;dd class=&quot;col-sm-9&quot;&gt;Interpret PATTERN as an extended regular expression.&lt;/dd&gt;
&lt;/dl&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Now all the requests to &lt;code class=&quot;highlighter-rouge&quot;&gt;example.com&lt;/code&gt; will be served by
&lt;code class=&quot;highlighter-rouge&quot;&gt;https://example.com&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;abbr title=&quot;Amazon Simple Storage Service&quot;&gt;S3&lt;/abbr&gt; docs &lt;a href=&quot;https://aws.amazon.com/s3/&quot;&gt;https://aws.amazon.com/s3/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Cloudfront docs &lt;a href=&quot;https://aws.amazon.com/cloudfront/&quot;&gt;https://aws.amazon.com/cloudfront/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;abbr title=&quot;Managed Cloud DNS - Domain Name System - Amazon Route 53 | AWS&quot;&gt;Route 53&lt;/abbr&gt; &lt;a href=&quot;https://aws.amazon.com/route53/&quot;&gt;https://aws.amazon.com/route53/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/users/796468/rki&quot;&gt;RKI&lt;/a&gt; answer in &lt;a href=&quot;http://stackoverflow.com/a/42869783/1165509&quot;&gt;Cloudfront redirect www to naked domain with ssl&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;abbr title=&quot;Amazon Simple Storage Service&quot;&gt;S3&lt;/abbr&gt; Website features can be used in conjunction with Amazon CloudFront. However, &lt;abbr title=&quot;Amazon Simple Storage Service&quot;&gt;S3&lt;/abbr&gt; Website uses a different domain name than regular &lt;abbr title=&quot;Amazon Simple Storage Service&quot;&gt;S3&lt;/abbr&gt; buckets. In this case, you’ll need to set the Origin Domain Name of your CloudFront distribution’s origin configuration to new.rdegges.com.s3 website us east 1.amazonaws.com.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Sat, 22 Apr 2017 00:00:00 +0000</pubDate>
        <link>https://simpleit.rocks/redirect-http-to-https-and-www-to-non-www-with-aws-s3-bucket-cloudfront-route-53-and-a-custom-domain/</link>
        <guid isPermaLink="true">https://simpleit.rocks/redirect-http-to-https-and-www-to-non-www-with-aws-s3-bucket-cloudfront-route-53-and-a-custom-domain/</guid>
        
        
        <category>docs</category>
        
        <category>web</category>
        
        <category>hostings</category>
        
      </item>
    
      <item>
        <title>Add Infolinks Script To An Existing Website From Console With Sed Command</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;An easy way to monetize your blog content is to add the &lt;a href=&quot;http://www.infolinks.com/join-us?aid=2980966&quot;&gt;Infolinks&lt;/a&gt;
script to the website. This is a simple guide to add this script with
a shell command to all the web pages of a static site.&lt;/p&gt;

&lt;h2 id=&quot;how-infolinks-work&quot;&gt;How infolinks work&lt;/h2&gt;

&lt;p&gt;To integrate &lt;a href=&quot;http://www.infolinks.com/join-us?aid=2980966&quot;&gt;Infolinks&lt;/a&gt; in your website, you need to add a script to
each web page and it will convert some of the posts words into links
to monetize them through automated affiliate links.&lt;/p&gt;

&lt;h2 id=&quot;the-command&quot;&gt;The command&lt;/h2&gt;

&lt;p&gt;After &lt;a href=&quot;http://www.infolinks.com/join-us?aid=2980966&quot;&gt;registering&lt;/a&gt; the
script can be obtained
at &lt;a href=&quot;https://publishers.infolinks.com/members/1-minute-integration&quot;&gt;https://publishers.infolinks.com/members/1-minute-integration&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid&quot; alt=&quot;infolinks script&quot; src=&quot;https://s3.amazonaws.com/simpleitrocksbucket/images/infolinksscript.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The script should be placed in each webpage before the closing
&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; HTML tag.&lt;/p&gt;

&lt;p&gt;For this we will use the &lt;strong&gt;sed&lt;/strong&gt; command, its name stands for
&lt;strong&gt;S&lt;/strong&gt;tream &lt;strong&gt;Ed&lt;/strong&gt;itor and is used to perform basic text
transformations on files.&lt;/p&gt;

&lt;h3 id=&quot;put-script-in-a-file&quot;&gt;Put script in a file&lt;/h3&gt;

&lt;p&gt;Create a file named &lt;code class=&quot;highlighter-rouge&quot;&gt;changes.sed&lt;/code&gt; with the basic changes for the &lt;em&gt;sed&lt;/em&gt;
command:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# insert the closing div tag *before* the closing body tag&lt;/span&gt;
/&amp;lt;&lt;span class=&quot;se&quot;&gt;\/&lt;/span&gt;body&amp;gt;/i&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then copy the infolinks script in the same file adding a backslash &lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt;
after each line, so &lt;code class=&quot;highlighter-rouge&quot;&gt;changes.sed&lt;/code&gt; will look like:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# insert the closing div tag *before* the closing body tag&lt;/span&gt;
/&amp;lt;&lt;span class=&quot;se&quot;&gt;\/&lt;/span&gt;body&amp;gt;/i&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&amp;lt;script &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
var infolinks_pid &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 2980966;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
var infolinks_wsid &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 0;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&amp;lt;/script&amp;gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&amp;lt;script &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;//resources.infolinks.com/js/infolinks_main.js&quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This will tell &lt;em&gt;sed&lt;/em&gt; to insert the javascript code before the
&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; HTML tag.&lt;/p&gt;

&lt;p&gt;We will use this file as the script to be inserted by &lt;em&gt;sed&lt;/em&gt; with the
parameter &lt;code class=&quot;highlighter-rouge&quot;&gt;-f&lt;/code&gt;:&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot;&gt;
  &lt;p&gt;-f script-file
–file=script-file&lt;/p&gt;

  &lt;p&gt;Add the commands contained in the file script-file to the set of
commands to be run while processing the input.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;sed linux manual&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;transform-all-files&quot;&gt;Transform all files&lt;/h3&gt;

&lt;p&gt;Go to the directory you have all the web pages and test the command
with one page:&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;sed -f changes.sed &amp;lt; webpage.html | less&lt;/kbd&gt;
&lt;/samp&gt;
&lt;/pre&gt;

&lt;p&gt;Then apply the changes to each file &lt;strong&gt;replacing the original
content&lt;/strong&gt;.&lt;/p&gt;

&lt;p class=&quot;alert alert-danger&quot;&gt;Having a backup of the site before applying the changes is always a
good practice.&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;find . -type f -exec sed -i -f changes.sed {} \;&lt;/kbd&gt;
&lt;/samp&gt;
&lt;/pre&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;-i&lt;/code&gt; &lt;em&gt;sed&lt;/em&gt; parameter stands for &lt;strong&gt;in place&lt;/strong&gt; so it will replace each file contents.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This is a simple way for monetizing web content without having to deal
with complex configurations or having to alter web content in any
way. It integrates seamlessly into each web page and starts making a
revenue from it.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;sed&lt;/em&gt; manual at
&lt;em&gt;gnu&lt;/em&gt; &lt;a href=&quot;https://www.gnu.org/software/sed/manual/sed.html&quot;&gt;https://www.gnu.org/software/sed/manual/sed.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 04 Apr 2017 00:00:00 +0000</pubDate>
        <link>https://simpleit.rocks/add-infolinks-script-to-an-existing-website-from-console-with-sed-command/</link>
        <guid isPermaLink="true">https://simpleit.rocks/add-infolinks-script-to-an-existing-website-from-console-with-sed-command/</guid>
        
        
        <category>docs</category>
        
        <category>linux</category>
        
        <category>shell</category>
        
      </item>
    
      <item>
        <title>What To Do After Launching A Website</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;I’ve created an amazing
website, &lt;a href=&quot;http://www.namecheap.com/?aff=35306&quot;&gt;buyed a domain&lt;/a&gt; and
purchased a &lt;a href=&quot;https://m.do.co/c/b54bbc9a3125&quot;&gt;web hosting service&lt;/a&gt;,
what’s next?&lt;/p&gt;

&lt;p&gt;This is a check list of common resources I find useful to check to see
if they fit my website needs, like setting up a CDN, cache, several
optimizations, analytics, etc.&lt;/p&gt;

&lt;h2 id=&quot;statistics&quot;&gt;Statistics&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Set up Google Analytics &lt;a href=&quot;http://www.google.com/analytics/&quot;&gt;http://www.google.com/analytics/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;performance&quot;&gt;Performance&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Set up Google Search Console (former Webmaster Tools)
    &lt;ul&gt;
      &lt;li&gt;Add HTTPS, WWW and non-WWW versions and select the preferred one&lt;/li&gt;
      &lt;li&gt;Submit Sitemap.xml to Search Console&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Monitor website’s uptime
    &lt;ul&gt;
      &lt;li&gt;It can be set up with a custom monitoring tool like a
free &lt;a href=&quot;https://github.com/phpservermon/phpservermon&quot;&gt;https://github.com/phpservermon/phpservermon&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;or using some tools provided by services like Cloudflare&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Google’s PageSpeed
Insights &lt;a href=&quot;https://developers.google.com/speed/docs/insights/&quot;&gt;https://developers.google.com/speed/docs/insights/&lt;/a&gt;&lt;/p&gt;

    &lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://developers.google.com/speed/docs/insights/&quot;&gt;
      &lt;p&gt;Page Speed Insights measures the performance of a page for mobile
devices and desktop devices. It fetches the url twice, once with a
mobile user-agent, and once with a desktop-user agent.&lt;/p&gt;

      &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;&lt;a href=&quot;https://developers.google.com/speed/docs/insights/&quot;&gt;About PageSpeed Insights&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Set up Cloudflare &lt;a href=&quot;https://www.cloudflare.com&quot;&gt;https://www.cloudflare.com&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;CDN&lt;/li&gt;
      &lt;li&gt;Enable HTTPS Page Rules&lt;/li&gt;
      &lt;li&gt;Static files compression and minification (especially CSS and JS)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;seo&quot;&gt;SEO&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Add your site’s name, logo, and social links
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://developers.google.com/search/docs/data-types/sitename&quot;&gt;https://developers.google.com/search/docs/data-types/sitename&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://developers.google.com/search/docs/data-types/logo&quot;&gt;https://developers.google.com/search/docs/data-types/logo&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://developers.google.com/search/docs/data-types/social-profile-links&quot;&gt;https://developers.google.com/search/docs/data-types/social-profile-links&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Enable breadcrumbs &lt;a href=&quot;https://developers.google.com/search/docs/data-types/breadcrumbs&quot;&gt;https://developers.google.com/search/docs/data-types/breadcrumbs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Add a sitelinks searchbox &lt;a href=&quot;https://developers.google.com/search/docs/data-types/sitelinks-searchbox&quot;&gt;https://developers.google.com/search/docs/data-types/sitelinks-searchbox&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Check for missing &lt;code class=&quot;highlighter-rouge&quot;&gt;description&lt;/code&gt; meta tag in HTML &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt; pages section.&lt;/li&gt;
  &lt;li&gt;Validate HTML: &lt;a href=&quot;https://validator.w3.org/&quot;&gt;https://validator.w3.org/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Add &lt;a href=&quot;http://ogp.me/&quot;&gt;OpenGraph&lt;/a&gt;
and &lt;a href=&quot;https://dev.twitter.com/cards/&quot;&gt;Twitter cards&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Generate an &lt;a href=&quot;https://www.ampproject.org/docs/guides&quot;&gt;AMP&lt;/a&gt; version of the website&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;search-engines&quot;&gt;Search Engines&lt;/h3&gt;

&lt;h4 id=&quot;submit-urls&quot;&gt;Submit URLs&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Bing: &lt;a href=&quot;https://www.bing.com/toolbox/submit-site-url&quot;&gt;https://www.bing.com/toolbox/submit-site-url&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sitemaps&quot;&gt;Sitemaps&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Include sitemaps in &lt;a href=&quot;https://developers.google.com/webmasters/control-crawl-index/docs/robots_txt&quot;&gt;robots.txt&lt;/a&gt; file using a &lt;code class=&quot;highlighter-rouge&quot;&gt;sitemap: [absoluteURL]&lt;/code&gt; directive.&lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;alert alert-info&quot;&gt;Supported by Google, Ask, Bing, Yahoo; defined on &lt;a href=&quot;http://sitemaps.org&quot;&gt;http://sitemaps.org&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Submit a &lt;a href=&quot;http://sitemaps.org/&quot;&gt;sitemap&lt;/a&gt; to
    &lt;ul&gt;
      &lt;li&gt;Google Search
Console &lt;a href=&quot;https://www.google.com/webmasters/tools/sitemap-list&quot;&gt;https://www.google.com/webmasters/tools/sitemap-list&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;Bing (and Yahoo!) &amp;lt;&amp;gt;&lt;/li&gt;
      &lt;li&gt;Yandex &lt;a href=&quot;https://webmaster.yandex.com/site/*/indexing/sitemap/&quot;&gt;https://webmaster.yandex.com/site/*/indexing/sitemap/&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;html&quot;&gt;HTML&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Add &lt;a href=&quot;https://en.wikipedia.org/wiki/Favicon&quot;&gt;Favicons&lt;/a&gt; for different platforms.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 03 Apr 2017 00:00:00 +0000</pubDate>
        <link>https://simpleit.rocks/what-to-do-after-launching-a-website/</link>
        <guid isPermaLink="true">https://simpleit.rocks/what-to-do-after-launching-a-website/</guid>
        
        
        <category>docs</category>
        
        <category>web</category>
        
        <category>html</category>
        
      </item>
    
      <item>
        <title>How To Add Bootstrap 4 To Jekyll The Right Way</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;The real power of Bootstrap is to use and redefine its variables in
our custom designs, that means, we should not simply add Bootstrap’s
javascript and &lt;abbr title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/abbr&gt; stylesheets to use its components, we need to
change them and not making all the web look boringly the same.&lt;/p&gt;

&lt;p&gt;This is a guide to make it easy to use Bootstrap 4 with a Jekyll
website and make it easy to customize it using its variables and
defining new ones.&lt;/p&gt;

&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;

&lt;p&gt;Jekyll provides built-in support for &lt;em&gt;syntactically awesome
stylesheets&lt;/em&gt; (&lt;a href=&quot;http://sass-lang.com/&quot;&gt;Sass&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Sass is a &lt;abbr title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/abbr&gt; extension language, it provides:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Variables&lt;/li&gt;
  &lt;li&gt;Nesting elements
    &lt;ul&gt;
      &lt;li&gt;Loops&lt;/li&gt;
      &lt;li&gt;Arguments&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Selector inheritance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It consists of two syntaxes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the original, indented, syntax uses the &lt;code class=&quot;highlighter-rouge&quot;&gt;.sass&lt;/code&gt; extension.&lt;/li&gt;
  &lt;li&gt;the newer syntax, more similar to &lt;abbr title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/abbr&gt;, uses &lt;code class=&quot;highlighter-rouge&quot;&gt;.scss&lt;/code&gt; extension.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To make Jekyll process these SASS files, we need to create files with
the proper extension name (&lt;code class=&quot;highlighter-rouge&quot;&gt;.scss&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;.sass&lt;/code&gt;) and start the file
contents with two lines of triple dashes.&lt;/p&gt;

&lt;p&gt;A file named &lt;code class=&quot;highlighter-rouge&quot;&gt;assets/main.scss&lt;/code&gt; will be rendered like &lt;code class=&quot;highlighter-rouge&quot;&gt;assets/main.css&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;As Bootstrap switched from &lt;code class=&quot;highlighter-rouge&quot;&gt;Less&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;Sass&lt;/code&gt;&lt;sup id=&quot;fnref:bs-blog&quot;&gt;&lt;a href=&quot;#fn:bs-blog&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; now we can use
it directly without relying in parallel projects like &lt;a href=&quot;https://github.com/twbs/bootstrap-sass&quot;&gt;bootstrap-sass&lt;/a&gt;
used with Bootstrap 3.&lt;/p&gt;

&lt;h2 id=&quot;installing-bootstrap-4&quot;&gt;Installing Bootstrap 4&lt;/h2&gt;

&lt;p&gt;We will be using the package manager &lt;a href=&quot;https://bower.io&quot;&gt;Bower&lt;/a&gt; to install Bootstrap. At
our Jekyll website root folder we use the &lt;kbd&gt;bower install&lt;/kbd&gt;
command. In this case I will be using &lt;code class=&quot;highlighter-rouge&quot;&gt;bootstrap#v4.0.0-alpha.6&lt;/code&gt; but
you can find the latest one
at
&lt;a href=&quot;https://v4-alpha.getbootstrap.com/getting-started/download/#bower&quot;&gt;https://v4-alpha.getbootstrap.com/getting-started/download/#bower&lt;/a&gt;.&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;bower install bootstrap#v4.0.0-alpha.6&lt;/kbd&gt;
bower bootstrap#v4.0.0-alpha.6  cached https://github.com/twbs/bootstrap.git#4.0.0-alpha.6
bower bootstrap#v4.0.0-alpha.6         validate 4.0.0-alpha.6 against https://github.com/twbs/bootstrap.git#v4.0.0-alpha.6
bower jquery#&amp;gt;=1.9.1                     cached https://github.com/jquery/jquery-dist.git#3.1.1
bower jquery#&amp;gt;=1.9.1                   validate 3.1.1 against https://github.com/jquery/jquery-dist.git#&amp;gt;=1.9.1
bower tether#^1.4.0                      cached https://github.com/HubSpot/tether.git#1.4.0
bower tether#^1.4.0                    validate 1.4.0 against https://github.com/HubSpot/tether.git#^1.4.0
bower bootstrap#v4.0.0-alpha.6          install bootstrap#4.0.0-alpha.6
bower jquery#&amp;gt;=1.9.1                    install jquery#3.1.1
bower tether#^1.4.0                     install tether#1.4.0

bootstrap#4.0.0-alpha.6 bower_components/bootstrap
├── jquery#3.1.1
└── tether#1.4.0

jquery#3.1.1 bower_components/jquery

tether#1.4.0 bower_components/tether
&lt;/samp&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;adding-new-sass-load-paths&quot;&gt;Adding new Sass load paths&lt;/h2&gt;

&lt;p&gt;We need to add this new path so Jekyll can process its Sass
files.&lt;/p&gt;

&lt;p&gt;Jekyll will look at the folder specified by the &lt;code class=&quot;highlighter-rouge&quot;&gt;sass_dir&lt;/code&gt;
configuration key (&lt;code class=&quot;highlighter-rouge&quot;&gt;/_sass&lt;/code&gt; by default), but it also supports extending
it, so it will process other folders too.&lt;/p&gt;

&lt;p&gt;Instead of setting a custom sass folder with:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;sass&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;sass_dir&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;_sass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;we use the &lt;code class=&quot;highlighter-rouge&quot;&gt;load-paths&lt;/code&gt;&lt;sup id=&quot;fnref:load-paths&quot;&gt;&lt;a href=&quot;#fn:load-paths&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; key in &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; to add more paths:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;sass&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;load_paths&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;_sass&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bower_components&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p class=&quot;alert alert-danger&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;load_paths&lt;/code&gt; only works in safe mode&lt;sup id=&quot;fnref:safe-mode&quot;&gt;&lt;a href=&quot;#fn:safe-mode&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h2 id=&quot;add-javascript&quot;&gt;Add javascript&lt;/h2&gt;

&lt;p&gt;Add Bootstrap core JavaScript, JQuery and Tether&lt;sup id=&quot;fnref:tether&quot;&gt;&lt;a href=&quot;#fn:tether&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt; (already installed when
installing Bootstrap) at the end of the document so the pages load
faster, just before the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; HTML tag.&lt;/p&gt;

&lt;p&gt;We add them in the default layout at &lt;code class=&quot;highlighter-rouge&quot;&gt;_layouts/default.html&lt;/code&gt; or in
&lt;code class=&quot;highlighter-rouge&quot;&gt;footer.html&lt;/code&gt; in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_includes&lt;/code&gt; folder:&lt;/p&gt;

&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
...
&amp;lt;script src=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/bower_components/jquery/dist/jquery.min.js'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;prepend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;site.baseurl&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/bower_components/tether/dist/js/tether.min.js'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;prepend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;site.baseurl&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/bower_components/bootstrap/dist/js/bootstrap.min.js'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;prepend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;site.baseurl&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;import-bootstrap-and-use-sass-variables&quot;&gt;Import Bootstrap and use Sass variables&lt;/h2&gt;

&lt;h3 id=&quot;create-variables-sass-partial&quot;&gt;Create variables Sass partial&lt;/h3&gt;

&lt;p&gt;To be able to define new variables and reuse the ones defined in
Bootstrap, we create a new partial Sass file &lt;code class=&quot;highlighter-rouge&quot;&gt;_sass/_variables.scss&lt;/code&gt;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;We define our variables&lt;/li&gt;
  &lt;li&gt;“Overwrite” the ones we want from Bootstrap
&lt;code class=&quot;highlighter-rouge&quot;&gt;bower_components/bootstrap/scss/_variables.scss&lt;/code&gt; before loading them
and then&lt;/li&gt;
  &lt;li&gt;we import the Bootstrap variables.&lt;/li&gt;
&lt;/ol&gt;

&lt;p class=&quot;alert alert-danger&quot;&gt;All the variables defined in Bootstrap 4 have the &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;!default&lt;/code&gt;&lt;/strong&gt;&lt;sup id=&quot;fnref:scss_default&quot;&gt;&lt;a href=&quot;#fn:scss_default&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;
property at the end.
When Jekyll process each Scss file, &lt;strong&gt;it only defines the variables that do not
have been assigned any value yet&lt;/strong&gt;, so we can define Bootstrap’s
variables before Bootstrap itself define them. It is important to do
this &lt;strong&gt;before importing the variables&lt;/strong&gt; because there are many of them
depending on each other to calculate &lt;abbr title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/abbr&gt; properties values.&lt;/p&gt;

&lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;_sass/_variables.scss&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$custom-font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;../bower_components/bootstrap/scss/variables&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;import-variables-from-main-sass-file&quot;&gt;Import variables from main Sass file&lt;/h3&gt;

&lt;p&gt;After we have our variables, we import them from our main style sheet:&lt;/p&gt;

&lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;assets/main.scss&lt;/code&gt; we import them and then work with our styles,
using the above variables:&lt;/p&gt;

&lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;variables&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;bootstrap/scss/bootstrap&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.content&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$custom-font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p class=&quot;alert alert-danger&quot;&gt;Don’t miss the triple dashes at the beginning of the file to ensure
Jekyll reads the file to be transformed into &lt;abbr title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/abbr&gt; later&lt;/p&gt;

&lt;h2 id=&quot;add-css-to-layout&quot;&gt;Add css to layout&lt;/h2&gt;

&lt;p&gt;After we have our &lt;code class=&quot;highlighter-rouge&quot;&gt;assets/main.scss&lt;/code&gt;, Jekyll will process it and
generate the final &lt;abbr title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/abbr&gt; file: &lt;code class=&quot;highlighter-rouge&quot;&gt;assets/main.css&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;That is the path we need to add to our layout, in the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt;
section of &lt;code class=&quot;highlighter-rouge&quot;&gt;_layouts/default.html&lt;/code&gt; we include the css: &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;link
rel=&quot;stylesheet&quot; href=&quot;/assets/main.css&quot;&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- site css --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/assets/main.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;all-together&quot;&gt;All together&lt;/h2&gt;

&lt;p&gt;This is the basic flow Jekyll follows processing these Scss files to
generate &lt;code class=&quot;highlighter-rouge&quot;&gt;assets/main.css&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;mermaid&quot;&gt;
graph TB
        STYLESSCSS[&quot;Jekyll reads &lt;strong&gt;/assets/main.scss&lt;/strong&gt;&quot;]--&amp;gt;partials{&quot;imports Sass partials&quot;}
        partials--&amp;gt; |&quot;import variables&quot;|VARS
        partials--&amp;gt; |&quot;import bootstrap/scss/bootstrap&quot;|BS_SCSS
        VARS[&quot;/_sass/_variables.scss&quot;]--&amp;gt;BS_VARIABLES
        BS_VARIABLES[&quot;@import '../bower_components/bootstrap/scss/variables';&quot;]--&amp;gt;STYLESCSS
        BS_SCSS[&quot;/bower_components/bootstrap/scss/bootstrap.scss&quot;]--&amp;gt;STYLESCSS
        STYLESCSS[&quot;Generates /assets/main.css&quot;]
&lt;/div&gt;

&lt;h2 id=&quot;other&quot;&gt;Other&lt;/h2&gt;

&lt;p&gt;The result of this guide is shown below:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;an example repository with a basic jekyll instance with just
bootstrap 4 included in a blank
site: &lt;a href=&quot;https://github.com/marcanuy/jekyll-bootstrap4&quot;&gt;https://github.com/marcanuy/jekyll-bootstrap4&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;a step by step video:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;embed-responsive embed-responsive-16by9&quot;&gt;
  &lt;iframe class=&quot;embed-responsive-item&quot; src=&quot;//www.youtube.com/embed/0EI1V_Whgto&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;When we build our site, Jekyll will process the &lt;code class=&quot;highlighter-rouge&quot;&gt;.scss&lt;/code&gt; files with our
custom variables and we will have them in our &lt;code class=&quot;highlighter-rouge&quot;&gt;assets/main.css&lt;/code&gt;. In
this example its content starts with the Bootstrap code and ends with
our custom &lt;code class=&quot;highlighter-rouge&quot;&gt;_main.scss&lt;/code&gt; processed, looking like:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/*!
 * Bootstrap v4.0.0-alpha.6 (https://getbootstrap.com)
 * Copyright 2011-2017 The Bootstrap Authors
 * Copyright 2011-2017 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sans-serif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;line-height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1.15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;-ms-text-size-adjust&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;-webkit-text-size-adjust&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.content&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Sass (stylesheet language) &lt;a href=&quot;https://en.wikipedia.org/wiki/Sass_(stylesheet_language)&quot;&gt;https://en.wikipedia.org/wiki/Sass_(stylesheet_language)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Sass project website &lt;a href=&quot;http://sass-lang.com/&quot;&gt;http://sass-lang.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Bootstrap 4 customization &lt;a href=&quot;http://v4-alpha.getbootstrap.com/getting-started/options/&quot;&gt;http://v4-alpha.getbootstrap.com/getting-started/options/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:bs-blog&quot;&gt;

      &lt;p&gt;&lt;a href=&quot;http://blog.getbootstrap.com/2015/08/19/bootstrap-4-alpha/&quot;&gt;http://blog.getbootstrap.com/2015/08/19/bootstrap-4-alpha/&lt;/a&gt;&lt;/p&gt;

      &lt;blockquote&gt;
        &lt;p&gt;Moved from Less to Sass. Bootstrap now compiles faster than ever
thanks to Libsass, and we join an increasingly large community of
Sass developers.&lt;/p&gt;
      &lt;/blockquote&gt;
      &lt;p&gt;&lt;a href=&quot;#fnref:bs-blog&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:load-paths&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://github.com/jekyll/jekyll/issues/3366&quot;&gt;Issue&lt;/a&gt; referring the code at &lt;a href=&quot;https://github.com/jekyll/jekyll-sass-converter/blob/master/lib/jekyll/converters/scss.rb#L77&quot;&gt;https://github.com/jekyll/jekyll-sass-converter/blob/master/lib/jekyll/converters/scss.rb#L77&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:load-paths&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:safe-mode&quot;&gt;

      &lt;p&gt;Safe mode disables custom plugins, and ignores symbolic links.&amp;nbsp;&lt;a href=&quot;#fnref:safe-mode&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:tether&quot;&gt;

      &lt;p&gt;&lt;a href=&quot;http://github.hubspot.com/tether/&quot;&gt;Tether&lt;/a&gt; is a small,
focused JavaScript library for defining and managing the position of
user interface (UI) elements in relation to one another on a web page
used by Bootstrap&amp;nbsp;&lt;a href=&quot;#fnref:tether&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:scss_default&quot;&gt;

      &lt;p&gt;SASS Variable Defaults: !default &lt;a href=&quot;http://www.sass-lang.com/documentation/file.SASS_REFERENCE.html#variable_defaults_&quot;&gt;http://www.sass-lang.com/documentation/file.SASS_REFERENCE.html#variable_defaults_&lt;/a&gt;&lt;/p&gt;

      &lt;blockquote&gt;
        &lt;p&gt;You can assign to variables if they aren’t already assigned by adding the !default flag to the end of the value. This means that if the variable has already been assigned to, it won’t be re-assigned, but if it doesn’t have a value yet, it will be given one.&lt;/p&gt;
      &lt;/blockquote&gt;

      &lt;blockquote&gt;
        &lt;p&gt;For example:&lt;/p&gt;
      &lt;/blockquote&gt;

      &lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;First content&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Second content?&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$new_content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;First time reference&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;#main&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;new-content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$new_content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;

      &lt;blockquote&gt;
        &lt;p&gt;is compiled to:&lt;/p&gt;
      &lt;/blockquote&gt;

      &lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nf&quot;&gt;#main&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&quot;First content&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;new-content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&quot;First time reference&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
      &lt;p&gt;&lt;a href=&quot;#fnref:scss_default&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 27 Feb 2017 00:00:00 +0000</pubDate>
        <link>https://simpleit.rocks/how-to-add-bootstrap-4-to-jekyll-the-right-way/</link>
        <guid isPermaLink="true">https://simpleit.rocks/how-to-add-bootstrap-4-to-jekyll-the-right-way/</guid>
        
        
        <category>docs</category>
        
        <category>ruby</category>
        
        <category>jekyll</category>
        
        <category>tutorials</category>
        
      </item>
    
      <item>
        <title>Adding A Twitter Sign In Button To A Website Flow Summary</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;Twitter uses &lt;a href=&quot;https://oauth.net/&quot;&gt;OAuth&lt;/a&gt;, an open protocol to allow secure authorization in
a standard method from applications, to provide authorized access to its API.&lt;/p&gt;

&lt;p&gt;This is a summary of the process described in &lt;a href=&quot;https://dev.twitter.com/oauth&quot;&gt;https://dev.twitter.com/oauth&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;twitter-oauth&quot;&gt;Twitter oauth&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.twitter.com/oauth&quot;&gt;Twitter&lt;/a&gt;
uses &lt;a href=&quot;https://oauth.net/&quot;&gt;OAuth&lt;/a&gt; 1.0A so users are not required to
share their passwords with third party applications.&lt;/p&gt;

&lt;p&gt;In OAuth 1.0A there are two forms of authentication:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;User authentication
    &lt;ul&gt;
      &lt;li&gt;is a form of authentication where your application makes API requests on end-users behalf&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Application-only authentication
    &lt;ul&gt;
      &lt;li&gt;is a form of authentication where your application makes API requests on its own behalf&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;To make authorized calls to Twitter’s APIs, your application must
first obtain an OAuth access token on behalf of a Twitter user (or,
you could issue Application-only authenticated requests, when user
context is not required).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To have a &lt;a href=&quot;https://dev.twitter.com/web/sign-in/implementing&quot;&gt;sign-in button&lt;/a&gt; tokens are obtained like this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Obtain a &lt;strong&gt;request token&lt;/strong&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;oauth_token&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;oauth_token_secret&lt;/code&gt;)
also sending an &lt;code class=&quot;highlighter-rouge&quot;&gt;oauth_callback&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;obtain a &lt;strong&gt;request token&lt;/strong&gt; by sending a signed message
to
&lt;a href=&quot;https://api.twitter.com/oauth/request_token&quot;&gt;https://api.twitter.com/oauth/request_token&lt;/a&gt; with
an &lt;code class=&quot;highlighter-rouge&quot;&gt;oauth_callback&lt;/code&gt; parameter indicating where the user will be
redirected in &lt;em&gt;Step 2&lt;/em&gt;.&lt;/li&gt;
      &lt;li&gt;Check that the HTTP status of the response is 200 (success)&lt;/li&gt;
      &lt;li&gt;parameters returned:
        &lt;ul&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;oauth_token&lt;/code&gt; (store for next step)&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;oauth_token_secret&lt;/code&gt; (store for next step)&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;oauth_callback_confirmed&lt;/code&gt; (verify it is true)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Redirect the user to Twitter including the &lt;code class=&quot;highlighter-rouge&quot;&gt;oauth_token&lt;/code&gt;.
    &lt;ul&gt;
      &lt;li&gt;We need to direct the user to Twitter to complete sign in.&lt;/li&gt;
      &lt;li&gt;Redirect user with a GET
to
&lt;a href=&quot;https://dev.twitter.com/oauth/reference/get/oauth/authenticate&quot;&gt;https://api.twitter.com/oauth/authenticate&lt;/a&gt;
including the &lt;code class=&quot;highlighter-rouge&quot;&gt;oauth_token&lt;/code&gt; parameter from &lt;em&gt;Step 1&lt;/em&gt;. (Probably
an HTTP 302 redirect)
        &lt;ul&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;GET oauth Authenticate&lt;/code&gt; method differs from &lt;code class=&quot;highlighter-rouge&quot;&gt;GET oauth / authorize&lt;/code&gt;
in that if the user has already granted the application
permission, the redirect will occur without the user having to
re-approve the application.
            &lt;ul&gt;
              &lt;li&gt;&lt;strong&gt;To realize this behavior, you must enable the Use Sign in
with Twitter setting on your application record.&lt;/strong&gt;
                &lt;ul&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Allow this application to be used to Sign in with Twitter&lt;/code&gt;
checkbox&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;The sign in endpoint can behave in three different ways
depending on this status:
            &lt;ul&gt;
              &lt;li&gt;&lt;strong&gt;Signed in and approved&lt;/strong&gt;
                &lt;ul&gt;
                  &lt;li&gt;If the user:
                    &lt;ul&gt;
                      &lt;li&gt;is signed in on twitter.com and&lt;/li&gt;
                      &lt;li&gt;has already approved the calling application&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;then they will be immediately authenticated and returned to
the callback URL with a valid OAuth &lt;em&gt;request token&lt;/em&gt;&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;&lt;strong&gt;Signed in but not approved&lt;/strong&gt;
                &lt;ul&gt;
                  &lt;li&gt;If the user:
                    &lt;ul&gt;
                      &lt;li&gt;is signed in to twitter.com &lt;strong&gt;but&lt;/strong&gt;&lt;/li&gt;
                      &lt;li&gt;has not approved the calling application&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;then:
                    &lt;ul&gt;
                      &lt;li&gt;a request to share access with the calling application
will be shown&lt;/li&gt;
                      &lt;li&gt;After accepting the authorization request
                        &lt;ul&gt;
                          &lt;li&gt;the user will be redirected to the callback URL with a
valid OAuth &lt;em&gt;request token&lt;/em&gt;&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;&lt;strong&gt;Not signed in&lt;/strong&gt;
                &lt;ul&gt;
                  &lt;li&gt;If the user is not signed in on twitter.com&lt;/li&gt;
                  &lt;li&gt;then they will be prompted
                    &lt;ul&gt;
                      &lt;li&gt;to enter their credentials and&lt;/li&gt;
                      &lt;li&gt;grant access for the application to access their
information on the same screen.&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;Once signed in,
                    &lt;ul&gt;
                      &lt;li&gt;the user will be returned to the callback URL with a
valid OAuth &lt;em&gt;request token&lt;/em&gt;.&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Upon a successful authentication, your &lt;strong&gt;callback_url&lt;/strong&gt; would
receive a request containing
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;oauth_token&lt;/code&gt; and&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;oauth_verifier &lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Convert the request token to an access token (Upgrade request token)
    &lt;ul&gt;
      &lt;li&gt;To render the &lt;strong&gt;request token&lt;/strong&gt; into a usable &lt;strong&gt;access token&lt;/strong&gt;:
        &lt;ul&gt;
          &lt;li&gt;your application must make a request to the &lt;code class=&quot;highlighter-rouge&quot;&gt;POST oauth /
access_token&lt;/code&gt;
endpoint
&lt;a href=&quot;https://dev.twitter.com/oauth/reference/post/oauth/access_token&quot;&gt;https://api.twitter.com/oauth/access_token&lt;/a&gt;,
containing the &lt;code class=&quot;highlighter-rouge&quot;&gt;oauth_verifier&lt;/code&gt; value obtained in step 2&lt;/li&gt;
          &lt;li&gt;Twitter generates the &lt;strong&gt;access token&lt;/strong&gt;&lt;/li&gt;
          &lt;li&gt;Twitter response with
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;oauth_token&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;oauth_token_secret&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;user_id&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;screen_name&lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;token&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;token secret&lt;/code&gt; should be stored and used for future authenticated requests to the Twitter API.&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://oauth.net/&quot;&gt;https://oauth.net/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dev.twitter.com/oauth/overview/faq&quot;&gt;https://dev.twitter.com/oauth/overview/faq&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 06 Feb 2017 00:00:00 +0000</pubDate>
        <link>https://simpleit.rocks/adding-a-twitter-sign-in-button-to-a-website-flow-summary/</link>
        <guid isPermaLink="true">https://simpleit.rocks/adding-a-twitter-sign-in-button-to-a-website-flow-summary/</guid>
        
        
        <category>docs</category>
        
        <category>apis</category>
        
        <category>twitter</category>
        
      </item>
    
      <item>
        <title>Essential Seo Tips And Techniques From Trusted Sources</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;This article is a curated list of Search Engine Optimization
techniques from top Search Engines and trusted sources to improve your
search engine presence and design better websites.&lt;/p&gt;

&lt;p&gt;It mainly consists of special clues given in Google blog posts.&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://webmasters.googleblog.com/2016/09/penguin-is-now-part-of-our-core.html&quot;&gt;
  &lt;p&gt;Google’s algorithms rely on more than 200 unique signals or “clues”
that make it possible to surface what you might be looking
for. These signals include things like the specific words that
appear on websites, the freshness of content, your region and
PageRank.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;facts&quot;&gt;Facts&lt;/h2&gt;

&lt;h3 id=&quot;android&quot;&gt;Android&lt;/h3&gt;

&lt;p&gt;Apps are favored on search results made from Android devices.&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://webmasters.googleblog.com/2015/04/drive-app-installs-through-app-indexing.html&quot;&gt;
  &lt;p&gt;App Indexing, when indexed content from your app is relevant to a
search done on Google on Android devices, people may start to see app
install buttons for your app in search results. we are starting to use
App Indexing as a ranking signal for all users on Android, regardless
of whether they have your app installed or not.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;Lawrence Chang, Product Manager &lt;a href=&quot;https://webmasters.googleblog.com/2015/04/drive-app-installs-through-app-indexing.html&quot;&gt;2015-04-16&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;p&gt;Signed-in users would likely see content from apps they have
installed. (&lt;a href=&quot;https://support.google.com/googleplay/android-developer/answer/6041489?hl=en&quot;&gt;App Indexing&lt;/a&gt; allows
Google to surface this information in search results)&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://webmasters.googleblog.com/2015/02/finding-more-mobile-friendly-search.html&quot;&gt;
  &lt;p&gt;Starting today, we will begin to use information from indexed apps
as a factor in ranking for signed-in users who have the app
installed. As a result, we may now surface content from indexed apps
more prominently in search. To find out how to implement App
Indexing, which allows us to surface this information in search
results&lt;/p&gt;
  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;Takaki Makino, Chaesang Jung, and Doantam Phan in Finding more mobile-friendly search results &lt;a href=&quot;https://webmasters.googleblog.com/2015/02/finding-more-mobile-friendly-search.html&quot;&gt;2015-02-26&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;crawling&quot;&gt;Crawling&lt;/h3&gt;

&lt;p&gt;Crawling rate is not a ranking signal.&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://webmasters.googleblog.com/2017/01/what-crawl-budget-means-for-googlebot.html&quot;&gt;
  &lt;p&gt;Google uses hundreds of signals to rank the results, and while
crawling is necessary for being in the results, it’s not a ranking
signal.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;Gary Illyes: Crawling and Indexing teams at What Crawl Budget Means for Googlebot &lt;a href=&quot;https://webmasters.googleblog.com/2017/01/what-crawl-budget-means-for-googlebot.html&quot;&gt;2017-01-16&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;https&quot;&gt;HTTPS&lt;/h3&gt;

&lt;p&gt;HTTPS is a ranking signal and is better than HTTP.&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://webmasters.googleblog.com/2014/08/https-as-ranking-signal.html&quot;&gt;
  &lt;p&gt;over the past few months we’ve been running tests taking into
account whether sites use secure, encrypted connections as a signal in
our search ranking algorithms. We’ve seen positive results, so
we’re starting to use HTTPS as a ranking signal. For now it’s only a
very lightweight signal — affecting fewer than 1% of global queries,
and carrying less weight than other signals such as high-quality
content — while we give webmasters time to switch to HTTPS. But over
time, we may decide to strengthen it, because we’d like to encourage
all website owners to switch from HTTP to HTTPS to keep everyone
safe on the web.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;HTTPS as a ranking signal &lt;a href=&quot;https://webmasters.googleblog.com/2014/08/https-as-ranking-signal.html&quot;&gt;2014-08-06&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://webmasters.googleblog.com/2015/12/indexing-https-pages-by-default.html&quot;&gt;
  &lt;p&gt;we also started giving a slight ranking boost to HTTPS&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt; Indexing HTTPS pages by default - Zineb Ait Bahajji, WTA, and the Google Security and Indexing teams &lt;a href=&quot;https://webmasters.googleblog.com/2015/12/indexing-https-pages-by-default.html&quot;&gt;2015-12-17&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;images&quot;&gt;Images&lt;/h3&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://www.youtube.com/watch?time_continue=1&amp;amp;v=GMf6FmRus2M&quot;&gt;
  &lt;p&gt;Google potentially use EXIF data from pictures as a ranking factor&lt;/p&gt;
  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;Matt Cutts video &lt;a href=&quot;https://www.youtube.com/watch?time_continue=1&amp;amp;v=GMf6FmRus2M&quot;&gt;2014-02-14&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;inbound-links&quot;&gt;Inbound Links&lt;/h3&gt;

&lt;p&gt;Links from other websites should be gained through:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;merit-based and&lt;/li&gt;
  &lt;li&gt;freely-volunteered&lt;/li&gt;
  &lt;li&gt;relevant to geographic location&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://webmasters.googleblog.com/2008/10/good-times-with-inbound-links.html&quot;&gt;
  &lt;p&gt;Inbound links are links from pages on external sites linking back to
your site. Inbound links can bring new users to your site, and when
the links are merit-based and freely-volunteered as an editorial
choice, they’re also one of the positive signals to Google about
your site’s importance. Other signals include things like our
analysis of your site’s content, its relevance to a geographic
location, etc&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;Maile Ohye, Developer Programs Tech Lead &lt;a href=&quot;https://webmasters.googleblog.com/2008/10/good-times-with-inbound-links.html&quot;&gt;2008-10-09&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;search-query&quot;&gt;Search Query&lt;/h3&gt;

&lt;p&gt;Search query intent is favored over a mobile friendly site, i.e.: a
non mobile-friendly site with better content than a mobile friendly
one with less relevant content will be preferred.&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://webmasters.googleblog.com/2016/03/continuing-to-make-web-more-mobile.html&quot;&gt;
  &lt;p&gt;the intent of the search query is still a very strong signal — so
even if a page with high quality content is not mobile-friendly, it
could still rank well if it has great, relevant content.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;Continuing to make web more mobile &lt;a href=&quot;https://webmasters.googleblog.com/2016/03/continuing-to-make-web-more-mobile.html&quot;&gt;2016-03-16&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;high-quality-content&quot;&gt;High Quality Content&lt;/h3&gt;

&lt;p&gt;According to &lt;a href=&quot;https://webmasters.googleblog.com/2011/05/more-guidance-on-building-high-quality.html&quot;&gt;this guide from Google High Quality Content is&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;Articles with truthful information&lt;/li&gt;
    &lt;li&gt;Articles written by an expert or enthusiast who knows the topic well&lt;/li&gt;
    &lt;li&gt;Avoid having duplicate, overlapping, or redundant articles on the
same or similar topics with slightly different keyword variations&lt;/li&gt;
    &lt;li&gt;Secure enough to give credit card information to the site&lt;/li&gt;
    &lt;li&gt;Avoid spelling, stylistic, or factual errors&lt;/li&gt;
    &lt;li&gt;Topics driven by genuine interests of readers of the site, avoid to
generate content by attempting to guess what might rank well in
search engines&lt;/li&gt;
    &lt;li&gt;Provide articles with original content or information, original reporting, original research, and/or original analysis&lt;/li&gt;
    &lt;li&gt;Provide pages with substantial value when compared to other pages in search results&lt;/li&gt;
    &lt;li&gt;Perform quality control on content&lt;/li&gt;
    &lt;li&gt;Have articles describing both sides of a story&lt;/li&gt;
    &lt;li&gt;Be a recognized authority on articles topics&lt;/li&gt;
    &lt;li&gt;Avoid mass-produced articles to a large number of creators, or
spread across a large network of sites, so that individual pages or
sites don’t get as much attention or care&lt;/li&gt;
    &lt;li&gt;For a health related query, this site should be trusted by users&lt;/li&gt;
    &lt;li&gt;The site should be recognized as an authoritative source when mentioned by name&lt;/li&gt;
    &lt;li&gt;Articles should provide a complete or comprehensive description of the topic&lt;/li&gt;
    &lt;li&gt;Articles should contain insightful analysis or interesting information that is beyond obvious&lt;/li&gt;
    &lt;li&gt;Is this the sort of page you’d want to bookmark, share with a friend, or recommend?&lt;/li&gt;
    &lt;li&gt;Avoid including an excessive amount of ads that distract from or
 interfere with the main content of the article&lt;/li&gt;
    &lt;li&gt;Articles should have the quality to be included in a printed magazine, encyclopedia or book&lt;/li&gt;
    &lt;li&gt;Avoid writing articles that are short, unsubstantial, or otherwise lacking in helpful specifics&lt;/li&gt;
    &lt;li&gt;Produce pages with great care and attention to detail&lt;/li&gt;
    &lt;li&gt;Make users happy from reading your articles&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;metadata&quot;&gt;Metadata&lt;/h3&gt;

&lt;p&gt;Google does not use the keywords meta tag in web ranking&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://webmasters.googleblog.com/2009/09/google-does-not-use-keywords-meta-tag.html&quot;&gt;
  &lt;p&gt;At least for Google’s web search results currently (September 2009),
the answer is no. Google doesn’t use the “keywords” meta tag in our
web search ranking.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;Matt Cutts, Search Quality Team &lt;a href=&quot;https://webmasters.googleblog.com/2009/09/google-does-not-use-keywords-meta-tag.html&quot;&gt;2009-09-21&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;mobile&quot;&gt;Mobile&lt;/h3&gt;

&lt;p&gt;Mobile friendly contribute to a positive ranking.&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://webmasters.googleblog.com/2016/08/helping-users-easily-access-content-on.html&quot;&gt;
  &lt;p&gt;To keep search results uncluttered, we’ll be removing the label,
although the mobile-friendly criteria will continue to be a ranking
signal.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;Helping users easily access content on mobile &lt;a href=&quot;https://webmasters.googleblog.com/2016/08/helping-users-easily-access-content-on.html&quot;&gt;2016-08-23&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;p&gt;Mobile friendly websites are boosted on mobile search results.&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://webmasters.googleblog.com/2015/04/rolling-out-mobile-friendly-update.html&quot;&gt;
  &lt;p&gt;As we noted earlier this year, today’s the day we begin globally
rolling out our mobile-friendly update. We’re boosting the ranking
of mobile-friendly pages on mobile search results. Now searchers can
more easily find high-quality and relevant results where text is
readable without tapping or zooming, tap targets are spaced
appropriately, and the page avoids unplayable content or horizontal
scrolling.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;Rolling out the mobile-friendly update by Takaki Makino and Doantam Phan &lt;a href=&quot;https://webmasters.googleblog.com/2015/04/rolling-out-mobile-friendly-update.html&quot;&gt;2015-04-15&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://webmasters.googleblog.com/2016/03/continuing-to-make-web-more-mobile.html&quot;&gt;
  &lt;p&gt;Last year, we started using mobile-friendliness as a ranking signal
on mobile searches. Today we’re announcing that beginning in May,
we’ll start rolling out an update to mobile search results that
increases the effect of the ranking signal to help our users find
even more pages that are relevant and mobile-friendly.&lt;/p&gt;
  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;Klemen Kloboves, Software Engineer  &lt;a href=&quot;https://webmasters.googleblog.com/2016/03/continuing-to-make-web-more-mobile.html&quot;&gt;2016-03-16&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;p&gt;Mobile-friendly websites are more likely to appear in search results
over other non-mobile friendly sites with similar content.&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://webmasters.googleblog.com/2015/02/finding-more-mobile-friendly-search.html&quot;&gt;
  &lt;p&gt;Starting April 21, we will be expanding our use of
mobile-friendliness as a ranking signal. This change will affect
mobile searches in all languages worldwide and will have a
significant impact in our search results. Consequently, users will
find it easier to get relevant, high quality search results that are
optimized for their devices.&lt;/p&gt;
  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;Takaki Makino, Chaesang Jung, and Doantam Phan in Finding more mobile-friendly search results &lt;a href=&quot;https://webmasters.googleblog.com/2015/02/finding-more-mobile-friendly-search.html&quot;&gt;2015-02-26&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;social&quot;&gt;Social&lt;/h3&gt;

&lt;p&gt;Google +1 button amount of shares may increase web pages ranking.&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://webmasters.googleblog.com/2011/03/introducing-1-button.html&quot;&gt;
  &lt;p&gt;We’ll add +1 buttons to search results and ads on Google.com. We’ll
also start to look at +1’s as one of the many signals we use to
determine a page’s relevance and ranking, including social signals
from other services. For +1’s, as with any new ranking signal, we’ll
be starting carefully and learning how those signals affect search
quality over time.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;David Byttow, Software Engineer, +1 Button &lt;a href=&quot;https://webmasters.googleblog.com/2011/03/introducing-1-button.html&quot;&gt;2011-03-08&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;speed&quot;&gt;Speed&lt;/h3&gt;

&lt;p&gt;Site speed is a ranking signal, fast loading websites are preferred.&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://webmasters.googleblog.com/2010/04/using-site-speed-in-web-search-ranking.html&quot;&gt;
  &lt;p&gt;You may have heard that here at Google we’re obsessed with speed, in
our products and on the web. As part of that effort, today we’re
including a new signal in our search ranking algorithms: site
speed. Site speed reflects how quickly a website responds to web
requests.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;Amit Singhal, Google Fellow and Matt Cutts, Principal Engineer, Google Search Quality Team &lt;a href=&quot;https://webmasters.googleblog.com/2010/04/using-site-speed-in-web-search-ranking.html&quot;&gt;2010-04-09&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;p&gt;Why is speed important to Google? Websites with fast loading times
are good to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;internet users, improving user experience while browsing&lt;/li&gt;
  &lt;li&gt;reduces operating costs&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://webmasters.googleblog.com/2010/04/using-site-speed-in-web-search-ranking.html&quot;&gt;
  &lt;p&gt;Faster sites create happy users and we’ve seen in our internal
studies that when a site responds slowly, visitors spend less time
there. But faster sites don’t just improve user experience; recent
data shows that improving site speed also reduces operating costs.&lt;/p&gt;
  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;Amit Singhal, Google Fellow and Matt Cutts, Principal Engineer, Google Search Quality Team &lt;a href=&quot;https://webmasters.googleblog.com/2010/04/using-site-speed-in-web-search-ranking.html&quot;&gt;2010-04-09&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://webmasters.googleblog.com&quot;&gt;http://webmasters.googleblog.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://support.google.com&quot;&gt;http://support.google.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://developers.google.com&quot;&gt;http://developers.google.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 26 Jan 2017 00:00:00 +0000</pubDate>
        <link>https://simpleit.rocks/essential-seo-tips-and-techniques-from-trusted-sources/</link>
        <guid isPermaLink="true">https://simpleit.rocks/essential-seo-tips-and-techniques-from-trusted-sources/</guid>
        
        <category>ranking,</category>
        
        <category>seo</category>
        
        
        <category>docs</category>
        
        <category>web</category>
        
        <category>seo</category>
        
      </item>
    
      <item>
        <title>Find Out If Your Joomla Site Has Been Hacked</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;Like every popular Content Management System, there is always going to
be at risk of being attacked or hacked. This article explore some
methods to try to detect the integrity of your website.&lt;/p&gt;

&lt;p&gt;Monitor your site regularly.&lt;/p&gt;

&lt;h2 id=&quot;check-web-server-logs&quot;&gt;Check web server logs&lt;/h2&gt;

&lt;p&gt;Check primarily for brute force attacks and attempts to upload
files. With Apache in Ubuntu that would tipically mean to analyze
&lt;code class=&quot;highlighter-rouge&quot;&gt;/var/log/apache2/access.log&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/log/apache2/error.log&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;For example, there is someone playing around one of my Joomla websites
trying to explode Wordpress vulnerabilities:&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;/var/log/apache2/$&lt;/span&gt; &lt;kbd&gt;grep POST access.log&lt;/kbd&gt;
XXXXXXXX.com:80 193.XXX.XXX.XXX - - [26/Jan/2017:00:07:03 +0000] &quot;POST /wp-content/themes/method/lib/scripts/dl-skin.php HTTP/1.1&quot; 500 363 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 6.1; rv:34.0) Gecko/20100101 Firefox/34.0&quot;
XXXXXXXX.com:80 193.XXX.XXX.XXX - - [26/Jan/2017:00:07:14 +0000] &quot;POST /wp-content/themes/modular/lib/scripts/dl-skin.php HTTP/1.1&quot; 500 363 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 6.1; rv:34.0) Gecko/20100101 Firefox/34.0&quot;
XXXXXXXX.com:80 193.XXX.XXX.XXX - - [26/Jan/2017:00:07:25 +0000] &quot;POST /wp-content/themes/myriad/lib/scripts/dl-skin.php HTTP/1.1&quot; 500 363 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 6.1; rv:34.0) Gecko/20100101 Firefox/34.0&quot;
XXXXXXXX.com:80 193.XXX.XXX.XXX - - [26/Jan/2017:00:07:56 +0000] &quot;POST /wp-content/themes/persuasion/lib/scripts/dl-skin.php HTTP/1.1&quot; 500 363 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 6.1; rv:34.0) Gecko/20100101 Firefox/34.0&quot;
&lt;/samp&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;detect-modified-php-files&quot;&gt;Detect modified PHP files&lt;/h2&gt;

&lt;p&gt;You can look for PHP files that were modified recently, or after some
date you are sure didn’t perform anything to the source code.&lt;/p&gt;

&lt;p&gt;That would show new possibly uploaded scripts or modified files with
injected code in them.&lt;/p&gt;

&lt;h3 id=&quot;find-files-modified-recently&quot;&gt;Find files modified recently&lt;/h3&gt;

&lt;p&gt;To find recently modified files: &lt;kbd&gt;find /path/to/dir -type f -mtime -7 -ls&lt;/kbd&gt;.
The &lt;code class=&quot;highlighter-rouge&quot;&gt;-mtime&lt;/code&gt; parameter detects when file’s data was last modified
&lt;em&gt;n&lt;/em&gt;24* hours ago, in that case we analyze the previous 7 days.&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;find . -type f -mtime -7 -ls&lt;/kbd&gt;
&lt;/samp&gt;
&lt;/pre&gt;

&lt;h3 id=&quot;find-files-modified-after-a-specific-date&quot;&gt;Find files modified after a specific date&lt;/h3&gt;

&lt;p&gt;List files in given directory modified after given date &lt;kbd&gt; find
/path/to/dir -newermt &quot;yyyy-mm-dd&quot;&lt;/kbd&gt;.&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot;&gt;
  &lt;p&gt;-newerXY reference
              Compares the timestamp of the current file with reference.  The reference argument is normally the name  of  a  file
              (and  one  of its timestamps is used for the comparison) but it may also be a string describing an absolute time.  X
              and Y are placeholders for other letters, and these letters select which time belonging to how reference is used for
              the comparison.&lt;/p&gt;

  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;          a   The access time of the file reference
          B   The birth time of the file reference
          c   The inode status change time of reference
          m   The modification time of the file reference
          t   reference is interpreted directly as a time
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;Find man page&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this example we look for files modified with the current directory
as the base directory and modified after “2016-12-01”.&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;find . -newermt &quot;2017-01-25&quot; -ls&lt;/kbd&gt;
1089538    4 drwxr-xr-x   2 marcanuy www-data     4096 Jan 25 04:13 ./website/logs
&lt;/samp&gt;
&lt;/pre&gt;

&lt;h3 id=&quot;finding-hacked-files-with-pattern-matching&quot;&gt;Finding hacked files with pattern matching&lt;/h3&gt;

&lt;p&gt;Most of the time injected code will be obfuscated, making it harder to
look for obvious patterns, but we can try some alternatives though.&lt;/p&gt;

&lt;p&gt;This code would be tipically inserted as the first line of the PHP
file, starting with a variable, so we can look for that pattern, first
line starting with &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;?php $&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;grep -m 1 -r &lt;span class=&quot;s1&quot;&gt;'^&amp;lt;?php \$'&lt;/span&gt; .&amp;lt;/kbd&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Output:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./website/components/com_users/views/profile/tmpl/default_params.php:&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$fields&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getFieldset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'params'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
./website/administrator/cache/com_ajax3j/9411v11.php:&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$coi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;97&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;115&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x73&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;101&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x72&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x74&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$zioj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;98&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chr&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;97&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x73&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x65&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x36&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;52&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x5f&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x64&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;101&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;c&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x6f&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;101&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$jd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;115&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x74&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;114&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x5f&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;r&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;111&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x74&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$coi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$zioj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$jd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_POST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;97&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;t&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;97&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)])));&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;die&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;First line of the output looks fine, but the second line looks a bit
more than suspicious code, we can decode it and understand what it is
doing before removing it.&lt;/p&gt;

&lt;h2 id=&quot;files-with-wrong-permissions&quot;&gt;Files with wrong permissions&lt;/h2&gt;

&lt;p&gt;Check out for writable upload directories. The &lt;code class=&quot;highlighter-rouge&quot;&gt;find&lt;/code&gt; command can be used to scan for files and folder with
permission 777.&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;find . -type f,d -perm 0777 -print &lt;/kbd&gt;
&lt;/pre&gt;

&lt;blockquote class=&quot;blockquote&quot;&gt;
  &lt;p&gt;-perm mode
              File’s  permission  bits  are  exactly  mode (octal or sym‐
              bolic).  Since an exact match is required, if you  want  to
              use this form for symbolic modes, you may have to specify a
              rather complex mode string.  For example -perm  g=w  will
              only  match  files  which have mode 0020 (that is, ones for
              which group write permission is the only  permission  set).
              It  is more likely that you will want to use the / or -
              forms, for example -perm -g=w,  which  matches  any  file
              with  group write permission.  See the EXAMPLES section for
              some illustrative examples.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;Find man page&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;p&gt;Also we can choose many file types at once separating them with ‘,’
like &lt;code class=&quot;highlighter-rouge&quot;&gt;-type=d,f&lt;/code&gt; where &lt;code class=&quot;highlighter-rouge&quot;&gt;d&lt;/code&gt; stands for &lt;em&gt;directory&lt;/em&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;f&lt;/code&gt; for &lt;em&gt;files&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Then we can modify it a bit to scan through all the 777 files on the
server and show ones with &lt;code class=&quot;highlighter-rouge&quot;&gt;.php&lt;/code&gt; to look for uploaded scripts:&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;find . -name &quot;*php&quot; -type f -perm 777&lt;/kbd&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;A lot of people recommends to install a clean backup after being
hacked, this approach will fail sooner or later because you need to
know what failed to prevent happening again.&lt;/p&gt;

&lt;p&gt;This article covers some basic strategies for identifying compromised
files, attacks are constant with varying methods so it is important to
know commands and strategies to recover our sites and keep them safe.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.gregfreeman.io/2013/how-to-tell-if-your-php-site-has-been-compromised/&quot;&gt;http://www.gregfreeman.io/2013/how-to-tell-if-your-php-site-has-been-compromised/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.bluebridgedev.com/hacked-joomla-files&quot;&gt;https://www.bluebridgedev.com/hacked-joomla-files&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.joomshaper.com/blog/my-joomla-site-was-hacked-what-to-do&quot;&gt;https://www.joomshaper.com/blog/my-joomla-site-was-hacked-what-to-do&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.google.com/transparencyreport/safebrowsing/diagnostic/index.html&quot;&gt;https://www.google.com/transparencyreport/safebrowsing/diagnostic/index.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The Joomla Hacking Compendium &lt;a href=&quot;https://www.exploit-db.com/papers/15780/&quot;&gt;https://www.exploit-db.com/papers/15780/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 26 Jan 2017 00:00:00 +0000</pubDate>
        <link>https://simpleit.rocks/find-out-if-your-joomla-site-has-been-hacked/</link>
        <guid isPermaLink="true">https://simpleit.rocks/find-out-if-your-joomla-site-has-been-hacked/</guid>
        
        
        <category>docs</category>
        
        <category>php</category>
        
        <category>joomla</category>
        
      </item>
    
      <item>
        <title>What Are The Supported Language Highlighters In Jekyll</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;To highlight code snippets in Jekyll post’s, there are many
highlighters that can be used. Jekyll comes with &lt;em&gt;Rouge&lt;/em&gt; by
default.&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://github.com/jneen/rouge&quot;&gt;
  &lt;p&gt;Rouge is a pure-ruby syntax highlighter. It can highlight 100
different languages, and output HTML or ANSI 256-color text. Its
HTML output is compatible with stylesheets designed for pygments.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;Rouge &lt;a href=&quot;https://github.com/jneen/rouge&quot;&gt;project&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;p&gt;This article explores how to see the languages that Jekyll support in
your current environment and the list of languages for which Jekyll
can generate syntax highlighting in posts.&lt;/p&gt;

&lt;h2 id=&quot;command&quot;&gt;Command&lt;/h2&gt;

&lt;p&gt;To know which languages can have code syntax highlighted, we can user
the command &lt;code class=&quot;highlighter-rouge&quot;&gt;rougify&lt;/code&gt; that is part of
the &lt;a href=&quot;https://rubygems.org/gems/rouge&quot;&gt;rouge gem&lt;/a&gt; already installed by Jekyll.&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;rougify --help&lt;/kbd&gt;
usage: rougify [command] [args...]

where &lt;command /&gt; is one of:
        highlight       highlight code
        help            print help info
        style           print CSS styles
        list            list available lexers
        version         print the rouge version number

See `rougify help &lt;command /&gt;` for more info.
&lt;/samp&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;list&quot;&gt;List&lt;/h2&gt;

&lt;p&gt;As of &lt;em&gt;rouge&lt;/em&gt; version &lt;code class=&quot;highlighter-rouge&quot;&gt;1.11.1&lt;/code&gt;, this is the complete list of languages
that it supports.&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;rougify version&lt;/kbd&gt;
1.11.1
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;rougify list&lt;/kbd&gt;
== Available Lexers ==                                                                                                       [168/287]
actionscript: ActionScript [aliases: as,as3]

apache: configuration files for Apache web server

apiblueprint: Markdown based API description language. [aliases: apiblueprint,apib]

applescript: The AppleScript scripting language by Apple Inc. (http://developer.apple.com/applescript/) [aliases: applescript]

biml: BIML, Business Intelligence Markup Language

c: The C programming language

ceylon: Say more, more clearly.

cfscript: CFScript, the CFML scripting language [aliases: cfc]

clojure: The Clojure programming language (clojure.org) [aliases: clj,cljs]

cmake: The cross-platform, open-source build system

coffeescript: The Coffeescript programming language (coffeescript.org) [aliases: coffee,coffee-script]

common_lisp: The Common Lisp variant of Lisp (common-lisp.net) [aliases: cl,common-lisp,elisp,emacs-lisp]

conf: A generic lexer for configuration files [aliases: config,configuration]

coq: Coq (coq.inria.fr)

cpp: The C++ programming language [aliases: c++]

csharp: a multi-paradigm language targeting .NET [aliases: c#,cs]

css: Cascading Style Sheets, used to style web pages

d: The D programming language(dlang.org) [aliases: dlang]

dart: The Dart programming language (dartlang.com)                                                                           [131/287]

diff: Lexes unified diffs or patches [aliases: patch,udiff]

eiffel: Eiffel programming language

elixir: Elixir language (elixir-lang.org) [aliases: elixir,exs]

erb: Embedded ruby template files [aliases: eruby,rhtml]

erlang: The Erlang programming language (erlang.org) [aliases: erl]

factor: Factor, the practical stack language (factorcode.org)

fortran: Fortran 95 Programming Language

gherkin: A business-readable spec DSL ( github.com/cucumber/cucumber/wiki/Gherkin ) [aliases: cucumber,behat]

glsl: The GLSL shader language

go: The Go programming language (http://golang.org) [aliases: go,golang]

gradle: A powerful build system for the JVM

groovy: The Groovy programming language (http://www.groovy-lang.org/)

haml: The Haml templating system for Ruby (haml.info) [aliases: HAML]

handlebars: the Handlebars and Mustache templating languages [aliases: hbs,mustache]

haskell: The Haskell programming language (haskell.org) [aliases: hs]

html: HTML, the markup language of the web

http: http requests and responses

ini: the INI configuration format                                                                                             [95/287]

io: The IO programming language (http://iolanguage.com)

java: The Java programming language (java.com)

javascript: JavaScript, the browser scripting language [aliases: js]

jinja: Django/Jinja template engine (jinja.pocoo.org) [aliases: django]

json: JavaScript Object Notation (json.org)

json-doc: JavaScript Object Notation with extenstions for documentation

jsonnet: An elegant, formally-specified config language for JSON

julia: The Julia programming language [aliases: jl]

kotlin: Kotlin &amp;lt;http://kotlinlang.org&amp;gt;

liquid: Liquid is a templating engine for Ruby (liquidmarkup.org)

literate_coffeescript: Literate coffeescript [aliases: litcoffee]

literate_haskell: Literate haskell [aliases: lithaskell,lhaskell,lhs]

llvm: The LLVM Compiler Infrastructure (http://llvm.org/)

lua: Lua (http://www.lua.org)

make: Makefile syntax [aliases: makefile,mf,gnumake,bsdmake]

markdown: Markdown, a light-weight markup language for authors [aliases: md,mkd]

matlab: Matlab [aliases: m]

moonscript: Moonscript (http://www.moonscript.org) [aliases: moon]                                                            [59/287]

nasm: Netwide Assembler

nginx: configuration files for the nginx web server (nginx.org)

nim: The Nim programming language (http://nim-lang.org/) [aliases: nimrod]

objective_c: an extension of C commonly used to write Apple software [aliases: objc]

ocaml: Objective CAML (ocaml.org)

pascal: a procedural programming language commonly used as a teaching language.

perl: The Perl scripting language (perl.org) [aliases: pl]

php: The PHP scripting language (php.net) [aliases: php,php3,php4,php5]

plaintext: A boring lexer that doesn't highlight anything [aliases: text]

powershell: powershell [aliases: posh]

praat: The Praat scripting language (praat.org)

prolog: The Prolog programming language (http://en.wikipedia.org/wiki/Prolog) [aliases: prolog]

properties: .properties config files for Java

protobuf: Google's language-neutral, platform-neutral, extensible mechanism for serializing structured data [aliases: proto]

puppet: The Puppet configuration management language (puppetlabs.org) [aliases: pp]

python: The Python programming language (python.org) [aliases: py]

qml: QML, a UI markup language [aliases: qml]

r: The R statistics language (r-project.org) [aliases: r,R,s,S]                                                               [23/287]

racket: Racket is a Lisp descended from Scheme (racket-lang.org)

ruby: The Ruby programming language (ruby-lang.org) [aliases: rb]

rust: The Rust programming language (rust-lang.org) [aliases: rs]

sass: The Sass stylesheet language language (sass-lang.com)

scala: The Scala programming language (scala-lang.org) [aliases: scala]

scheme: The Scheme variant of Lisp

scss: SCSS stylesheets (sass-lang.com)

sed: sed, the ultimate stream editor

shell: Various shell languages, including sh and bash [aliases: bash,zsh,ksh,sh]

shell_session: A generic lexer for shell session and command line [aliases: terminal,console]

slim: The Slim template language

smalltalk: The Smalltalk programming language [aliases: st,squeak]

smarty: Smarty Template Engine [aliases: smarty]

sml: Standard ML [aliases: ml]

sql: Structured Query Language, for relational databases

swift: Multi paradigm, compiled programming language developed by Apple for iOS and OS X development. (developer.apple.com/swift)

tap: Test Anything Protocol [aliases: tap]

tcl: The Tool Command Language (tcl.tk)

tex: The TeX typesetting system [aliases: TeX,LaTeX,latex]

toml: the TOML configuration format (https://github.com/mojombo/toml)

tulip: The tulip programming language http://github.com/jneen/tulip [aliases: tlp]

twig: Twig template engine (twig.sensiolabs.org)

typescript: TypeScript, a superset of JavaScript [aliases: ts]

vb: Visual Basic [aliases: visualbasic]

verilog: The System Verilog hardware description language

viml: VimL, the scripting language for the Vim editor (vim.org) [aliases: vim,vimscript,ex]

xml: &lt;desc for=&quot;this-lexer&quot;&gt;XML&lt;/desc&gt;

yaml: Yaml Ain't Markup Language (yaml.org) [aliases: yml]

&lt;/samp&gt;
&lt;/pre&gt;

&lt;p&gt;The list is also available as a wiki page online
at
&lt;a href=&quot;https://github.com/jneen/rouge/wiki/List-of-supported-languages-and-lexers&quot;&gt;Rouge wiki&lt;/a&gt;,
this won’t be always up to date but will cover most of the languages
you will ever need.&lt;/p&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;

&lt;p&gt;To use any of the above languages, you need to enclose the code
snippets with three or more tilde characters &lt;code class=&quot;highlighter-rouge&quot;&gt;~~~&lt;/code&gt; and specify the
language or an alias appending it to the end of the starting line, for
example, to highlight a python snippet the
&lt;a href=&quot;https://kramdown.gettalong.org/syntax.html#fenced-code-blocks&quot;&gt;kramdown markdown parser&lt;/a&gt;
we use &lt;strong&gt;fenced code blocks&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~~~ python
# a comment
import datetime

def get_or_create_user(session, model, **kwargs):
    instance = session.query(model).filter_by(twitter_user_id=kwargs[&quot;twitter_user_id&quot;]).first()
	return instance
~~~
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;or using the alias &lt;code class=&quot;highlighter-rouge&quot;&gt;py&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~~~ py
# ...
~~~
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then when rendered it will look like:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# a comment&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;datetime&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_or_create_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filter_by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;twitter_user_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;twitter_user_id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/docs/templates/&quot;&gt;https://jekyllrb.com/docs/templates/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jneen/rouge&quot;&gt;https://github.com/jneen/rouge&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://kramdown.gettalong.org/syntax.html&quot;&gt;https://kramdown.gettalong.org/syntax.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 25 Jan 2017 00:00:00 +0000</pubDate>
        <link>https://simpleit.rocks/what-are-the-supported-language-highlighters-in-jekyll/</link>
        <guid isPermaLink="true">https://simpleit.rocks/what-are-the-supported-language-highlighters-in-jekyll/</guid>
        
        
        <category>docs</category>
        
        <category>ruby</category>
        
        <category>jekyll</category>
        
      </item>
    
  </channel>
</rss>
