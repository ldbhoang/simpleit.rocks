<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Simple IT ü§ò Rocks</title>
    <description>Clutter-free software concepts. Written on the go.
</description>
    <link>http://simpleit.rocks/</link>
    <atom:link href="http://simpleit.rocks/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 07 Jul 2016 01:27:52 -0300</pubDate>
    <lastBuildDate>Thu, 07 Jul 2016 01:27:52 -0300</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>Creating a git server from a git repo</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;A Git project commonly consists of three main sections in a Developer environment and 
a single section in a Git Server:&lt;/p&gt;

&lt;div class=&quot;mermaid&quot;&gt;
graph TB
    subgraph GitServer
      server[&quot;Git&quot;]==&amp;gt;bare[&quot;the Git directory&quot;]
    end
    subgraph DeveloperRepo
      git[&quot;Git&quot;]
      git==&amp;gt;dir[&quot;the Git directory &lt;br /&gt; .git&quot;]
      git==&amp;gt;stage[&quot;Staging Area&quot;]
      git==&amp;gt;work[&quot;Working Directory&quot;]
    end
&lt;/div&gt;

&lt;p&gt;In order to ‚Äúmove‚Äù a git repo to a git server, a special directory 
has to be generated first. This is called a &lt;em&gt;bare repository&lt;/em&gt;, a directory
that only contains the git data but not the project source code files,
just like the &lt;strong&gt;.git&lt;/strong&gt; directory.&lt;/p&gt;

&lt;p&gt;Then this &lt;em&gt;bare repo&lt;/em&gt; should be moved to the server, so the server acts as
 a common &lt;em&gt;git server&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The repo from which the server was generated needs to add the &lt;em&gt;git server&lt;/em&gt; as a 
&lt;em&gt;remote&lt;/em&gt; and every other developer that wants to work in that project can
&lt;em&gt;clone&lt;/em&gt; it from the server directly.&lt;/p&gt;

&lt;h2 id=&quot;create-bare-repository&quot;&gt;Create bare repository&lt;/h2&gt;

&lt;p&gt;In order to set up a Git server, you have to export an existing repository
into a new &lt;em&gt;bare repository&lt;/em&gt; (a repository that doesn‚Äôt contain 
a &lt;em&gt;working directory&lt;/em&gt;).&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone --bare my_project my_project.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;copy-repo-to-remote-server&quot;&gt;Copy repo to remote server&lt;/h2&gt;

&lt;p&gt;Put the bare repository in the server.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;scp -r my_project.git user@git.example.com:/srv/git
 &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rm -r my_project.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;add-server-repo-as-a-remote-in-local-repo&quot;&gt;Add server repo as a remote in local repo&lt;/h2&gt;

&lt;p&gt;After having the repo in the remote server, the git server remote should be
added to the local repo so it is possible to pull and push changes to it.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Set a new remote&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git remote add origin git@server:/srv/git/my_project.git

&lt;span class=&quot;c&quot;&gt;# Verify new remote&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git remote -v
origin  git@server:/srv/git/my_project.git &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;fetch&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
origin  git@server:/srv/git/my_project.git &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;push&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://git-scm.com/book/en/v2/Git-on-the-Server-Getting-Git-on-a-Server&quot;&gt;https://git-scm.com/book/en/v2/Git-on-the-Server-Getting-Git-on-a-Server&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://git-scm.com/book/ch4-1.html&quot;&gt;https://git-scm.com/book/ch4-1.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 01 Jul 2016 00:00:00 -0300</pubDate>
        <link>http://simpleit.rocks/creating-a-git-server-from-a-git-repo/</link>
        <guid isPermaLink="true">http://simpleit.rocks/creating-a-git-server-from-a-git-repo/</guid>
        
        <category>git</category>
        
        <category>server</category>
        
        <category>bare-repository</category>
        
        
        <category>docs</category>
        
        <category>git</category>
        
        <category>tutorials</category>
        
      </item>
    
      <item>
        <title>Remotes</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes&quot;&gt;https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remote repositories are versions of your project that are hosted on the Internet or network somewhere. The clone command implicitly adds the origin remote for you.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Show remotes &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git remote -v&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Add a remote &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git remote add pb https://github.com/paulboone/ticgit&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;To get data from a remote project &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git fetch [remote-name]&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;If your current branch is set up to track a remote branch, you can use the &lt;em&gt;git pull&lt;/em&gt; command to automatically fetch and then merge that remote branch into your current branch &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git pull &lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 24 Jun 2016 00:00:00 -0300</pubDate>
        <link>http://simpleit.rocks/git-basic-commands/</link>
        <guid isPermaLink="true">http://simpleit.rocks/git-basic-commands/</guid>
        
        
        <category>docs</category>
        
        <category>git</category>
        
        <category>remotes</category>
        
      </item>
    
      <item>
        <title>Git Basic Concepts</title>
        <description>&lt;h2 id=&quot;strem-of-snapshots&quot;&gt;Strem of snapshots&lt;/h2&gt;

&lt;p&gt;Git saves data like a &lt;strong&gt;stream of snapshots&lt;/strong&gt;. Every time you commit, or save the state of your project in Git, it basically takes a picture of what all your files look like at that moment and stores a reference to that snapshot. if files have not changed, Git doesn‚Äôt store the file again, just a link to the previous identical file it has already stored.&lt;/p&gt;

&lt;h2 id=&quot;integrity&quot;&gt;Integrity&lt;/h2&gt;

&lt;p&gt;Git has &lt;strong&gt;integrity&lt;/strong&gt;. Everything in Git is check-summed before it is stored and is then referred to by that checksum. It uses &lt;a href=&quot;https://en.wikipedia.org/wiki/SHA-1&quot;&gt;SHA-1&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;file-states&quot;&gt;File states&lt;/h2&gt;

&lt;p&gt;There are three &lt;em&gt;file states&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Committed&lt;/strong&gt; means that the data is stored in your local database.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Modified&lt;/strong&gt; means that you have changed the file but have not committed it to your database yet.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Staged&lt;/strong&gt; means that you have marked a modified fi\e in its current version to go into your next commit snapshot.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;lifecycle-of-the-status-of-files&quot;&gt;Lifecycle of the status of files&lt;/h3&gt;

&lt;div class=&quot;mermaid&quot;&gt;
sequenceDiagram
    Untracked -&amp;gt;&amp;gt; Staged: Add the file
    Unmodified -&amp;gt;&amp;gt; Modified: Edit the file
   	Modified -&amp;gt;&amp;gt; Staged: Stage the file
    Unmodified -&amp;gt;&amp;gt; Untracked: Remove the file
    Staged -&amp;gt;&amp;gt; Unmodified: Commit
&lt;/div&gt;

&lt;h3 id=&quot;main-sections&quot;&gt;Main Sections&lt;/h3&gt;
&lt;p&gt;Sections of a Git project:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the &lt;em&gt;Git directory&lt;/em&gt; is where Git stores the metadata and object database
for your project. It is copied when cloning a repo.&lt;/li&gt;
  &lt;li&gt;the &lt;em&gt;working directory&lt;/em&gt; is a single checkout of one version of the 
project. These files are pulled out of the compressed database in the Git
directory and placed on disk for you to use or modify.&lt;/li&gt;
  &lt;li&gt;the &lt;em&gt;staging area&lt;/em&gt; is a file, generally contained in your Git directory,
that stores information about what will go into your next commit. 
It‚Äôs sometimes referred to as the &lt;strong&gt;index&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;mermaid text-sm-center&quot;&gt;
graph TB
      git[&quot;Git Project Sections&quot;]
      git==&amp;gt;dir[&quot;the Git directory &lt;br /&gt; .git&quot;]
      git==&amp;gt;stage[&quot;Staging Area&quot;]
      git==&amp;gt;work[&quot;Working Directory&quot;]
&lt;/div&gt;
</description>
        <pubDate>Fri, 24 Jun 2016 00:00:00 -0300</pubDate>
        <link>http://simpleit.rocks/git-basic-concepts/</link>
        <guid isPermaLink="true">http://simpleit.rocks/git-basic-concepts/</guid>
        
        
        <category>docs</category>
        
        <category>git</category>
        
        <category>concepts</category>
        
      </item>
    
      <item>
        <title>Git Commands</title>
        <description>&lt;hr /&gt;
&lt;p&gt;title: Git Commands
layout: post
‚Äî-&lt;/p&gt;

&lt;h1 id=&quot;commands&quot;&gt;Commands&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Git Config &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git config --list&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Git config username and email for all repos&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ git config --global user.name &quot;John Doe&quot;&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ git config --global user.email &quot;your_email@example.com&quot;&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Initialize a repository. Creates a new subdirectory named .git that contains all of your necessary repository files. &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git init .&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Get a copy of an existing Git repo. &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git clone [url]&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 24 Jun 2016 00:00:00 -0300</pubDate>
        <link>http://simpleit.rocks/git-commands/</link>
        <guid isPermaLink="true">http://simpleit.rocks/git-commands/</guid>
        
        
        <category>docs</category>
        
        <category>git</category>
        
        <category>commands</category>
        
      </item>
    
      <item>
        <title>kramdown General Concepts</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#concepts&quot; id=&quot;markdown-toc-concepts&quot;&gt;Concepts&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#syntax&quot; id=&quot;markdown-toc-syntax&quot;&gt;Syntax&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#blockquotes&quot; id=&quot;markdown-toc-blockquotes&quot;&gt;Blockquotes&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#code-syntax-highlighting&quot; id=&quot;markdown-toc-code-syntax-highlighting&quot;&gt;Code syntax highlighting&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#links&quot; id=&quot;markdown-toc-links&quot;&gt;Links&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#table-of-content-generation&quot; id=&quot;markdown-toc-table-of-content-generation&quot;&gt;Table of content generation&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#references&quot; id=&quot;markdown-toc-references&quot;&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;concepts&quot;&gt;Concepts&lt;/h1&gt;

&lt;p&gt;Markdown superset converter&lt;/p&gt;

&lt;h1 id=&quot;syntax&quot;&gt;Syntax&lt;/h1&gt;

&lt;h2 id=&quot;blockquotes&quot;&gt;Blockquotes&lt;/h2&gt;

&lt;p&gt;Two alternatives for fully semantically correct &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote&quot;&gt;blockquotes&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Adding the &lt;em&gt;cite&lt;/em&gt; attribute in &lt;em&gt;blockquote&lt;/em&gt; tag:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-kramdown&quot;&gt;&amp;gt; The rule of thumb is, don&#39;t introduce a new attribute outside of the __init__ method, otherwise you&#39;ve given the caller an object that isn&#39;t fully initialized.
{: cite=&quot;https://jeffknupp.com/blog/2014/06/18/improve-your-python-python-classes-and-object-oriented-programming/&quot;}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Generates the following HTML:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;blockquote&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cite=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://jeffknupp.com/blog/2014/06/18/improve-your-python-python-classes-and-object-oriented-programming/&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;The rule of thumb is, don‚Äôt introduce a new attribute outside of the &lt;span class=&quot;nt&quot;&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;init&lt;span class=&quot;nt&quot;&gt;&amp;lt;/strong&amp;gt;&lt;/span&gt; method, otherwise you‚Äôve given the caller an object that isn‚Äôt fully initialized.
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/blockquote&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Adding a &lt;em&gt;cite&lt;/em&gt; element inside the &lt;em&gt;blockquote&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gt&quot;&gt;&amp;gt; The secret to creativity is knowing how to hide your sources. &lt;/span&gt;
&lt;span class=&quot;gt&quot;&gt;&amp;gt; -- &amp;lt;cite&amp;gt;[Albert Einstein][1]&amp;lt;/cite&amp;gt;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;http://www.quotedb.com/quotes/2112&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Generates in HTML:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;blockquote&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;The secret to creativity is knowing how to hide your sources. 
  ‚Äì &lt;span class=&quot;nt&quot;&gt;&amp;lt;cite&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.quotedb.com/quotes/2112&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Albert Einstein&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/cite&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/blockquote&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;code-syntax-highlighting&quot;&gt;Code syntax highlighting&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;kramdown&lt;/em&gt; can use &lt;a href=&quot;https://github.com/jneen/rouge&quot;&gt;rouge&lt;/a&gt; or &lt;a href=&quot;http://coderay.rubychan.de/&quot;&gt;Coderay&lt;/a&gt; for &lt;a href=&quot;http://kramdown.gettalong.org/syntax_highlighter/coderay.html&quot;&gt;syntax highlighting&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The language of the source code can be specified appending the name of the language after the opening line. e.g. for HTML:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;With tildes&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~~~ html
&amp;lt;p&amp;gt; this is my paragraph&amp;lt;/p&amp;gt;
~~~
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Using &lt;abbr title=&quot;Inline Attribute List&quot;&gt;IAL&lt;/abbr&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~~~
def myfunction?
  1618
end
~~~
{: .language-ruby}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In Jekyll also works:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Using backticks:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;redcarpet&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;markdown&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Redcarpet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;markdown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_html&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Or with curly braces:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;foo&#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;links&quot;&gt;Links&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Languages Supported &lt;a href=&quot;https://highlightjs.org/static/demo/&quot;&gt;https://highlightjs.org/static/demo/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Languages supported by Rouge: &lt;a href=&quot;https://github.com/jneen/rouge/tree/master/lib/rouge/lexers&quot;&gt;https://github.com/jneen/rouge/tree/master/lib/rouge/lexers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;table-of-content-generation&quot;&gt;Table of content generation&lt;/h2&gt;

&lt;p&gt;Kramdown can generate an automatic &lt;a href=&quot;https://en.wikipedia.org/wiki/Table_of_contents&quot;&gt;Table of Contents&lt;/a&gt; for all the &lt;em&gt;headers&lt;/em&gt; that have an &lt;em&gt;id&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;As by default it generates automatic &lt;em&gt;ids&lt;/em&gt; for all the header, there is only needed to add a list and name using &lt;abbr title=&quot;Inline Attribute List&quot;&gt;IAL&lt;/abbr&gt; as the placeholder of the generated &lt;abbr title=&quot;Table Of Contents&quot;&gt;TOC&lt;/abbr&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; TOC
{:toc}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://kramdown.gettalong.org/converter/html.html#toc&quot;&gt;http://kramdown.gettalong.org/converter/html.html#toc&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Documentation &lt;a href=&quot;http://kramdown.gettalong.org/syntax.html&quot;&gt;http://kramdown.gettalong.org/syntax.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Quickref &lt;a href=&quot;http://kramdown.gettalong.org/quickref.html&quot;&gt;http://kramdown.gettalong.org/quickref.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 22 Jun 2016 00:00:00 -0300</pubDate>
        <link>http://simpleit.rocks/kramdown-general-concepts/</link>
        <guid isPermaLink="true">http://simpleit.rocks/kramdown-general-concepts/</guid>
        
        
        <category>docs</category>
        
        <category>kramdown</category>
        
      </item>
    
      <item>
        <title>HTML viewport meta tag for responsive designs</title>
        <description>&lt;h1 id=&quot;using-the-viewport-meta-tag&quot;&gt;Using the viewport meta tag&lt;/h1&gt;

&lt;blockquote cite=&quot;https://developers.google.com/speed/docs/insights/ConfigureViewport#overview&quot;&gt;
  &lt;p&gt;A viewport controls how a webpage is displayed on a mobile device. Without a viewport, mobile devices will render the page at a typical desktop screen width, scaled to fit the screen. Setting a viewport gives control over the page‚Äôs width and scaling on different devices.
 Pages optimized to display well on mobile devices should include a meta viewport in the head of the document specifying width=device-width, initial-scale=1.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, initial-scale=1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;CSS Media queries&lt;/em&gt; can be applied based on viewport size. Based on the characteristics of the device rendering the content, such as &lt;em&gt;width&lt;/em&gt; and &lt;em&gt;height&lt;/em&gt;, media queries can change the styles used for each device characteristic.&lt;/p&gt;

&lt;blockquote cite=&quot;https://developers.google.com/web/fundamentals/design-and-ui/responsive/fundamentals/use-media-queries?hl=en&quot;&gt;
  &lt;p&gt;Use min-width over min-device-width to ensure the broadest experience.
Use relative sizes for elements to avoid breaking layout.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;/* CSS Rules used when query matches */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Mozilla/Mobile/Viewport_meta_tag&quot;&gt;https://developer.mozilla.org/en/docs/Mozilla/Mobile/Viewport_meta_tag&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.google.com/speed/docs/insights/ConfigureViewport&quot;&gt;https://developers.google.com/speed/docs/insights/ConfigureViewport&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.w3.org/TR/mwabp/#bp-viewport&quot;&gt;https://www.w3.org/TR/mwabp/#bp-viewport&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.w3schools.com/css/css_rwd_viewport.asp&quot;&gt;http://www.w3schools.com/css/css_rwd_viewport.asp&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/design-and-ui/responsive/fundamentals/use-media-queries?hl=en&quot;&gt;https://developers.google.com/web/fundamentals/design-and-ui/responsive/fundamentals/use-media-queries?hl=en&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 21 Jun 2016 00:00:00 -0300</pubDate>
        <link>http://simpleit.rocks/viewport-metatag-html/</link>
        <guid isPermaLink="true">http://simpleit.rocks/viewport-metatag-html/</guid>
        
        
        <category>docs</category>
        
        <category>html</category>
        
        <category>responsive</category>
        
      </item>
    
      <item>
        <title>Python Language Basic Concepts</title>
        <description>&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Style guide&lt;/em&gt; for python code PEP-8 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0008/&quot;&gt;https://www.python.org/dev/peps/pep-0008/&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;Tools to help in formatting Python code:
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://pypi.python.org/pypi/pep8&quot;&gt;pep8&lt;/a&gt; checks your Python code against some of the style conventions.&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://pypi.python.org/pypi/autopep8&quot;&gt;autopep8&lt;/a&gt; automatically formats Python code to conform to the PEP 8 style guide.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Relative imports makes code more portable.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;absolut import&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;from core.views import absolute&lt;/code&gt; &amp;lt;‚Äî  To import from outside the app&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;explicit relative&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;from .models import CommandModel&lt;/code&gt; &amp;lt;‚Äî To import in current app&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Avoid Using &lt;code class=&quot;highlighter-rouge&quot;&gt;Import *&lt;/code&gt; as it can lead to undesirable results. You can‚Äôt really know which packages you are using.&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 14 Jun 2016 00:00:00 -0300</pubDate>
        <link>http://simpleit.rocks/python-language-basic-concepts/</link>
        <guid isPermaLink="true">http://simpleit.rocks/python-language-basic-concepts/</guid>
        
        
        <category>docs</category>
        
        <category>python</category>
        
        <category>language</category>
        
        <category>concepts</category>
        
      </item>
    
      <item>
        <title>Ruby</title>
        <description>&lt;!-- markdown-toc start - Don&#39;t edit this section. Run M-x markdown-toc-generate-toc again --&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#concepts&quot;&gt;Concepts&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#ruby-sandbox&quot;&gt;Ruby Sandbox&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#bundler&quot;&gt;Bundler&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#bundler-common-workflow&quot;&gt;Bundler common workflow&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#references&quot;&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- markdown-toc end --&gt;

&lt;h1 id=&quot;concepts&quot;&gt;Concepts&lt;/h1&gt;

&lt;h2 id=&quot;ruby-sandbox&quot;&gt;Ruby Sandbox&lt;/h2&gt;

&lt;p&gt;Manage dependencies independently of the current platform.&lt;/p&gt;

&lt;h3 id=&quot;bundler&quot;&gt;Bundler&lt;/h3&gt;

&lt;blockquote cite=&quot;http://bundler.io/&quot;&gt;
  &lt;p&gt;Bundler provides a consistent environment for Ruby projects by tracking and installing the exact gems and versions that are needed.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;bundler-common-workflow&quot;&gt;Bundler common workflow&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Declare dependencies of an application in a &lt;a href=&quot;http://bundler.io/gemfile.html&quot;&gt;Gemfile&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://bundler.io/bundle_install.html&quot;&gt;Install&lt;/a&gt; above versions of the dependencies into an isolated location &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle install&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;run the app: &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle exec&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Official Documentation &lt;a href=&quot;https://www.ruby-lang.org/&quot;&gt;https://www.ruby-lang.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 10 Jun 2016 00:00:00 -0300</pubDate>
        <link>http://simpleit.rocks/ruby/</link>
        <guid isPermaLink="true">http://simpleit.rocks/ruby/</guid>
        
        
        <category>docs</category>
        
        <category>ruby</category>
        
        <category>language</category>
        
      </item>
    
      <item>
        <title>How To Prevent Content Displaying In A Jekyll Development Environment</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;While developing and continuously testing a jekyll site, avoiding any 
javascript external request can greatly improve the loading speed of each 
page.&lt;/p&gt;

&lt;p&gt;In the case of advertisements, also prevents from accidentally clicking
developer‚Äôs own ads which can cause an account suspension.&lt;/p&gt;

&lt;p&gt;The basic concept to make it possible is to &lt;strong&gt;create different Jekyll builds
for &lt;em&gt;development&lt;/em&gt; and &lt;em&gt;production&lt;/em&gt; environments&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;environment&quot;&gt;Environment&lt;/h2&gt;

&lt;p&gt;The easiest way to avoid any external javascript request is to detect the
environment on which Jekyll is running in liquid templates using the 
environment variable &lt;a href=&quot;https://jekyllrb.com/docs/configuration/#specifying-a-jekyll-environment-at-build-time&quot;&gt;JEKYLL_ENV&lt;/a&gt; at build (or serve) time.&lt;/p&gt;

&lt;p&gt;To build a production ready jekyll site it can be specified like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JEKYLL_ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;production jekyll build
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If none environment is explicitly set, then it uses by default
&lt;code class=&quot;highlighter-rouge&quot;&gt;JEKYLL_ENV=development&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;When using a &lt;a href=&quot;http://bundler.io/man/bundle-exec.1.html&quot;&gt;Bundler command&lt;/a&gt;
it should be used like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JEKYLL_ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;production bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;jekyll build
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;detecting-the-environment-in-templates&quot;&gt;Detecting the environment in templates&lt;/h2&gt;

&lt;p&gt;To detect the environment in Jekyll liquid templates,
&lt;a href=&quot;http://www.rubydoc.info/gems/jekyll/3.1.6/Jekyll%2FDrops%2FJekyllDrop%3Aenvironment&quot;&gt;jekyll.environment&lt;/a&gt; variable contains the current environment.&lt;/p&gt;

&lt;p&gt;For example, to avoid showing post tags in development:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;jekyll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;production&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;endif&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Mon, 06 Jun 2016 00:00:00 -0300</pubDate>
        <link>http://simpleit.rocks/how-to-prevent-content-displaying-in-a-jekyll-development-environment/</link>
        <guid isPermaLink="true">http://simpleit.rocks/how-to-prevent-content-displaying-in-a-jekyll-development-environment/</guid>
        
        <category>jekyll</category>
        
        <category>environments</category>
        
        <category>adsense</category>
        
        <category>analytics</category>
        
        <category>disqus</category>
        
        
        <category>docs</category>
        
        <category>ruby</category>
        
        <category>jekyll</category>
        
        <category>tutorials</category>
        
      </item>
    
      <item>
        <title>How To Handle Adsense In A Jekyll Development Environment</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;Developing a site that uses Google Adsense has to be treated carefully. 
Developers often want to stop showing&lt;/p&gt;

&lt;p&gt;It presents the following problems:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;accidental clicks&lt;/strong&gt;. Avoid &lt;em&gt;repeatedly accidentally clicking&lt;/em&gt; on served ads while 
developing the site which can lead to an account ban.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote cite=&quot;https://support.google.com/adsense/answer/1348754?hl=en#q1&quot;&gt;
  &lt;p&gt;Although publishers are not permitted to click on their own ads for any
reason, we do understand that accidental clicks may occur. We therefore
don‚Äôt require that you contact us every time you click on your ads. Rest
assured that your account is being properly credited for all clicks and
impressions we consider to be valid.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;speed&lt;/strong&gt;. Testing the site locally without waiting for each ad request 
to resolve, avoiding any javascript external request.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are two main options to avoid these problems:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;telling Google that the &lt;em&gt;ad&lt;/em&gt; request is only for testing purposes&lt;/li&gt;
  &lt;li&gt;avoid the javascript request at all&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;alternative-1-google-code-parameter-to-make-tests&quot;&gt;Alternative 1: Google code parameter to make tests&lt;/h2&gt;

&lt;p&gt;There is a special parameter that can be enabled in Google Ad code to
avoid accidental clicks and set them up as tests.&lt;/p&gt;

&lt;p&gt;The downside of this approach is that it requires
&lt;a href=&quot;https://developers.google.com/custom-search-ads/docs/reference&quot;&gt;more checks&lt;/a&gt;
to modify an &lt;em&gt;ad&lt;/em&gt; code and if not enabled in production, &lt;strong&gt;ads clicks won‚Äôt
generate any revenue&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote cite=&quot;https://developers.google.com/custom-search-ads/docs/reference&quot;&gt;
  &lt;p&gt;To use this code you must have an AdSense account
with active permission to use AdSense Custom Search Ads.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The parameter is &lt;code class=&quot;highlighter-rouge&quot;&gt;&#39;adtest&#39; : &#39;on&#39;&lt;/code&gt; and it is defined:&lt;/p&gt;

&lt;blockquote cite=&quot;https://developers.google.com/custom-search-ads/docs/reference#page-level-parameter-descriptions&quot;&gt;
  &lt;p&gt;The adtest parameter is used to indicate that a request for ads is a test. 
When the adtest parameter has a value of on, Google treats the request as
a test and does not count the ad impressions or track the clickthrough results.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;An &lt;em&gt;easier&lt;/em&gt; and &lt;em&gt;safer&lt;/em&gt; alternative is to avoid the ad request at all.&lt;/p&gt;

&lt;h2 id=&quot;alternative-2-stop-showing-adsense-ads&quot;&gt;Alternative 2: Stop showing adsense ads&lt;/h2&gt;

&lt;p&gt;Jekyll templates can access the value of an environment variable passed
at build time to avoid any external javascript request. Based on this
variable the ads can be chosen to be shown or hidden depending on its value.&lt;/p&gt;

&lt;p&gt;When building the site with &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll build&lt;/code&gt; the variable
&lt;a href=&quot;https://jekyllrb.com/docs/configuration/#specifying-a-jekyll-environment-at-build-time&quot;&gt;JEKYLL_ENV&lt;/a&gt; 
defaults to &lt;em&gt;development&lt;/em&gt;, setting it up as &lt;em&gt;production&lt;/em&gt; makes it
possible to hide the ads in liquid templates&lt;/p&gt;

&lt;p&gt;To build a production ready jekyll site it can be specified like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JEKYLL_ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;production jekyll build
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;When using a [Bundler command]
it should be used like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JEKYLL_ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;production bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;jekyll build
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;environment-in-jekyll-liquid-template&quot;&gt;Environment in Jekyll liquid template&lt;/h2&gt;

&lt;p&gt;The environment can be accessed through the variable &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll.environment&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The Adsense ad code provided by Google can be surrounded with the
environment detection so they only gets loaded in production like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;jekyll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;production&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
  &amp;lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;!-- simpleit_after_content --&amp;gt;
  &amp;lt;ins class=&quot;adsbygoogle&quot;
       style=&quot;display:block&quot;
       data-ad-client=&quot;ca-pub-****************&quot;
       data-ad-slot=&quot;***********&quot;
       data-ad-format=&quot;auto&quot;&amp;gt;&amp;lt;/ins&amp;gt;
  &amp;lt;script&amp;gt;
    (adsbygoogle = window.adsbygoogle || []).push({});
  &amp;lt;/script&amp;gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;endif&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;A good practice is also to include something locally when not
showing them, to quickly identify ads placement, it can be:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;text with some color different from the rest of the site design&lt;/li&gt;
  &lt;li&gt;a &lt;a href=&quot;http://placehold.it/&quot;&gt;placeholder&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;an image like the ad from &lt;a href=&quot;https://support.google.com/adsense/answer/185666?hl=en&quot;&gt;example ads&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 06 Jun 2016 00:00:00 -0300</pubDate>
        <link>http://simpleit.rocks/how-to-handle-adsense-in-a-jekyll-development-environment/</link>
        <guid isPermaLink="true">http://simpleit.rocks/how-to-handle-adsense-in-a-jekyll-development-environment/</guid>
        
        <category>jekyll</category>
        
        <category>environments</category>
        
        <category>adsense</category>
        
        <category>development</category>
        
        
        <category>docs</category>
        
        <category>ruby</category>
        
        <category>jekyll</category>
        
        <category>tutorials</category>
        
      </item>
    
  </channel>
</rss>
