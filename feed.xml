<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Simple IT 🤘 Rocks</title>
    <description>Clutter-free software concepts. Written on the go.
</description>
    <link>http://simpleit.rocks/</link>
    <atom:link href="http://simpleit.rocks/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 15 Jul 2016 15:40:44 -0300</pubDate>
    <lastBuildDate>Fri, 15 Jul 2016 15:40:44 -0300</lastBuildDate>
    <generator>Jekyll v3.2.0.pre.beta1</generator>
    
      <item>
        <title>Jekyll Variables and Liquid template tags cheatsheet</title>
        <description>&lt;p&gt;Summary of all the Jekyll variables and liquid tags available.&lt;/p&gt;

&lt;h2 id=&quot;general-liquid-template-tags&quot;&gt;General Liquid template tags&lt;/h2&gt;

&lt;dl&gt;
&lt;dt&gt;jekyll.version&lt;/dt&gt;
&lt;dd&gt;Jekyll version&lt;/dd&gt;
&lt;dt&gt;jekyll.environment&lt;/dt&gt;
&lt;dd&gt;Jekyll environment&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Example Output:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Version: 3.2.0.pre.beta1 #3.2.0.pre.beta1

Environment: production # development
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jekyll/jekyll/blob/v3.2.0.pre.beta1/lib/jekyll/drops/jekyll_drop.rb&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;global-variables&quot;&gt;Global Variables&lt;/h2&gt;

&lt;dl&gt;
&lt;dt&gt;site.time&lt;/dt&gt;
&lt;dd&gt;The current time (when you run the jekyll command).&lt;/dd&gt;
&lt;dt&gt;site.pages&lt;/dt&gt;
&lt;dd&gt;A list of all Pages.&lt;/dd&gt;
&lt;dt&gt;site.posts&lt;/dt&gt;
&lt;dd&gt;A reverse chronological list of all Posts.&lt;/dd&gt;
&lt;dt&gt;site.related_posts&lt;/dt&gt;
&lt;dd&gt;If the page being processed is a Post, this contains a list of up to ten related Posts. By default, these are the ten most recent posts. For high quality but slow to compute results, run the jekyll command with the --lsi (latent semantic indexing) option. Also note GitHub Pages does not support the lsi option when generating sites.&lt;/dd&gt;
&lt;dt&gt;site.static_files&lt;/dt&gt;
&lt;dd&gt;A list of all static files (i.e. files not processed by Jekyll's converters or the Liquid renderer). Each file has three properties: path, modified_time and extname.&lt;/dd&gt;
&lt;dt&gt;site.html_pages&lt;/dt&gt;
&lt;dd&gt;A subset of `site.pages` listing those which end in `.html`.&lt;/dd&gt;
&lt;dt&gt;site.html_files&lt;/dt&gt;
&lt;dd&gt;A subset of `site.static_files` listing those which end in `.html`.&lt;/dd&gt;
&lt;dt&gt;site.collections&lt;/dt&gt;
&lt;dd&gt;A list of all the collections.&lt;/dd&gt;
&lt;dt&gt;site.data&lt;/dt&gt;
&lt;dd&gt;A list containing the data loaded from the YAML files located in the _data directory.&lt;/dd&gt;
&lt;dt&gt;site.documents&lt;/dt&gt;
&lt;dd&gt;A list of all the documents in every collection.&lt;/dd&gt;
&lt;dt&gt;site.categories.CATEGORY&lt;/dt&gt;
&lt;dd&gt;The list of all Posts in category CATEGORY.&lt;/dd&gt;
&lt;dt&gt;site.tags.TAG&lt;/dt&gt;
&lt;dd&gt;The list of all Posts with tag TAG.&lt;/dd&gt;
&lt;dt&gt;site.[CONFIGURATION_DATA]&lt;/dt&gt;
&lt;dd&gt;All the variables set via the command line and your _config.yml are available through the site variable. For example, if you have url: http://mysite.com in your configuration file, then in your Posts and Pages it will be stored in site.url. Jekyll does not parse changes to _config.yml in watch mode, you must restart Jekyll to see changes to variables. &lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;&lt;a href=&quot;https://jekyllrb.com/docs/variables/&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;post&quot;&gt;Post&lt;/h2&gt;

&lt;dl&gt;
&lt;dt&gt;page.title&lt;/dt&gt;
&lt;dd&gt;The title of the Page.&lt;/dd&gt;
&lt;dt&gt;page.date&lt;/dt&gt;
&lt;dd&gt;The Date assigned to the Post. This can be overridden in a Post’s front matter by specifying a new date/time in the format YYYY-MM-DD HH:MM:SS (assuming UTC), or YYYY-MM-DD HH:MM:SS +/-TTTT (to specify a time zone using an offset from UTC. e.g. 2008-12-14 10:30:00 +0900).&lt;/dd&gt;
&lt;dt&gt;page.categories&lt;/dt&gt;
&lt;dd&gt;The list of categories to which this post belongs. Categories are derived from the directory structure above the _posts directory. For example, a post at /work/code/_posts/2008-12-24-closures.md would have this field set to ['work', 'code']. These can also be specified in the YAML Front Matter.&lt;/dd&gt;
&lt;dt&gt;page.tags&lt;/dt&gt;
&lt;dd&gt;The list of tags to which this post belongs. These can be specified in the YAML Front Matter.&lt;/dd&gt;

&lt;dt&gt;page.content&lt;/dt&gt;
&lt;dd&gt;The content of the Page, rendered or un-rendered depending upon what Liquid is being processed and what page is.&lt;/dd&gt;
&lt;dt&gt;page.excerpt&lt;/dt&gt;
&lt;dd&gt;The un-rendered excerpt of the Page.&lt;/dd&gt;
&lt;dt&gt;page.url&lt;/dt&gt;
&lt;dd&gt;The URL of the Post without the domain, but with a leading slash, e.g. /2008/12/14/my-post.html&lt;/dd&gt;
&lt;dt&gt;page.id&lt;/dt&gt;
&lt;dd&gt;An identifier unique to the Post (useful in RSS feeds). e.g. /2008/12/14/my-post&lt;/dd&gt;
&lt;dt&gt;page.path&lt;/dt&gt;
&lt;dd&gt;The path to the raw post or page. Example usage: Linking back to the page or post’s source on GitHub. This can be overridden in the YAML Front Matter.&lt;/dd&gt;
&lt;dt&gt;page.next&lt;/dt&gt;
&lt;dd&gt;The next post relative to the position of the current post in site.posts. Returns nil for the last entry.&lt;/dd&gt;
&lt;dt&gt;page.previous&lt;/dt&gt;
&lt;dd&gt;The previous post relative to the position of the current post in site.posts. Returns nil for the first entry. &lt;/dd&gt;

&lt;/dl&gt;

&lt;p&gt;&lt;a href=&quot;https://jekyllrb.com/docs/frontmatter/&quot;&gt;Source 1&lt;/a&gt;
&lt;a href=&quot;https://jekyllrb.com/docs/variables/&quot;&gt;Source 2&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;paginator&quot;&gt;Paginator&lt;/h2&gt;

&lt;p class=&quot;alert alert-danger&quot;&gt;Paginator variables are available in index files only &lt;code class=&quot;highlighter-rouge&quot;&gt;index.{md,htm,html}&lt;/code&gt;&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;paginator.per_page&lt;/dt&gt;
&lt;dd&gt;Number of Posts per page.&lt;/dd&gt;
&lt;dt&gt;paginator.posts&lt;/dt&gt;
&lt;dd&gt;Posts available for that page.&lt;/dd&gt;
&lt;dt&gt;paginator.total_posts&lt;/dt&gt;
&lt;dd&gt;Total number of Posts.&lt;/dd&gt;
&lt;dt&gt;paginator.total_pages&lt;/dt&gt;
&lt;dd&gt;Total number of pages.&lt;/dd&gt;
&lt;dt&gt;paginator.page&lt;/dt&gt;
&lt;dd&gt;The number of the current page.&lt;/dd&gt;
&lt;dt&gt;paginator.previous_page&lt;/dt&gt;
&lt;dd&gt;The number of the previous page.&lt;/dd&gt;
&lt;dt&gt;paginator.previous_page_path&lt;/dt&gt;
&lt;dd&gt;The path to the previous page.&lt;/dd&gt;
&lt;dt&gt;paginator.next_page&lt;/dt&gt;
&lt;dd&gt;The number of the next page.&lt;/dd&gt;
&lt;dt&gt;paginator.next_page_path&lt;/dt&gt;
&lt;dd&gt;The path to the next page.&lt;/dd&gt;
&lt;/dl&gt;

&lt;h2 id=&quot;collections&quot;&gt;Collections&lt;/h2&gt;

&lt;p&gt;Variables that belong to &lt;em&gt;collections&lt;/em&gt; and also the ones defined in &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;label&lt;/dt&gt;
&lt;dd&gt;The name of your collection, e.g. my_collection.&lt;/dd&gt;
&lt;dt&gt;docs&lt;/dt&gt;
&lt;dd&gt;An array of documents.&lt;/dd&gt;
&lt;dt&gt;files&lt;/dt&gt;
&lt;dd&gt;An array of static files in the collection.&lt;/dd&gt;
&lt;dt&gt;relative_directory&lt;/dt&gt;
&lt;dd&gt;The path to the collection's source directory, relative to the site source.&lt;/dd&gt;
&lt;dt&gt;directory&lt;/dt&gt;
&lt;dd&gt;The full path to the collections's source directory.&lt;/dd&gt;
&lt;dt&gt;output&lt;/dt&gt;
&lt;dd&gt;Whether the collection's documents will be output as individual files. &lt;/dd&gt;
&lt;/dl&gt;

&lt;h3 id=&quot;collection-document&quot;&gt;Collection Document&lt;/h3&gt;

&lt;p&gt;Variables in a single collection Document&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;content&lt;/dt&gt;
&lt;dd&gt;The (unrendered) content of the document. If no YAML Front Matter is provided, Jekyll will not generate the file in your collection. If YAML Front Matter is used, then this is all the contents of the file after the terminating `---` of the front matter.&lt;/dd&gt;
&lt;dt&gt;output&lt;/dt&gt;
&lt;dd&gt;The rendered output of the document, based on the content.&lt;/dd&gt;
&lt;dt&gt;path&lt;/dt&gt;
&lt;dd&gt;The full path to the document's source file.&lt;/dd&gt;
&lt;dt&gt;relative_path&lt;/dt&gt;
&lt;dd&gt;The path to the document's source file relative to the site source.&lt;/dd&gt;
&lt;dt&gt;url&lt;/dt&gt;
&lt;dd&gt;The URL of the rendered collection. The file is only written to the destination when the collection to which it belongs has output: true in the site's configuration.&lt;/dd&gt;
&lt;dt&gt;collection&lt;/dt&gt;
&lt;dd&gt;The name of the document's collection.&lt;/dd&gt;
&lt;dt&gt;date&lt;/dt&gt;
&lt;dd&gt; The date of the document's collection.&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;&lt;a href=&quot;https://jekyllrb.com/docs/collections/#documents&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;common-code-snippets&quot;&gt;Common Code Snippets&lt;/h2&gt;

&lt;h3 id=&quot;list-of-posts&quot;&gt;List of posts&lt;/h3&gt;

&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;ul&amp;gt;
  &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;post&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;site.posts&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &amp;lt;li&amp;gt;
      &amp;lt;a href=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&quot;&amp;gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
  &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endfor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;list-of-collections&quot;&gt;List of collections&lt;/h3&gt;

&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;collection&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;site.collections&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;

&amp;lt;h4&amp;gt;Collection &lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;forloop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&amp;lt;/h4&amp;gt;

&amp;lt;a href=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;baseurl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&quot;&amp;gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;camelcase}}&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&amp;lt;dl&amp;gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&amp;lt;dt&amp;gt;Docs&amp;lt;/dt&amp;gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&amp;lt;dd&amp;gt;{%&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;comment&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;docs&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endcomment&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;&amp;lt;/dd&amp;gt;
&amp;lt;dt&amp;gt;Files&amp;lt;/dt&amp;gt;
&amp;lt;dd&amp;gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&amp;lt;/dd&amp;gt;
&amp;lt;dt&amp;gt;Relative directory&amp;lt;/dt&amp;gt;
&amp;lt;dd&amp;gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;relative_directory&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&amp;lt;/dd&amp;gt;
&amp;lt;dt&amp;gt;Directory&amp;lt;/dt&amp;gt;
&amp;lt;dd&amp;gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&amp;lt;/dd&amp;gt;
&amp;lt;dt&amp;gt;Output&amp;lt;/dt&amp;gt;
&amp;lt;dd&amp;gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&amp;lt;/dd&amp;gt;
&amp;lt;/dl&amp;gt;
&amp;lt;hr&amp;gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endfor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;example-output&quot;&gt;Example Output&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Collection 1

books

Docs
Files
Relative directory
    _books
Directory
    /home/marcanuy/Development/simpleit.rocks/_books
Output
    true

Collection 2

posts

Docs
Files
Relative directory
    _posts
Directory
    /home/marcanuy/Development/simpleit.rocks/_posts
Output
    true 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;list-of-document-attributes-of-a-collection&quot;&gt;List of document attributes of a Collection&lt;/h3&gt;

&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;collection&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;site.collections&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;

&amp;lt;h4&amp;gt;Collection &lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;forloop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&amp;lt;/h4&amp;gt;

&amp;lt;dl&amp;gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;doc&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;collection.docs&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&amp;lt;dt&amp;gt;Path&amp;lt;/dt&amp;gt;&amp;lt;dd&amp;gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&amp;lt;/dd&amp;gt;
&amp;lt;dt&amp;gt;Relative_path&amp;lt;/dt&amp;gt;&amp;lt;dd&amp;gt; &lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;relative_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&amp;lt;/dd&amp;gt;
&amp;lt;dt&amp;gt;Collection&amp;lt;/dt&amp;gt;&amp;lt;dd&amp;gt; &lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&amp;lt;/dd&amp;gt;
&amp;lt;dt&amp;gt;Date&amp;lt;/dt&amp;gt;&amp;lt;dd&amp;gt; &lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&amp;lt;/dd&amp;gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endfor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&amp;lt;/dl&amp;gt;
&amp;lt;hr&amp;gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endfor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;example-output-1&quot;&gt;Example Output&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Path
    docs/ruby/jekyll/templates/_posts/2016-07-13-jekyll-variables-and-liquid-template-tags-cheatsheet.md
Relative_path
    docs/ruby/jekyll/templates/_posts/2016-07-13-jekyll-variables-and-liquid-template-tags-cheatsheet.md
Collection
    posts
Date
    2016-07-13 00:00:00 -0300
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Wed, 13 Jul 2016 00:00:00 -0300</pubDate>
        <link>http://simpleit.rocks/jekyll-variables-and-liquid-template-tags-cheatsheet/</link>
        <guid isPermaLink="true">http://simpleit.rocks/jekyll-variables-and-liquid-template-tags-cheatsheet/</guid>
        
        <category>jekyll</category>
        
        <category>templates</category>
        
        <category>liquid</category>
        
        
        <category>docs</category>
        
        <category>ruby</category>
        
        <category>jekyll</category>
        
        <category>templates</category>
        
      </item>
    
      <item>
        <title>Jekyll Collections Versus Posts</title>
        <description>&lt;h2 id=&quot;differences&quot;&gt;Differences&lt;/h2&gt;

&lt;p&gt;These are the main differences between &lt;em&gt;Collections&lt;/em&gt; and &lt;em&gt;posts&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;categories&quot;&gt;Categories&lt;/h3&gt;

&lt;p&gt;A &lt;em&gt;post&lt;/em&gt; in a subdirectory structure automatically gets subdirectories
names as its &lt;em&gt;categories&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;A collection does not have &lt;em&gt;categories&lt;/em&gt; by default.&lt;/p&gt;

&lt;p class=&quot;aler alert-warning&quot;&gt;&lt;em&gt;Categories&lt;/em&gt; can be assigned to &lt;em&gt;collections&lt;/em&gt; with a parameter in each
file &lt;em&gt;front matter&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;filenames&quot;&gt;Filenames&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Post&lt;/em&gt; filenames must be in the format &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-title.&amp;lt;markup&amp;gt;&lt;/code&gt; which
assigns the post date, used to sort posts by creation date.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Collection&lt;/em&gt; filenames doesn’t need any special format in &lt;em&gt;filenames&lt;/em&gt;,
they get the &lt;code class=&quot;highlighter-rouge&quot;&gt;date&lt;/code&gt; from the file creation date.&lt;/p&gt;

&lt;p class=&quot;aler alert-warning&quot;&gt;In both cases, the document’s &lt;em&gt;date&lt;/em&gt; can be overwritten in the front 
matter of each file setting the &lt;code class=&quot;highlighter-rouge&quot;&gt;date&lt;/code&gt; variable. (i.e. &lt;code class=&quot;highlighter-rouge&quot;&gt;date: 2016-06-08&lt;/code&gt;)&lt;/p&gt;

&lt;h3 id=&quot;directories&quot;&gt;Directories&lt;/h3&gt;

&lt;p&gt;Posts have the restriction of being only recognized if they are located
under a &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; folder. 
This restriction won’t be removed as it is being kept to not break
previous versions.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Collections&lt;/em&gt; can be located directly in any directory of the &lt;em&gt;collection&lt;/em&gt; folder.&lt;/p&gt;

&lt;h3 id=&quot;dates&quot;&gt;Dates&lt;/h3&gt;

&lt;p&gt;This is one of the most important difference between them.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Posts&lt;/em&gt; were originally aimed for blogs, so the &lt;code class=&quot;highlighter-rouge&quot;&gt;date&lt;/code&gt; is a central concept
that is also displayed in its filename, they are not likely to get updated
after published.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;└── _posts
   ├── 2016-11-19-why-every-developer-should-use-emacs.md
   └── 2016-06-20-open-source-in-governments.md
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Beside &lt;em&gt;collections&lt;/em&gt; have a &lt;code class=&quot;highlighter-rouge&quot;&gt;date&lt;/code&gt; property, this is not an important
concept as it is in &lt;em&gt;posts&lt;/em&gt;, a clear structure is needed to locate each
file quickly when needed to update or add data to them.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;└── _my_collection
   ├── open-source-in-governments.md
   └── why-every-developer-should-use-emacs.md
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;summary&quot;&gt;Summary&lt;/h3&gt;

&lt;p&gt;Considering publishing a list of &lt;em&gt;books&lt;/em&gt; with both approaches:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a list of standard &lt;em&gt;posts&lt;/em&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;books&lt;/code&gt; folder.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;a &lt;em&gt;collection&lt;/em&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;_books&lt;/code&gt; folder, with the following configuration:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;/_config.yml&lt;/code&gt;:&lt;/p&gt;

        &lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  collections:
    books:
      output: true
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;alert alert-warning&quot;&gt;Note the underscore as the first character of the &lt;em&gt;collection&lt;/em&gt; folder &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/_books&lt;/code&gt;&lt;/strong&gt;,
needed to let Jekyll handle the directory as a &lt;em&gt;collection&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;This is how they basically compare:&lt;/p&gt;

&lt;table class=&quot;table&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Collection&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Post&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Directories&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/_books/science/&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/books/science/_posts/&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;File&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;item.md&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;2016-06-10-item.md&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;{{ page.categories }}&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[&quot;books&quot;, &quot;science&quot;]&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;{{ page.date }}&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;from file creation date:&lt;br /&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;2016-07-11 23:03:59&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;from filename: &lt;code class=&quot;highlighter-rouge&quot;&gt;2016-06-10&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Document access&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;site.books&lt;/code&gt; &lt;br /&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;site.collections&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;site.categories.science&lt;/code&gt;, &lt;br /&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;site.collections&lt;/code&gt;, &lt;br /&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;site.categories.books&lt;/code&gt; &lt;br /&gt; or &lt;br /&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;site.posts&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table class=&quot;table&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;File handling the URL &lt;br /&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;http://example.com/books/science&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/books.html&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;permalink: &quot;/books/science&quot;&lt;/code&gt; &lt;br /&gt; or &lt;br /&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;/books/science/index.md&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;choosing-between-collections-and-posts&quot;&gt;Choosing between Collections and Posts&lt;/h2&gt;

&lt;h3 id=&quot;features-of-collections&quot;&gt;Features of &lt;strong&gt;Collections&lt;/strong&gt;:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;a &lt;strong&gt;cleaner directory/subdirectories structure&lt;/strong&gt; without &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; folder
in each nested level&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;cleaner filenames&lt;/strong&gt; without mandatory dates.&lt;/li&gt;
  &lt;li&gt;In a hierarchical subdirectoy structure, &lt;em&gt;categories&lt;/em&gt; can be simulated
processing the &lt;code class=&quot;highlighter-rouge&quot;&gt;path&lt;/code&gt; property of each file.&lt;/li&gt;
  &lt;li&gt;Collection filenames put more emphasis in its &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt;, not the &lt;code class=&quot;highlighter-rouge&quot;&gt;date&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;features-of-posts&quot;&gt;Features of &lt;strong&gt;Posts&lt;/strong&gt;:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Posts&lt;/em&gt; were introduced in Jekyll before &lt;em&gt;collections&lt;/em&gt;, so they are
&lt;strong&gt;widely adopted&lt;/strong&gt; and with &lt;strong&gt;more plugins available&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Posts filenames put more emphasis in &lt;code class=&quot;highlighter-rouge&quot;&gt;dates&lt;/code&gt;, not the &lt;code class=&quot;highlighter-rouge&quot;&gt;titles&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;when using nested directories, creating each subdirectory &lt;em&gt;index&lt;/em&gt; is
straightforward.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Jekyll Collections docs &lt;a href=&quot;https://jekyllrb.com/docs/collections/&quot;&gt;https://jekyllrb.com/docs/collections/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Jekyll Posts docs &lt;a href=&quot;https://jekyllrb.com/docs/posts/&quot;&gt;https://jekyllrb.com/docs/posts/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 12 Jul 2016 00:00:00 -0300</pubDate>
        <link>http://simpleit.rocks/jekyll-collections-versus-posts/</link>
        <guid isPermaLink="true">http://simpleit.rocks/jekyll-collections-versus-posts/</guid>
        
        <category>jekyll</category>
        
        <category>collections</category>
        
        
        <category>docs</category>
        
        <category>ruby</category>
        
        <category>jekyll</category>
        
        <category>collections</category>
        
      </item>
    
      <item>
        <title>Creating a git server from a git repo</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;A Git project commonly consists of three main sections in a Developer environment and 
a single section in a Git Server:&lt;/p&gt;

&lt;div class=&quot;mermaid&quot;&gt;
graph TB
    subgraph GitServer
      server[&quot;Git&quot;]==&amp;gt;bare[&quot;the Git directory&quot;]
    end
    subgraph DeveloperRepo
      git[&quot;Git&quot;]
      git==&amp;gt;dir[&quot;the Git directory &lt;br /&gt; .git&quot;]
      git==&amp;gt;stage[&quot;Staging Area&quot;]
      git==&amp;gt;work[&quot;Working Directory&quot;]
    end
&lt;/div&gt;

&lt;p&gt;In order to “move” a git repo to a git server, a special directory 
has to be generated first. This is called a &lt;em&gt;bare repository&lt;/em&gt;, a directory
that only contains the git data but not the project source code files,
just like the &lt;strong&gt;.git&lt;/strong&gt; directory.&lt;/p&gt;

&lt;p&gt;Then this &lt;em&gt;bare repo&lt;/em&gt; should be moved to the server, so the server acts as
 a common &lt;em&gt;git server&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The repo from which the server was generated needs to add the &lt;em&gt;git server&lt;/em&gt; as a 
&lt;em&gt;remote&lt;/em&gt; and every other developer that wants to work in that project can
&lt;em&gt;clone&lt;/em&gt; it from the server directly.&lt;/p&gt;

&lt;h2 id=&quot;create-bare-repository&quot;&gt;Create bare repository&lt;/h2&gt;

&lt;p&gt;In order to set up a Git server, you have to export an existing repository
into a new &lt;em&gt;bare repository&lt;/em&gt; (a repository that doesn’t contain 
a &lt;em&gt;working directory&lt;/em&gt;).&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone --bare my_project my_project.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;copy-repo-to-remote-server&quot;&gt;Copy repo to remote server&lt;/h2&gt;

&lt;p&gt;Put the bare repository in the server.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;scp -r my_project.git user@git.example.com:/srv/git
 &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rm -r my_project.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;add-server-repo-as-a-remote-in-local-repo&quot;&gt;Add server repo as a remote in local repo&lt;/h2&gt;

&lt;p&gt;After having the repo in the remote server, the git server remote should be
added to the local repo so it is possible to pull and push changes to it.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Set a new remote&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git remote add origin git@server:/srv/git/my_project.git

&lt;span class=&quot;c&quot;&gt;# Verify new remote&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git remote -v
origin  git@server:/srv/git/my_project.git &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;fetch&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
origin  git@server:/srv/git/my_project.git &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;push&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://git-scm.com/book/en/v2/Git-on-the-Server-Getting-Git-on-a-Server&quot;&gt;https://git-scm.com/book/en/v2/Git-on-the-Server-Getting-Git-on-a-Server&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://git-scm.com/book/ch4-1.html&quot;&gt;https://git-scm.com/book/ch4-1.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 01 Jul 2016 00:00:00 -0300</pubDate>
        <link>http://simpleit.rocks/creating-a-git-server-from-a-git-repo/</link>
        <guid isPermaLink="true">http://simpleit.rocks/creating-a-git-server-from-a-git-repo/</guid>
        
        <category>git</category>
        
        <category>server</category>
        
        <category>bare-repository</category>
        
        
        <category>docs</category>
        
        <category>git</category>
        
        <category>tutorials</category>
        
      </item>
    
      <item>
        <title>Remotes</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes&quot;&gt;https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remote repositories are versions of your project that are hosted on the Internet or network somewhere. The clone command implicitly adds the origin remote for you.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Show remotes &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git remote -v&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Add a remote &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git remote add pb https://github.com/paulboone/ticgit&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;To get data from a remote project &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git fetch [remote-name]&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;If your current branch is set up to track a remote branch, you can use the &lt;em&gt;git pull&lt;/em&gt; command to automatically fetch and then merge that remote branch into your current branch &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git pull &lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 24 Jun 2016 00:00:00 -0300</pubDate>
        <link>http://simpleit.rocks/git-basic-commands/</link>
        <guid isPermaLink="true">http://simpleit.rocks/git-basic-commands/</guid>
        
        
        <category>docs</category>
        
        <category>git</category>
        
        <category>remotes</category>
        
      </item>
    
      <item>
        <title>Git Basic Concepts</title>
        <description>&lt;h2 id=&quot;strem-of-snapshots&quot;&gt;Strem of snapshots&lt;/h2&gt;

&lt;p&gt;Git saves data like a &lt;strong&gt;stream of snapshots&lt;/strong&gt;. Every time you commit, or save the state of your project in Git, it basically takes a picture of what all your files look like at that moment and stores a reference to that snapshot. if files have not changed, Git doesn’t store the file again, just a link to the previous identical file it has already stored.&lt;/p&gt;

&lt;h2 id=&quot;integrity&quot;&gt;Integrity&lt;/h2&gt;

&lt;p&gt;Git has &lt;strong&gt;integrity&lt;/strong&gt;. Everything in Git is check-summed before it is stored and is then referred to by that checksum. It uses &lt;a href=&quot;https://en.wikipedia.org/wiki/SHA-1&quot;&gt;SHA-1&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;file-states&quot;&gt;File states&lt;/h2&gt;

&lt;p&gt;There are three &lt;em&gt;file states&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Committed&lt;/strong&gt; means that the data is stored in your local database.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Modified&lt;/strong&gt; means that you have changed the file but have not committed it to your database yet.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Staged&lt;/strong&gt; means that you have marked a modified fi\e in its current version to go into your next commit snapshot.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;lifecycle-of-the-status-of-files&quot;&gt;Lifecycle of the status of files&lt;/h3&gt;

&lt;div class=&quot;mermaid&quot;&gt;
sequenceDiagram
    Untracked -&amp;gt;&amp;gt; Staged: Add the file
    Unmodified -&amp;gt;&amp;gt; Modified: Edit the file
   	Modified -&amp;gt;&amp;gt; Staged: Stage the file
    Unmodified -&amp;gt;&amp;gt; Untracked: Remove the file
    Staged -&amp;gt;&amp;gt; Unmodified: Commit
&lt;/div&gt;

&lt;h3 id=&quot;main-sections&quot;&gt;Main Sections&lt;/h3&gt;
&lt;p&gt;Sections of a Git project:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the &lt;em&gt;Git directory&lt;/em&gt; is where Git stores the metadata and object database
for your project. It is copied when cloning a repo.&lt;/li&gt;
  &lt;li&gt;the &lt;em&gt;working directory&lt;/em&gt; is a single checkout of one version of the 
project. These files are pulled out of the compressed database in the Git
directory and placed on disk for you to use or modify.&lt;/li&gt;
  &lt;li&gt;the &lt;em&gt;staging area&lt;/em&gt; is a file, generally contained in your Git directory,
that stores information about what will go into your next commit. 
It’s sometimes referred to as the &lt;strong&gt;index&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;mermaid text-sm-center&quot;&gt;
graph TB
      git[&quot;Git Project Sections&quot;]
      git==&amp;gt;dir[&quot;the Git directory &lt;br /&gt; .git&quot;]
      git==&amp;gt;stage[&quot;Staging Area&quot;]
      git==&amp;gt;work[&quot;Working Directory&quot;]
&lt;/div&gt;
</description>
        <pubDate>Fri, 24 Jun 2016 00:00:00 -0300</pubDate>
        <link>http://simpleit.rocks/git-basic-concepts/</link>
        <guid isPermaLink="true">http://simpleit.rocks/git-basic-concepts/</guid>
        
        
        <category>docs</category>
        
        <category>git</category>
        
        <category>concepts</category>
        
      </item>
    
      <item>
        <title>Git Commands</title>
        <description>&lt;h1 id=&quot;commands&quot;&gt;Commands&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Git Config &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git config --list&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Git config username and email for all repos&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ git config --global user.name &quot;John Doe&quot;&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ git config --global user.email &quot;your_email@example.com&quot;&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Initialize a repository. Creates a new subdirectory named .git that contains all of your necessary repository files. &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git init .&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Get a copy of an existing Git repo. &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git clone [url]&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 24 Jun 2016 00:00:00 -0300</pubDate>
        <link>http://simpleit.rocks/git-commands/</link>
        <guid isPermaLink="true">http://simpleit.rocks/git-commands/</guid>
        
        
        <category>docs</category>
        
        <category>git</category>
        
        <category>commands</category>
        
      </item>
    
      <item>
        <title>kramdown General Concepts</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#concepts&quot; id=&quot;markdown-toc-concepts&quot;&gt;Concepts&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#syntax&quot; id=&quot;markdown-toc-syntax&quot;&gt;Syntax&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#blockquotes&quot; id=&quot;markdown-toc-blockquotes&quot;&gt;Blockquotes&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#code-syntax-highlighting&quot; id=&quot;markdown-toc-code-syntax-highlighting&quot;&gt;Code syntax highlighting&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#links&quot; id=&quot;markdown-toc-links&quot;&gt;Links&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#table-of-content-generation&quot; id=&quot;markdown-toc-table-of-content-generation&quot;&gt;Table of content generation&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#references&quot; id=&quot;markdown-toc-references&quot;&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;concepts&quot;&gt;Concepts&lt;/h1&gt;

&lt;p&gt;Markdown superset converter&lt;/p&gt;

&lt;h1 id=&quot;syntax&quot;&gt;Syntax&lt;/h1&gt;

&lt;h2 id=&quot;blockquotes&quot;&gt;Blockquotes&lt;/h2&gt;

&lt;p&gt;Two alternatives for fully semantically correct &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote&quot;&gt;blockquotes&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Adding the &lt;em&gt;cite&lt;/em&gt; attribute in &lt;em&gt;blockquote&lt;/em&gt; tag:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-kramdown&quot;&gt;&amp;gt; The rule of thumb is, don't introduce a new attribute outside of the __init__ method, otherwise you've given the caller an object that isn't fully initialized.
{: cite=&quot;https://jeffknupp.com/blog/2014/06/18/improve-your-python-python-classes-and-object-oriented-programming/&quot;}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Generates the following HTML:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;blockquote&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cite=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://jeffknupp.com/blog/2014/06/18/improve-your-python-python-classes-and-object-oriented-programming/&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;The rule of thumb is, don’t introduce a new attribute outside of the &lt;span class=&quot;nt&quot;&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;init&lt;span class=&quot;nt&quot;&gt;&amp;lt;/strong&amp;gt;&lt;/span&gt; method, otherwise you’ve given the caller an object that isn’t fully initialized.
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/blockquote&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Adding a &lt;em&gt;cite&lt;/em&gt; element inside the &lt;em&gt;blockquote&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gt&quot;&gt;&amp;gt; The secret to creativity is knowing how to hide your sources. &lt;/span&gt;
&lt;span class=&quot;gt&quot;&gt;&amp;gt; -- &amp;lt;cite&amp;gt;[Albert Einstein][1]&amp;lt;/cite&amp;gt;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;http://www.quotedb.com/quotes/2112&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Generates in HTML:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;blockquote&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;The secret to creativity is knowing how to hide your sources. 
  – &lt;span class=&quot;nt&quot;&gt;&amp;lt;cite&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.quotedb.com/quotes/2112&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Albert Einstein&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/cite&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/blockquote&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;code-syntax-highlighting&quot;&gt;Code syntax highlighting&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;kramdown&lt;/em&gt; can use &lt;a href=&quot;https://github.com/jneen/rouge&quot;&gt;rouge&lt;/a&gt; or &lt;a href=&quot;http://coderay.rubychan.de/&quot;&gt;Coderay&lt;/a&gt; for &lt;a href=&quot;http://kramdown.gettalong.org/syntax_highlighter/coderay.html&quot;&gt;syntax highlighting&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The language of the source code can be specified appending the name of the language after the opening line. e.g. for HTML:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;With tildes&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~~~ html
&amp;lt;p&amp;gt; this is my paragraph&amp;lt;/p&amp;gt;
~~~
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Using &lt;abbr title=&quot;Inline Attribute List&quot;&gt;IAL&lt;/abbr&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~~~
def myfunction?
  1618
end
~~~
{: .language-ruby}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In Jekyll also works:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Using backticks:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'redcarpet'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;markdown&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Redcarpet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;markdown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_html&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Or with curly braces:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'foo'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;links&quot;&gt;Links&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Languages Supported &lt;a href=&quot;https://highlightjs.org/static/demo/&quot;&gt;https://highlightjs.org/static/demo/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Languages supported by Rouge: &lt;a href=&quot;https://github.com/jneen/rouge/tree/master/lib/rouge/lexers&quot;&gt;https://github.com/jneen/rouge/tree/master/lib/rouge/lexers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;table-of-content-generation&quot;&gt;Table of content generation&lt;/h2&gt;

&lt;p&gt;Kramdown can generate an automatic &lt;a href=&quot;https://en.wikipedia.org/wiki/Table_of_contents&quot;&gt;Table of Contents&lt;/a&gt; for all the &lt;em&gt;headers&lt;/em&gt; that have an &lt;em&gt;id&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;As by default it generates automatic &lt;em&gt;ids&lt;/em&gt; for all the header, there is only needed to add a list and name using &lt;abbr title=&quot;Inline Attribute List&quot;&gt;IAL&lt;/abbr&gt; as the placeholder of the generated &lt;abbr title=&quot;Table Of Contents&quot;&gt;TOC&lt;/abbr&gt;.&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; TOC
{:toc}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://kramdown.gettalong.org/converter/html.html#toc&quot;&gt;http://kramdown.gettalong.org/converter/html.html#toc&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Documentation &lt;a href=&quot;http://kramdown.gettalong.org/syntax.html&quot;&gt;http://kramdown.gettalong.org/syntax.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Quickref &lt;a href=&quot;http://kramdown.gettalong.org/quickref.html&quot;&gt;http://kramdown.gettalong.org/quickref.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 22 Jun 2016 00:00:00 -0300</pubDate>
        <link>http://simpleit.rocks/kramdown-general-concepts/</link>
        <guid isPermaLink="true">http://simpleit.rocks/kramdown-general-concepts/</guid>
        
        
        <category>docs</category>
        
        <category>kramdown</category>
        
      </item>
    
      <item>
        <title>HTML viewport meta tag for responsive designs</title>
        <description>&lt;h1 id=&quot;using-the-viewport-meta-tag&quot;&gt;Using the viewport meta tag&lt;/h1&gt;

&lt;blockquote cite=&quot;https://developers.google.com/speed/docs/insights/ConfigureViewport#overview&quot;&gt;
  &lt;p&gt;A viewport controls how a webpage is displayed on a mobile device. Without a viewport, mobile devices will render the page at a typical desktop screen width, scaled to fit the screen. Setting a viewport gives control over the page’s width and scaling on different devices.
 Pages optimized to display well on mobile devices should include a meta viewport in the head of the document specifying width=device-width, initial-scale=1.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, initial-scale=1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;CSS Media queries&lt;/em&gt; can be applied based on viewport size. Based on the characteristics of the device rendering the content, such as &lt;em&gt;width&lt;/em&gt; and &lt;em&gt;height&lt;/em&gt;, media queries can change the styles used for each device characteristic.&lt;/p&gt;

&lt;blockquote cite=&quot;https://developers.google.com/web/fundamentals/design-and-ui/responsive/fundamentals/use-media-queries?hl=en&quot;&gt;
  &lt;p&gt;Use min-width over min-device-width to ensure the broadest experience.
Use relative sizes for elements to avoid breaking layout.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;/* CSS Rules used when query matches */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Mozilla/Mobile/Viewport_meta_tag&quot;&gt;https://developer.mozilla.org/en/docs/Mozilla/Mobile/Viewport_meta_tag&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.google.com/speed/docs/insights/ConfigureViewport&quot;&gt;https://developers.google.com/speed/docs/insights/ConfigureViewport&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.w3.org/TR/mwabp/#bp-viewport&quot;&gt;https://www.w3.org/TR/mwabp/#bp-viewport&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.w3schools.com/css/css_rwd_viewport.asp&quot;&gt;http://www.w3schools.com/css/css_rwd_viewport.asp&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/design-and-ui/responsive/fundamentals/use-media-queries?hl=en&quot;&gt;https://developers.google.com/web/fundamentals/design-and-ui/responsive/fundamentals/use-media-queries?hl=en&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 21 Jun 2016 00:00:00 -0300</pubDate>
        <link>http://simpleit.rocks/viewport-metatag-html/</link>
        <guid isPermaLink="true">http://simpleit.rocks/viewport-metatag-html/</guid>
        
        
        <category>docs</category>
        
        <category>html</category>
        
        <category>responsive</category>
        
      </item>
    
      <item>
        <title>Python Language Basic Concepts</title>
        <description>&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Style guide&lt;/em&gt; for python code PEP-8 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0008/&quot;&gt;https://www.python.org/dev/peps/pep-0008/&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;Tools to help in formatting Python code:
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://pypi.python.org/pypi/pep8&quot;&gt;pep8&lt;/a&gt; checks your Python code against some of the style conventions.&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://pypi.python.org/pypi/autopep8&quot;&gt;autopep8&lt;/a&gt; automatically formats Python code to conform to the PEP 8 style guide.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Relative imports makes code more portable.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;absolut import&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;from core.views import absolute&lt;/code&gt; &amp;lt;—  To import from outside the app&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;explicit relative&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;from .models import CommandModel&lt;/code&gt; &amp;lt;— To import in current app&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Avoid Using &lt;code class=&quot;highlighter-rouge&quot;&gt;Import *&lt;/code&gt; as it can lead to undesirable results. You can’t really know which packages you are using.&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 14 Jun 2016 00:00:00 -0300</pubDate>
        <link>http://simpleit.rocks/python-language-basic-concepts/</link>
        <guid isPermaLink="true">http://simpleit.rocks/python-language-basic-concepts/</guid>
        
        
        <category>docs</category>
        
        <category>python</category>
        
        <category>language</category>
        
        <category>concepts</category>
        
      </item>
    
      <item>
        <title>Understanding Jekyll Posts</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;Posts can be nested in subdirectories but they always must be inside 
a &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;Their filename should follow the following format: &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-article-name.MARKUP&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In this case &lt;code class=&quot;highlighter-rouge&quot;&gt;article-name&lt;/code&gt; will be used as the post &lt;em&gt;slug&lt;/em&gt; and if there is no &lt;em&gt;title&lt;/em&gt; in the &lt;em&gt;front matter&lt;/em&gt; of the post, it will be converted to a title version removing the &lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt; chars.&lt;/p&gt;

&lt;h2 id=&quot;post-metadata&quot;&gt;Post metadata&lt;/h2&gt;

&lt;p&gt;This is a common term used in &lt;a href=&quot;https://en.wikipedia.org/wiki/Book_design#Front_matter&quot;&gt;Book design&lt;/a&gt;,
to refer to the first section of a book, usually its smallest section.&lt;/p&gt;

&lt;p&gt;In a Jekyll context, each &lt;em&gt;post&lt;/em&gt; can have page-specific variables to be included at the beginning of the file using &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML format&lt;/a&gt;. This metadata is called in Jekyll &lt;strong&gt;Front Matter&lt;/strong&gt;, and is the common place to define things like the post &lt;strong&gt;title&lt;/strong&gt;, &lt;strong&gt;layout&lt;/strong&gt;, &lt;strong&gt;description&lt;/strong&gt;, or override site-wide variable values.&lt;/p&gt;

&lt;p&gt;A common post looks like the following code, where the front matter goes inside &lt;code class=&quot;highlighter-rouge&quot;&gt;---&lt;/code&gt; tag, and then the content of the &lt;em&gt;post&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;post&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;My cool blog&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;do eiusmod tempor incididunt ut labore et dolore magna aliqua.&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Ut enim ad minim veniam, quis nostrud exercitation ullamco&lt;/span&gt; 
&lt;span class=&quot;s&quot;&gt;laboris nisi ut aliquip ex ea commodo consequat.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;variables&quot;&gt;Variables&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.
├── one_category
│   └── second_category
│      └── _posts
│	     └── nested_post.md
└── _posts
   ├── a_post.md
   └── another_post.md
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;variables-of-a-post-and-documents-posts&quot;&gt;Variables of a Post and Documents Posts&lt;/h3&gt;

&lt;div class=&quot;mermaid&quot;&gt;
graph LR
    Collections[&quot;Collections&quot;] == 1 === ColRelationship{&quot; &quot;}
    ColRelationship == N === Collection
    Collection[&quot;Collection&lt;hr /&gt;label&lt;br /&gt;docs&lt;br /&gt;files&lt;br /&gt;relative_directory&lt;br /&gt;directory&lt;br /&gt;output&quot;] == 1 === relationship{&quot; &quot;}
    relationship == N === Document[&quot;Document&lt;hr /&gt;path&lt;br /&gt;relative_path&lt;br /&gt;collection&lt;br /&gt;date&quot;]
&lt;/div&gt;

&lt;h4 id=&quot;front-matter&quot;&gt;Front matter&lt;/h4&gt;

&lt;p&gt;Predefined Variables that can be used in the &lt;em&gt;front matter&lt;/em&gt; for a &lt;em&gt;post&lt;/em&gt;:&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;page.title&lt;/dt&gt;
&lt;dd&gt;The title of the Page.&lt;/dd&gt;
&lt;dt&gt;page.date&lt;/dt&gt;
&lt;dd&gt;The Date assigned to the Post. This can be overridden in a Post’s front matter by specifying a new date/time in the format YYYY-MM-DD HH:MM:SS (assuming UTC), or YYYY-MM-DD HH:MM:SS +/-TTTT (to specify a time zone using an offset from UTC. e.g. 2008-12-14 10:30:00 +0900).&lt;/dd&gt;
&lt;dt&gt;page.categories&lt;/dt&gt;
&lt;dd&gt;The list of categories to which this post belongs. Categories are derived from the directory structure above the _posts directory. For example, a post at /work/code/_posts/2008-12-24-closures.md would have this field set to ['work', 'code']. These can also be specified in the YAML Front Matter.&lt;/dd&gt;
&lt;dt&gt;page.tags&lt;/dt&gt;
&lt;dd&gt;The list of tags to which this post belongs. These can be specified in the YAML Front Matter.&lt;/dd&gt;
&lt;/dl&gt;

&lt;h4 id=&quot;in-templates&quot;&gt;In templates&lt;/h4&gt;

&lt;p&gt;Variables also available in templates&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;page.content&lt;/dt&gt;
&lt;dd&gt;The content of the Page, rendered or un-rendered depending upon what Liquid is being processed and what page is.&lt;/dd&gt;
&lt;dt&gt;page.excerpt&lt;/dt&gt;
&lt;dd&gt;The un-rendered excerpt of the Page.&lt;/dd&gt;
&lt;dt&gt;page.url&lt;/dt&gt;
&lt;dd&gt;The URL of the Post without the domain, but with a leading slash, e.g. /2008/12/14/my-post.html&lt;/dd&gt;
&lt;dt&gt;page.id&lt;/dt&gt;
&lt;dd&gt;An identifier unique to the Post (useful in RSS feeds). e.g. /2008/12/14/my-post&lt;/dd&gt;
&lt;dt&gt;page.path&lt;/dt&gt;
&lt;dd&gt;The path to the raw post or page. Example usage: Linking back to the page or post’s source on GitHub. This can be overridden in the YAML Front Matter.&lt;/dd&gt;
&lt;dt&gt;page.next&lt;/dt&gt;
&lt;dd&gt;The next post relative to the position of the current post in site.posts. Returns nil for the last entry.&lt;/dd&gt;
&lt;dt&gt;page.previous&lt;/dt&gt;
&lt;dd&gt;The previous post relative to the position of the current post in site.posts. Returns nil for the first entry. &lt;/dd&gt;
&lt;/dl&gt;
</description>
        <pubDate>Sun, 12 Jun 2016 00:00:00 -0300</pubDate>
        <link>http://simpleit.rocks/understanding-jekyll-posts/</link>
        <guid isPermaLink="true">http://simpleit.rocks/understanding-jekyll-posts/</guid>
        
        <category>jekyll</category>
        
        <category>posts</category>
        
        
        <category>docs</category>
        
        <category>ruby</category>
        
        <category>jekyll</category>
        
      </item>
    
  </channel>
</rss>
