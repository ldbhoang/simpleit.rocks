<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Simple IT ü§ò Rocks</title>
    <description>Clutter-free software concepts. Written on the go.
</description>
    <link>https://simpleit.rocks/</link>
    <atom:link href="https://simpleit.rocks/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 25 Aug 2017 04:19:51 +0000</pubDate>
    <lastBuildDate>Fri, 25 Aug 2017 04:19:51 +0000</lastBuildDate>
    <generator>Jekyll v3.5.2</generator>
    
      <item>
        <title>Set Up Ubuntu To Serve A Django Website Step By Step</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;This is a guide to have a website in an Ubuntu server using &lt;strong&gt;nginx&lt;/strong&gt;
and &lt;strong&gt;systemd&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Ubuntu uses &lt;em&gt;systemd&lt;/em&gt; to manage system and service daemons and
processes, we will create configuration files to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;create temporary files&lt;/li&gt;
  &lt;li&gt;manage gunicorn system service&lt;/li&gt;
  &lt;li&gt;manage gunicorn system socket&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And lastly configuring &lt;em&gt;nginx&lt;/em&gt; to handle requests.&lt;/p&gt;

&lt;p&gt;We assume the following configuration to set up the server, this is a
basic configuration example to follow the tutorial and be easier to
customize with your own data:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;website domain: &lt;code class=&quot;highlighter-rouge&quot;&gt;example.com&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Django source code located in &lt;code class=&quot;highlighter-rouge&quot;&gt;/home/chengue/sites/example&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;environment variable pointing to production settings:
&lt;code class=&quot;highlighter-rouge&quot;&gt;DJANGO_SETTINGS_MODULE=example.settings.production&lt;/code&gt;`&lt;/li&gt;
  &lt;li&gt;Python virtual environment for the &lt;code class=&quot;highlighter-rouge&quot;&gt;example&lt;/code&gt; project at:
&lt;code class=&quot;highlighter-rouge&quot;&gt;/home/chengue/.virtualenvs/example&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Ubuntu User: chengue&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At the end of the tutorial we will have:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;nginx handling requests to &lt;code class=&quot;highlighter-rouge&quot;&gt;example.com&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;traffic gets redirected from &lt;em&gt;non-www&lt;/em&gt; to &lt;em&gt;www&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;configuring-systemd-services&quot;&gt;Configuring Systemd services&lt;/h2&gt;

&lt;h3 id=&quot;socket&quot;&gt;Socket&lt;/h3&gt;

&lt;p&gt;To handle incoming Gunicorn requests we create a unix socket
controlled by &lt;em&gt;systemd&lt;/em&gt;. As the configuration filename should end in
&lt;code class=&quot;highlighter-rouge&quot;&gt;.socket&lt;/code&gt; we create the following file:
&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/systemd/system/gunicorn.socket&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Unit]
Description=gunicorn socket

[Socket]
ListenStream=/run/gunicorn/socket

[Install]
WantedBy=sockets.target
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p cite=&quot;http://docs.gunicorn.org/en/stable/deploy.html#systemd&quot;&gt;&lt;em&gt;systemd&lt;/em&gt; will listen on this socket and start &lt;strong&gt;Gunicorn&lt;/strong&gt;
automatically in response to traffic.&lt;/p&gt;

&lt;p&gt;This sockets will be used by Gunicorn service using the parameter
&lt;code class=&quot;highlighter-rouge&quot;&gt;--bind unix:/run/gunicorn/socket&lt;/code&gt; in the service file.&lt;/p&gt;

&lt;h3 id=&quot;service&quot;&gt;Service&lt;/h3&gt;

&lt;p&gt;Then the service that use the above socket, In
&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/systemd/system/gunicorn.service&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Unit]
Description=gunicorn daemon
Requires=gunicorn.socket
After=network.target

[Service]
PIDFile=/run/gunicorn/pid
User=chengue
Group=www-data
RuntimeDirectory=gunicorn
WorkingDirectory=/home/chengue/sites/example/example
ExecStart=/home/chengue/.virtualenvs/example/bin/gunicorn \
          --access-logfile /home/chengue/sites/logs/example.access.log \
          --error-logfile /home/chengue/sites/logs/example.error.log \
          --pid /run/gunicorn/pid   \
          --env DJANGO_SETTINGS_MODULE=example.settings.production \
          --bind unix:/run/gunicorn/socket example.wsgi
ExecReload=/bin/kill -s HUP $MAINPID
ExecStop=/bin/kill -s TERM $MAINPID
PrivateTmp=true

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p class=&quot;alert alert-info&quot;&gt;Be sure to adjust &lt;code class=&quot;highlighter-rouge&quot;&gt;WorkingDirectory&lt;/code&gt; to your application root.&lt;/p&gt;

&lt;h3 id=&quot;temporal-file&quot;&gt;Temporal file&lt;/h3&gt;

&lt;p&gt;Temporal files handled by &lt;em&gt;systemd&lt;/em&gt; are located in &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/tmpfiles.d/&lt;/code&gt;,
we create &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/tmpfiles.d/gunicorn.conf&lt;/code&gt; with the following content:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;d /run/gunicorn 0755 chengue www-data -
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p class=&quot;alert alert-info&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;www-data&lt;/code&gt; is the Linux group of &lt;code class=&quot;highlighter-rouge&quot;&gt;nginx&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;web-proxy&quot;&gt;Web proxy&lt;/h2&gt;

&lt;p&gt;Lastly, configure the web proxy to send traffic to the &lt;em&gt;Gunicorn&lt;/em&gt;
socket. Create a virtual site in &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/nginx/sites-available/example.com&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server {
	# redirect www to non-www
    server_name www.example.com;
    return 301 $scheme://example.com$request_uri;
}

server {
	server_name example.com;

	#location /static {
	#    alias /home/chengue/sites/example/static;
	#}

	#location /media {
	#    alias /home/chengue/sites/example/media;
	#}

	location / {
		proxy_set_header Host $host;
		proxy_pass http://unix:/run/gunicorn/socket;
	}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now that we have our &lt;code class=&quot;highlighter-rouge&quot;&gt;example.com&lt;/code&gt; configuration as an available
website in nginx, we should enable it creating a symbolic link in
&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/nginx/sites-enabled/example.com&lt;/code&gt; pointing to the above file:&lt;/p&gt;

&lt;p&gt;&lt;kbd&gt;sudo ln -s /etc/nginx/sites-available/example.com \
    /etc/nginx/sites-enabled/example.com&lt;/kbd&gt;&lt;/p&gt;

&lt;h2 id=&quot;commands&quot;&gt;Commands&lt;/h2&gt;

&lt;h3 id=&quot;enabling-services&quot;&gt;Enabling services&lt;/h3&gt;

&lt;p&gt;Enable services to autostart at boot:&lt;/p&gt;

&lt;p&gt;&lt;kbd&gt;systemctl enable gunicorn.socket&lt;/kbd&gt;
&lt;kbd&gt;systemctl enable nginx.service&lt;/kbd&gt;&lt;/p&gt;

&lt;h3 id=&quot;activate-services&quot;&gt;Activate services&lt;/h3&gt;

&lt;p&gt;Manually activating services:&lt;/p&gt;

&lt;p&gt;&lt;kbd&gt;systemctl start gunicorn.socket&lt;/kbd&gt;
&lt;kbd&gt;systemctl start nginx&lt;/kbd&gt;&lt;/p&gt;

&lt;h3 id=&quot;testing&quot;&gt;Testing&lt;/h3&gt;

&lt;p&gt;To test if Gunicorn works &lt;kbd&gt;curl --unix-socket /run/gunicorn/socket
http&lt;/kbd&gt; should retrieve an HTML from the server.&lt;/p&gt;

&lt;h3 id=&quot;status&quot;&gt;Status&lt;/h3&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;systemctl status gunicorn.socket&lt;/kbd&gt;
‚óè gunicorn.socket - gunicorn socket
   Loaded: loaded (/etc/systemd/system/gunicorn.socket; enabled; vendor preset: enabled)
   Active: active (running) since Mon 2017-07-03 18:52:15 EDT; 2h 58min ago
   Listen: /run/gunicorn/socket (Stream)

Jul 03 18:52:15  systemd[1]: Closed gunicorn socket.
Jul 03 18:52:15  systemd[1]: Stopping gunicorn socket.
Jul 03 18:52:15  systemd[1]: Listening on gunicorn socket.
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;systemctl status gunicorn.service&lt;/kbd&gt;
   Loaded: loaded (/etc/systemd/system/gunicorn.service; disabled; vendor preset: enabled)
   Active: active (running) since Mon 2017-07-03 18:52:15 EDT; 2h 59min ago
 Main PID: 14216 (gunicorn)
    Tasks: 2 (limit: 4915)
   Memory: 41.8M
      CPU: 5.544s
   CGroup: /system.slice/gunicorn.service
           ‚îú‚îÄ14216 /home/chengue/.virtualenvs/example/bin/python3.6 /home/chengue/.virtualenvs/example/bin/gunicorn --access
           ‚îî‚îÄ14252 /home/chengue/.virtualenvs/pullgravity/bin/python3.6 /home/chengue/.virtualenvs/example/bin/gunicorn --access

Jul 03 18:52:15  systemd[1]: Started gunicorn daemon.
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;systemctl status nginx.service&lt;/kbd&gt;
   Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset: enabled)
  Drop-In: /etc/systemd/system/nginx.service.d
           ‚îî‚îÄoverride.conf
   Active: active (running) since Mon 2017-07-03 18:52:21 EDT; 3h 1min ago
     Docs: man:nginx(8)
 Main PID: 14353 (nginx)
    Tasks: 2 (limit: 4915)
   Memory: 2.8M
      CPU: 205ms
   CGroup: /system.slice/nginx.service
           ‚îú‚îÄ14353 nginx: master process /usr/sbin/nginx -g daemon on; master_process on;
           ‚îî‚îÄ14357 nginx: worker process

Jul 03 18:52:21  systemd[1]: Starting A high performance web server and a reverse proxy server...
Jul 03 18:52:21  systemd[1]: Started A high performance web server and a reverse proxy server.
&lt;/samp&gt;
&lt;/pre&gt;

&lt;h3 id=&quot;debugging&quot;&gt;Debugging&lt;/h3&gt;

&lt;p&gt;An useful command to see &lt;em&gt;systemd&lt;/em&gt; logs filtered by service is
&lt;kbd&gt;journalctl&lt;/kbd&gt;, it query the &lt;em&gt;systemd&lt;/em&gt; journal and with the
&lt;code class=&quot;highlighter-rouge&quot;&gt;-u&lt;/code&gt; parameter show messages for the specified systemd unit.&lt;/p&gt;

&lt;p&gt;Using our services:&lt;/p&gt;

&lt;p&gt;&lt;kbd&gt;journalctl -u nginx.service&lt;/kbd&gt;
&lt;kbd&gt;journalctl -u gunicorn.service&lt;/kbd&gt;
&lt;kbd&gt;journalctl -u gunicorn.socket&lt;/kbd&gt;&lt;/p&gt;

&lt;h2 id=&quot;repo&quot;&gt;Repo&lt;/h2&gt;

&lt;p&gt;The files created in this tutorial are available in this Github repository: &lt;a href=&quot;https://github.com/marcanuy/django-deploy-guide&quot;&gt;https://github.com/marcanuy/django-deploy-guide&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Official page &lt;a href=&quot;https://www.freedesktop.org/wiki/Software/systemd/&quot;&gt;https://www.freedesktop.org/wiki/Software/systemd/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Gunicorn systemd section &lt;a href=&quot;http://docs.gunicorn.org/en/stable/deploy.html#systemd&quot;&gt;http://docs.gunicorn.org/en/stable/deploy.html#systemd&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Linux manual pages:
    &lt;ul&gt;
      &lt;li&gt;&lt;kbd&gt;man systemd.socket&lt;/kbd&gt;&lt;/li&gt;
      &lt;li&gt;&lt;kbd&gt;man systemd.service&lt;/kbd&gt;&lt;/li&gt;
      &lt;li&gt;&lt;kbd&gt;man tmpfiles.d&lt;/kbd&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Unix socket &lt;a href=&quot;https://en.wikipedia.org/wiki/Unix_domain_socket&quot;&gt;https://en.wikipedia.org/wiki/Unix_domain_socket&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;nginx proxy &lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass&quot;&gt;http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 03 Jul 2017 00:00:00 +0000</pubDate>
        <link>https://simpleit.rocks/set-up-ubuntu-to-serve-a-django-website-step-by-step/</link>
        <guid isPermaLink="true">https://simpleit.rocks/set-up-ubuntu-to-serve-a-django-website-step-by-step/</guid>
        
        
        <category>docs</category>
        
        <category>python</category>
        
        <category>django</category>
        
      </item>
    
      <item>
        <title>How To Download A Website With Wget The Right Way</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;To download an entire website from Linux it is often recommended to
use &lt;code class=&quot;highlighter-rouge&quot;&gt;wget&lt;/code&gt;, however, it must be done using the right parameters or the
downloaded website won‚Äôt be similar to the original one, with probably
relative broken links. This tutorial explores the right combination to
download a website:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;converting relative links to full paths so they can be browsed
offline.&lt;/li&gt;
  &lt;li&gt;preventing requesting too many web pages too fast, overloading the server
and possibly being blocked from requesting more.&lt;/li&gt;
  &lt;li&gt;avoid overwriting or creating duplicates of already downloaded files.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;wget-summary&quot;&gt;Wget summary&lt;/h2&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://www.gnu.org/software/wget/manual/html_node/Overview.html#Overview&quot;&gt;
  &lt;p&gt;GNU Wget is a free utility for non-interactive download of files
from the Web&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;&lt;a href=&quot;https://www.gnu.org/software/wget/manual/html_node/Overview.html#Overview&quot;&gt;wget
manual Overview&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;wget&lt;/code&gt; command is very popular in Linux and present in most
distributions.&lt;/p&gt;

&lt;p&gt;To download an entire website we use the following parameters:&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--wait=2&lt;/code&gt;&lt;/dt&gt;
  &lt;dd&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Wait the specified number of seconds between the retrievals. In
this case 2 seconds.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/dd&gt;
  &lt;dt&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--limit-rate=20K&lt;/code&gt;&lt;/dt&gt;
  &lt;dd&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Limit the download speed to amount bytes per second.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/dd&gt;
  &lt;dt&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--recursive&lt;/code&gt;&lt;/dt&gt;
  &lt;dd&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Turn on recursive retrieving. The default maximum depth is 5.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/dd&gt;
  &lt;dd&gt;If the website has more levels than 5, then you can specify it with &lt;code class=&quot;highlighter-rouge&quot;&gt;--level=depth&lt;/code&gt;&lt;/dd&gt;
  &lt;dt&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--page-requisites&lt;/code&gt;&lt;/dt&gt;
  &lt;dd&gt;
    &lt;blockquote&gt;
      &lt;p&gt;download all the files that are necessary to properly display a
given HTML page.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/dd&gt;
  &lt;dd&gt;
    &lt;blockquote&gt;
      &lt;p&gt;This includes such things as inlined images, sounds, and
referenced stylesheets.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/dd&gt;
  &lt;dt&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--user-agent=Mozilla&lt;/code&gt;`&lt;/dt&gt;
  &lt;dd&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Identify as Mozilla to the HTTP server.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/dd&gt;
  &lt;dt&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--no-parent&lt;/code&gt;&lt;/dt&gt;
  &lt;dd&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Do not ever ascend to the parent directory when retrieving
recursively.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/dd&gt;
  &lt;dt&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--convert-links&lt;/code&gt;&lt;/dt&gt;
  &lt;dd&gt;
    &lt;blockquote&gt;
      &lt;p&gt;After the download is complete, convert the links in the document
to make them suitable for local viewing.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/dd&gt;
  &lt;dt&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--adjust-extension&lt;/code&gt;&lt;/dt&gt;
  &lt;dd&gt;
    &lt;blockquote&gt;
      &lt;p&gt;If a file of type application/xhtml+xml or text/html is downloaded
and the URL does not end with the regexp &lt;code class=&quot;highlighter-rouge&quot;&gt;\.[Hh][Tt][Mm][Ll]?&lt;/code&gt;, this
option will cause the suffix .html to be appended to the local
filename.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/dd&gt;
  &lt;dt&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--no-clobber&lt;/code&gt;&lt;/dt&gt;
  &lt;dd&gt;
    &lt;blockquote&gt;
      &lt;p&gt;When running Wget with -r, re-downloading a file will result in
the new copy simply overwriting the old.  Adding -nc will prevent
this behavior, instead causing the original version to be preserved
and any newer copies on the server to be ignored.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Summarizing, these are the needed parameters:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget --wait&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	 --limit-rate&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;20K &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	 --recursive
	 --page-requisites &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	 --user-agent&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Mozilla &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	 --no-parent &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	 --convert-links &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	 --adjust-extension &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	 --no-clobber &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	 https://example.com
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Or in one line:&lt;/p&gt;

&lt;p&gt;&lt;kbd&gt;wget --wait=2 --limit-rate=20K --recursive --page-requisites --user-agent=Mozilla --no-parent --convert-links --adjust-extension --no-clobber https://example.com&lt;/kbd&gt;&lt;/p&gt;

&lt;h2 id=&quot;example&quot;&gt;Example&lt;/h2&gt;

&lt;p&gt;Let‚Äôs try to download the &lt;a href=&quot;https://example.com&quot;&gt;https://example.com&lt;/a&gt; website (single page)
to see how verbose is &lt;code class=&quot;highlighter-rouge&quot;&gt;wget&lt;/code&gt; and how it behaves.&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;wget --wait=2
--limit-rate=20K --recursive --page-requisites --user-agent=Mozilla
--no-parent --convert-links --adjust-extension --no-clobber  https://example.com&lt;/kbd&gt;
--2017-06-30 19:48:46--  https://example.com/
Resolving example.com (example.com)... 93.184.216.34
Connecting to example.com (example.com)|93.184.216.34|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 1270 (1,2K) [text/html]
Saving to: ‚Äòexample.com/index.html‚Äô

example.com/index.html            100%[===========================================================&amp;gt;]   1,24K  --.-KB/s    in 0,003s

2017-06-30 19:48:46 (371 KB/s) - ‚Äòexample.com/index.html‚Äô saved [1270/1270]

FINISHED --2017-06-30 19:48:46--
Total wall clock time: 0,6s
Downloaded: 1 files, 1,2K in 0,003s (371 KB/s)
Converting links in example.com/index.html... nothing to do.
Converted links in 1 files in 0 seconds.
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;tree example.com/&lt;/kbd&gt;
example.com/
‚îî‚îÄ‚îÄ index.html

0 directories, 1 file

&lt;/samp&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;wget&lt;/code&gt; is a fantastic command line tool, it has everything you will
ever need without having to use any other GUI tool, just be sure to
browse its manual for the right parameters you want.&lt;/p&gt;

&lt;p&gt;The above parameters combination will make you have a browseable
website locally.&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;wget&lt;/code&gt; manual &lt;a href=&quot;https://www.gnu.org/software/wget/&quot;&gt;https://www.gnu.org/software/wget/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 30 Jun 2017 00:00:00 +0000</pubDate>
        <link>https://simpleit.rocks/how-to-download-a-website-with-wget-the-right-way/</link>
        <guid isPermaLink="true">https://simpleit.rocks/how-to-download-a-website-with-wget-the-right-way/</guid>
        
        
        <category>docs</category>
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>Writing Alternating Between English And Spanish In Emacs</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;If you write in Spanish and English then you will have to choose
between using a keyboard with Spanish or English layout. No matter
which one you select, when you write in the other language you will
have to choose a strategy to handle the letters that are present in
one language that are not in the other one.&lt;/p&gt;

&lt;p&gt;This is a quick overview to handle this situation with an English
keyboard layout (i.e.: not having &lt;code class=&quot;highlighter-rouge&quot;&gt;√±&lt;/code&gt;, and tildes &lt;code class=&quot;highlighter-rouge&quot;&gt;√≥&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;√°&lt;/code&gt;, etc)&lt;/p&gt;

&lt;h2 id=&quot;changing-the-keyboard-layout&quot;&gt;Changing the keyboard layout&lt;/h2&gt;

&lt;p&gt;In Emacs you can quickly change the layout with &lt;code class=&quot;highlighter-rouge&quot;&gt;set-input-method&lt;/code&gt;,
which will change the keyboard layout for the current buffer.&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot;&gt;
  &lt;p&gt;set-input-method:
 Select and activate input method INPUT-METHOD for the current buffer.
 This also sets the default input method to the one you specify.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt;mule-cmds.el &lt;cite&gt;Emacs manual&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are three alternatives for &lt;strong&gt;Spanish&lt;/strong&gt;:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;spanish-keyboard&lt;/li&gt;
  &lt;li&gt;spanish-postfix&lt;/li&gt;
  &lt;li&gt;spanish-prefix&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;check-layouts&quot;&gt;Check layouts&lt;/h2&gt;

&lt;p&gt;What layout each keyboard uses? Let‚Äôs find out with
&lt;kbd&gt;quail-show-keyboard-layout&lt;/kbd&gt;, in each input method it prints
the recognized layout:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;spanish-keyboard&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Keyboard layout (keyboard type: standard)

     +----------------------------------------------------------------+
      | 1 ! | 2 &quot; | 3 ¬∑ | 4 $ | 5 % | 6 &amp;amp; | 7 / | 8 ( | 9 ) | 0 = | ' ? | ¬° ¬ø | √≠ √ç |
     +----------------------------------------------------------------+
        | q Q | w W | e E | r R | t T | y Y | u U | i I | o O | p P | √© √â | √≥ √ì |
       +------------------------------------------------------------+
         | a A | s S | d D | f F | g G | h H | j J | k K | l L | √± √ë | √° √Å | √∫ √ö |
        +-----------------------------------------------------------+
           | z Z | x X | c C | v V | b B | n N | m M | , ; | . : | - _ |
          +-------------------------------------------------+
		    +-----------------------------+
		    |          space bar          |
		    +-----------------------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;spanish-postfix&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Keyboard layout (keyboard type: standard)

     +----------------------------------------------------------------+
      | 1 ! | 2 @ | 3 # | 4 $ | 5 % | 6 ^ | 7 &amp;amp; | 8 * | 9 ( | 0 ) | - _ | = + | ` ~ |
     +----------------------------------------------------------------+
        | q Q | w W | e E | r R | t T | y Y | u U | i I | o O | p P | [ { | ] } |
       +------------------------------------------------------------+
         | a A | s S | d D | f F | g G | h H | j J | k K | l L | ; : | ' &quot; | \ | |
        +-----------------------------------------------------------+
           | z Z | x X | c C | v V | b B | n N | m M | , &amp;lt; | . &amp;gt; | / ? |
          +-------------------------------------------------+
		    +-----------------------------+
		    |          space bar          |
		    +-----------------------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;spanish-prefix&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Keyboard layout (keyboard type: standard)

     +----------------------------------------------------------------+
      | 1 ! | 2 @ | 3 # | 4 $ | 5 % | 6 ^ | 7 &amp;amp; | 8 * | 9 ( | 0 ) | - _ | = + | ` ~ |
     +----------------------------------------------------------------+
        | q Q | w W | e E | r R | t T | y Y | u U | i I | o O | p P | [ { | ] } |
       +------------------------------------------------------------+
         | a A | s S | d D | f F | g G | h H | j J | k K | l L | ; : | ' &quot; | \ | |
        +-----------------------------------------------------------+
           | z Z | x X | c C | v V | b B | n N | m M | , &amp;lt; | . &amp;gt; | / ? |
          +-------------------------------------------------+
		    +-----------------------------+
		    |          space bar          |
		    +-----------------------------+

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;choosing-the-layout&quot;&gt;Choosing the layout&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;spanish-keyboard&lt;/strong&gt;: while having all the typical Spanish letters
their own key, I don‚Äôt find it pretty close to any other keyboard I
have ever tried.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;spanish-postfix&lt;/strong&gt;: expects to press tildes &lt;strong&gt;after&lt;/strong&gt; the desired
letter, for example &lt;code class=&quot;highlighter-rouge&quot;&gt;o+tilde=√≥&lt;/code&gt; which I find a bit unnatural.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;spanish-prefix&lt;/strong&gt;: The one that resembles more the classical Spanish keyboard behaviour
is the &lt;strong&gt;spanish-prefix&lt;/strong&gt; one. In this one you will write tildes
before the letter, e.g.:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;to write &lt;strong&gt;√≥&lt;/strong&gt;: press the tilde key and &lt;strong&gt;then&lt;/strong&gt; the &lt;kbd&gt;o&lt;/kbd&gt;.&lt;/li&gt;
      &lt;li&gt;to write &lt;strong&gt;√±&lt;/strong&gt;: press the &lt;kbd&gt;~&lt;/kbd&gt; symbol and &lt;strong&gt;then&lt;/strong&gt; &lt;kbd&gt;o&lt;/kbd&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;After executing &lt;kbd&gt;set-input-method&lt;/kbd&gt; and selecting
&lt;strong&gt;spanish-prefix&lt;/strong&gt;, writing in each language is as easy as switching
them with &lt;kbd&gt;C-\&lt;/kbd&gt; &lt;em&gt;(toggle-input-method)&lt;/em&gt; and have a pretty close experience as using a
Spanish keyboard in an English keyboard layout.&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot;&gt;
  &lt;p&gt;toggle-input-method:&lt;/p&gt;

  &lt;p&gt;Enable or disable multilingual text input method for the current
  buffer. Only one input method can be enabled at any time in a given buffer.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt;mule-cmds.el &lt;cite&gt;Emacs manual&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Sat, 17 Jun 2017 00:00:00 +0000</pubDate>
        <link>https://simpleit.rocks/writing-alternating-between-english-and-spanish-in-emacs/</link>
        <guid isPermaLink="true">https://simpleit.rocks/writing-alternating-between-english-and-spanish-in-emacs/</guid>
        
        
        <category>docs</category>
        
        <category>lisp</category>
        
        <category>emacs</category>
        
      </item>
    
      <item>
        <title>Writing In Emacs Checking Spelling Style And Grammar</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;Emacs comes with several options to make your writing better by
avoiding mistakes, controlling typos and grammar, like the
ones described in the Emacs
manual:
&lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Spelling.html&quot;&gt;Checking and Correcting Spelling&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After getting familiar with them you will probably want to
&lt;strong&gt;automatically&lt;/strong&gt; enable them in text modes (like markdown), and even
controlling your source code comments and strings.&lt;/p&gt;

&lt;p&gt;This guide shows how to make it with two of the best packages for
writing:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.emacswiki.org/emacs/FlySpell&quot;&gt;flyspell-mode&lt;/a&gt;&lt;/strong&gt;: Flyspell enables on-the-fly spell checking, highlighting incorrect words as soon as they are completed.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/mhayashi1120/Emacs-langtool&quot;&gt;langtool&lt;/a&gt;&lt;/strong&gt;: is a grammar check utility using &lt;a href=&quot;http://languagetool.org/&quot;&gt;LanguageTool&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;LanguageTool&lt;/em&gt; is &lt;cite&gt;an Open Source proof¬≠reading program for
English, Spanish, and more than 20 other languages. It finds many
errors that a simple spell checker cannot detect and several grammar
problems.&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;After having both packages installed and properly configured, we will
activate &lt;strong&gt;flyspell-mode&lt;/strong&gt; as soon as we load a text mode, and check
for grammatical errors each time we save the file.&lt;/p&gt;

&lt;h2 id=&quot;activate-flyspell-mode-when-loading-text-modes&quot;&gt;Activate flyspell-mode when loading text-modes&lt;/h2&gt;

&lt;p&gt;I find very helpful to activate &lt;code class=&quot;highlighter-rouge&quot;&gt;flyspell-mode&lt;/code&gt; as soon as I load any
&lt;em&gt;Markdown&lt;/em&gt; file, as &lt;code class=&quot;highlighter-rouge&quot;&gt;markdown-mode&lt;/code&gt; is a derivate of &lt;code class=&quot;highlighter-rouge&quot;&gt;text-mode&lt;/code&gt; you
can choose what works better for you. In this case I will activate it
for &lt;code class=&quot;highlighter-rouge&quot;&gt;text-mode&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To load &lt;code class=&quot;highlighter-rouge&quot;&gt;flyspell-mode&lt;/code&gt; when loading a file in any of the recognized
&lt;code class=&quot;highlighter-rouge&quot;&gt;text-mode&lt;/code&gt;‚Äôs, we load it with:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-lisp&quot;&gt;(dolist (hook '(text-mode-hook))
    (add-hook hook (lambda () (flyspell-mode 1))))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And we can also avoid loading them in any other specific &lt;code class=&quot;highlighter-rouge&quot;&gt;text-mode&lt;/code&gt;,
for example &lt;code class=&quot;highlighter-rouge&quot;&gt;change-log-mode&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;log-edit-mode&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-lisp&quot;&gt;(dolist (hook '(change-log-mode-hook log-edit-mode-hook))
    (add-hook hook (lambda () (flyspell-mode -1))))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To also use &lt;code class=&quot;highlighter-rouge&quot;&gt;flyspell-mode&lt;/code&gt; to check source code comments and strings there is a
special mode called &lt;code class=&quot;highlighter-rouge&quot;&gt;flyspell-prog-mode&lt;/code&gt;, for example we can enable
for &lt;code class=&quot;highlighter-rouge&quot;&gt;python-mode&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-lisp&quot;&gt;(add-hook 'python-mode-hook
    (lambda ()
    (flyspell-prog-mode)
    ))
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;check-grammar-after-saving-a-text-file-with-languagetools&quot;&gt;Check grammar after saving a text file with LanguageTools&lt;/h2&gt;

&lt;p&gt;To check a text buffer and light up errors with &lt;code class=&quot;highlighter-rouge&quot;&gt;langtool&lt;/code&gt; we use the
&lt;code class=&quot;highlighter-rouge&quot;&gt;langtool-check&lt;/code&gt; function each time we save the buffer using
&lt;code class=&quot;highlighter-rouge&quot;&gt;after-save-hook&lt;/code&gt;, in this case I will activate it only for &lt;code class=&quot;highlighter-rouge&quot;&gt;markdown-mode&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-lisp&quot;&gt;(add-hook 'markdown-mode-hook
          (lambda () 
             (add-hook 'after-save-hook 'langtool-check nil 'make-it-local)))
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;In Emacs is easy to forget to check for errors manually, enabling them
automatically is a great way to minimize errors that can be avoided
easily and improving our documents legibility.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;flyspell-mode&lt;/em&gt;: &lt;a href=&quot;https://www.emacswiki.org/emacs/FlySpell&quot;&gt;https://www.emacswiki.org/emacs/FlySpell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;langtool&lt;/em&gt;: &lt;a href=&quot;https://github.com/mhayashi1120/Emacs-langtool&quot;&gt;https://github.com/mhayashi1120/Emacs-langtool&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;LanguageTool&lt;/em&gt;: &lt;a href=&quot;http://languagetool.org/&quot;&gt;http://languagetool.org/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/users/6148/trey-jackson&quot;&gt;Trey Jackson&lt;/a&gt;
answer to &lt;a href=&quot;https://stackoverflow.com/a/6141681/1165509&quot;&gt;How to add a hook to only run in a particular mode?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 10 Jun 2017 00:00:00 +0000</pubDate>
        <link>https://simpleit.rocks/writing-in-emacs-checking-spelling-style-and-grammar/</link>
        <guid isPermaLink="true">https://simpleit.rocks/writing-in-emacs-checking-spelling-style-and-grammar/</guid>
        
        
        <category>docs</category>
        
        <category>lisp</category>
        
        <category>emacs</category>
        
      </item>
    
      <item>
        <title>Start Emacs in Ubuntu The Right Way</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;Emacs can
be
&lt;a href=&quot;http://www.geekherocomic.com/2009/02/02/emacs-vs-vim/&quot;&gt;slow to start up&lt;/a&gt;,
if you use it constantly this can be a problem.&lt;/p&gt;

&lt;p&gt;Fortunately, there is a &lt;code class=&quot;highlighter-rouge&quot;&gt;daemon&lt;/code&gt; version of Emacs that you can start
once per session, loading the initialization file, and then connect to
the running process with &lt;kbd&gt;emacsclient&lt;/kbd&gt; fast.&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot;&gt;
  &lt;p&gt;‚Äìdaemon
	 Start  Emacs  as  a daemon, enabling the Emacs server and disconnecting from the terminal.  You can then use
	 the emacsclient command to connect to the server (see emacsclient(1)).&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;Emacs man page&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;p&gt;From Ubuntu 15.04, &lt;a href=&quot;https://www.freedesktop.org/wiki/Software/systemd&quot;&gt;systemd&lt;/a&gt; has become the default init system.&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://www.freedesktop.org/wiki/Software/systemd/&quot;&gt;
  &lt;p&gt;systemd is a suite of basic building blocks for a Linux system. It
provides a system and service manager that runs as PID 1 and starts
the rest of the system.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;&lt;a href=&quot;https://www.freedesktop.org/wiki/Software/systemd/&quot;&gt;systemd System and Service Manager&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this tutorial we will create a new &lt;em&gt;systemd&lt;/em&gt; service to handle the
Emacs server so we will be able to &lt;code class=&quot;highlighter-rouge&quot;&gt;start&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;stop&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;restart&lt;/code&gt;,
&lt;code class=&quot;highlighter-rouge&quot;&gt;enable&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;disable&lt;/code&gt; the service as any other Linux service.&lt;/p&gt;

&lt;h2 id=&quot;systemd-unit&quot;&gt;systemd Unit&lt;/h2&gt;

&lt;p&gt;To turn Emacs into a &lt;em&gt;systemd&lt;/em&gt; service that can be started automatically
during system startup we will create a service to start the daemon.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;systemd&lt;/em&gt; can manage services under the user‚Äôs control with a
per-user &lt;em&gt;systemd&lt;/em&gt; instance, enabling users to handle their own units.&lt;/p&gt;

&lt;p&gt;User services like this one, should be placed in
&lt;code class=&quot;highlighter-rouge&quot;&gt;~/.config/systemd/user/&lt;/code&gt; so then we will be able to run them with
&lt;kbd&gt;systemctl --user enable *service*&lt;/kbd&gt;.&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://wiki.archlinux.org/index.php/Systemd/User#Basic_setup&quot;&gt;
  &lt;p&gt;‚Äìuser
   Talk to the service manager of the calling user, rather than the service manager of the system.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;&lt;a href=&quot;https://wiki.archlinux.org/index.php/Systemd/User#Basic_setup&quot;&gt;systemctl --help&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;p&gt;The resources that &lt;em&gt;systemd&lt;/em&gt; knows how to manage are called &lt;em&gt;units&lt;/em&gt;.&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://www.freedesktop.org/software/systemd/man/systemd.service.html&quot;&gt;
  &lt;p&gt;A unit configuration file whose name ends in &lt;code class=&quot;highlighter-rouge&quot;&gt;.service&lt;/code&gt; encodes
information about a process controlled and supervised by systemd.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;&lt;a href=&quot;https://www.freedesktop.org/software/systemd/man/systemd.service.html&quot;&gt;systemd.service ‚Äî Service unit configuration&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;p class=&quot;alert alert-danger&quot;&gt;&lt;em&gt;systemd&lt;/em&gt; ‚Äìuser instance is a per-user process, and not per-session.&lt;/p&gt;

&lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.config/systemd/user/emacs.service&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Unit]
Description=Emacs Daemon

[Service]
Type=forking
ExecStart=/usr/bin/emacs --daemon
ExecStop=/usr/bin/emacsclient --eval &quot;(progn (setq kill-emacs-hook 'nil) (kill-emacs))&quot;
Restart=always

[Install]
WantedBy=default.target
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;start-server&quot;&gt;Start server&lt;/h2&gt;

&lt;p&gt;Now we enable the &lt;em&gt;unit&lt;/em&gt; to be started at login with &lt;kbd&gt;systemctl
--user enable emacs.service&lt;/kbd&gt; and start the service for the
current session &lt;kbd&gt;systemctl --user start emacs.service&lt;/kbd&gt;:&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;systemctl --user enable emacs.service&lt;/kbd&gt;
Created symlink ~/.config/systemd/user/default.target.wants/emacs.service ‚Üí ~/.config/systemd/user/emacs.service.
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;tree .config/systemd/user/&lt;/kbd&gt;
.config/systemd/user/
‚îú‚îÄ‚îÄ default.target.wants
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ emacs.service -&amp;gt; ~/.config/systemd/user/emacs.service
‚îî‚îÄ‚îÄ emacs.service

1 directory, 2 files
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;systemctl --user list-unit-files|grep emacs&lt;/kbd&gt;
emacs.service                           enabled
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;systemctl --user status emacs.service&lt;/kbd&gt;
‚óè emacs.service - Emacs Daemon
   Loaded: loaded (~/.config/systemd/user/emacs.service; enabled; vendor preset: enabled)
   Active: inactive (dead)
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;systemctl --user start emacs.service&lt;/kbd&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;systemctl --user status emacs.service&lt;/kbd&gt;
   Loaded: loaded (~/.config/systemd/user/emacs.service; enabled; vendor preset: enabled)
   Active: active (running) since Sat 2017-06-10 15:13:33 -03; 1min 23s ago
  Process: 22639 ExecStop=/usr/bin/emacsclient --eval (progn (setq kill-emacs-hook 'nil) (kill-emacs)) (code=exited, status=0/SUCCESS)
  Process: 22782 ExecStart=/usr/bin/emacs --daemon (code=exited, status=0/SUCCESS)
 Main PID: 22783 (emacs)
   CGroup: /user.slice/user-1000.slice/user@1000.service/emacs.service
           ‚îî‚îÄ22783 /usr/bin/emacs --daemon

jun 10 15:13:30 scarone emacs[22782]: ad-handle-definition: ‚Äòmoccur-mode‚Äô got redefined
jun 10 15:13:30 scarone emacs[22782]: ad-handle-definition: ‚Äòmoccur-grep-mode‚Äô got redefined
jun 10 15:13:30 scarone emacs[22782]: Loading ~/.emacs.d/.mc-lists.el (source)...
jun 10 15:13:30 scarone emacs[22782]: Loading ~/.emacs.d/.mc-lists.el (source)...done
jun 10 15:13:31 scarone emacs[22782]: [yas] Prepared just-in-time loading of snippets successfully.
jun 10 15:13:32 scarone emacs[22782]: [yas] Prepared just-in-time loading of snippets successfully.
jun 10 15:13:32 scarone emacs[22782]: Turning on magit-auto-revert-mode...
jun 10 15:13:32 scarone emacs[22782]: Turning on magit-auto-revert-mode...done
jun 10 15:13:33 scarone emacs[22782]: Starting Emacs daemon.
jun 10 15:13:33 scarone systemd[1858]: Started Emacs Daemon.

&lt;/samp&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;final-tweaks&quot;&gt;Final tweaks&lt;/h2&gt;

&lt;h3 id=&quot;command-aliases&quot;&gt;Command aliases&lt;/h3&gt;

&lt;p&gt;I‚Äôve &lt;a href=&quot;https://www.emacswiki.org/emacs/EmacsAsDaemon&quot;&gt;found&lt;/a&gt; these
aliases helpful to have at hand:&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;emacsclient -t&lt;/dt&gt;
  &lt;dd&gt;open a new Emacs frame on the current terminal (similar to &lt;code class=&quot;highlighter-rouge&quot;&gt;emacs -nw&lt;/code&gt;)&lt;/dd&gt;
  &lt;dt&gt;emacsclient -c -a emacs&lt;/dt&gt;
  &lt;dd&gt;&lt;strong&gt;-c&lt;/strong&gt; create a new frame instead of trying to use the current Emacs frame&lt;/dd&gt;
  &lt;dd&gt;&lt;strong&gt;-a&lt;/strong&gt; ‚Äìalternate-editor=EDITOR, if  the  Emacs  server  is not running, run the specified editor instead.&lt;/dd&gt;
&lt;/dl&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;emax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;emacsclient -t&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;semac&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sudo emacsclient -t&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;emacsc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;emacsclient -c -a emacs&quot;&lt;/span&gt;           &lt;span class=&quot;c&quot;&gt;# new - opens the GUI with alternate non-daemon&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;default-editor&quot;&gt;Default editor&lt;/h3&gt;

&lt;p&gt;Finally, set the &lt;code class=&quot;highlighter-rouge&quot;&gt;EDITOR&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;VISUAL&lt;/code&gt; environment variables so
&lt;code class=&quot;highlighter-rouge&quot;&gt;emacs&lt;/code&gt; is your default editor:&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;EDITOR&lt;/dt&gt;
  &lt;dd&gt;The name of the lightweight text editor&lt;/dd&gt;
  &lt;dt&gt;VISUAL&lt;/dt&gt;
  &lt;dd&gt;command to run the full-fledged editor&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;.bashrc&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ALTERNATE_EDITOR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# $EDITOR should open in terminal&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;EDITOR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;emacsclient -t&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# $VISUAL opens in GUI with non-daemon as alternate&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;VISUAL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;emacsclient -c -a emacs&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;We created a script to run like a native Ubuntu service, then added
some aliases and defined environment variables. Now we have a better
experience in Ubuntu using Emacs with faster loading times and more
integrated to the OS.&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;systemd/User &lt;a href=&quot;https://wiki.archlinux.org/index.php/Systemd/User#Basic_setup&quot;&gt;https://wiki.archlinux.org/index.php/Systemd/User#Basic_setup&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;EmacsAsDaemon &lt;a href=&quot;https://www.emacswiki.org/emacs/EmacsAsDaemon&quot;&gt;https://www.emacswiki.org/emacs/EmacsAsDaemon&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.freedesktop.org/software/systemd/man/systemd.service.html&quot;&gt;https://www.freedesktop.org/software/systemd/man/systemd.service.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://taingram.org/2017/05/09/using-emacsclient-to-speed-up-editing/&quot;&gt;Using emacsclient to Speed up Editing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 10 Jun 2017 00:00:00 +0000</pubDate>
        <link>https://simpleit.rocks/start-emacs-in-ubuntu-the-right-way/</link>
        <guid isPermaLink="true">https://simpleit.rocks/start-emacs-in-ubuntu-the-right-way/</guid>
        
        
        <category>docs</category>
        
        <category>linux</category>
        
        <category>ubuntu</category>
        
      </item>
    
      <item>
        <title>How To Search Packages Using Yarn</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;How to have the &lt;em&gt;search&lt;/em&gt; functionailty like &lt;code class=&quot;highlighter-rouge&quot;&gt;npm search&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;bower
search&lt;/code&gt; in Yarn, or simply look for packages in a browser.&lt;/p&gt;

&lt;h2 id=&quot;options&quot;&gt;Options&lt;/h2&gt;

&lt;h3 id=&quot;cli-search&quot;&gt;CLI search&lt;/h3&gt;

&lt;p&gt;Search yarn packages in command line using &lt;a href=&quot;https://github.com/npms-io/npms-cli&quot;&gt;npms-cli&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;Install &lt;code class=&quot;highlighter-rouge&quot;&gt;npms-cli&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yarn global add npms-cli
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;yarn global add npms-cli&lt;/kbd&gt;
yarn global v0.24.5
[1/4] Resolving packages...
[2/4] Fetching packages...
[3/4] Linking dependencies...
[4/4] Building fresh packages...
success Installed &quot;npms-cli@1.6.0&quot; with binaries:
      - npms
Done in 14.05s.
&lt;/samp&gt;
&lt;/pre&gt;

&lt;p&gt;Then you will have available &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/bin/npms&lt;/code&gt; and can search like:
&lt;code class=&quot;highlighter-rouge&quot;&gt;npms search &amp;lt;desired package&amp;gt;&lt;/code&gt;, for example for the package &lt;code class=&quot;highlighter-rouge&quot;&gt;font-awesome&lt;/code&gt;:&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;npms search font-awesome&lt;/kbd&gt;
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ Package                                                                     ‚îÇ Quality ‚îÇ Popularity ‚îÇ Maintenance ‚îÇ Score ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ font-awesome ‚Ä¢ https://github.com/FortAwesome/Font-Awesome                  ‚îÇ         ‚îÇ            ‚îÇ             ‚îÇ       ‚îÇ
‚îÇ The iconic font and CSS framework                                           ‚îÇ   83    ‚îÇ     71     ‚îÇ     38      ‚îÇ  63   ‚îÇ
‚îÇ updated 7 months ago by juliankrispel                                       ‚îÇ         ‚îÇ            ‚îÇ             ‚îÇ       ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ ember-font-awesome ‚Ä¢ https://github.com/martndemus/ember-font-awesome       ‚îÇ         ‚îÇ            ‚îÇ             ‚îÇ       ‚îÇ
‚îÇ An ember-cli addon for using Font Awesome icons in Ember applications.      ‚îÇ   89    ‚îÇ     22     ‚îÇ     100     ‚îÇ  70   ‚îÇ
‚îÇ updated 2 months ago by martndemus                                          ‚îÇ         ‚îÇ            ‚îÇ             ‚îÇ       ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ font-awesome-filetypes ‚Ä¢ https://github.com/spatie/font-awesome-filetypes   ‚îÇ         ‚îÇ            ‚îÇ             ‚îÇ       ‚îÇ
‚îÇ Helper to retrieve the Font Awesome icon for a specific file extension      ‚îÇ   95    ‚îÇ     9      ‚îÇ     100     ‚îÇ  67   ‚îÇ
‚îÇ updated 2 years ago by sebastiandedeyne                                     ‚îÇ         ‚îÇ            ‚îÇ             ‚îÇ       ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
....
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
&lt;/samp&gt;
&lt;/pre&gt;

&lt;h3 id=&quot;search-with-browser&quot;&gt;Search with browser&lt;/h3&gt;

&lt;p&gt;You can also search them using &lt;code class=&quot;highlighter-rouge&quot;&gt;https://npms.io/search?q=&amp;lt;desired
package&amp;gt;&lt;/code&gt;:&lt;/p&gt;

&lt;form action=&quot;https://npms.io/search&quot; method=&quot;get&quot; target=&quot;_blank&quot;&gt;
  &lt;div class=&quot;form-group&quot;&gt;
    &lt;label for=&quot;packageSearch&quot;&gt;Package Search&lt;/label&gt;
    &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;q&quot; aria-describedby=&quot;packageSearch&quot; placeholder=&quot;Enter package name&quot; name=&quot;q&quot; /&gt;
  &lt;/div&gt;
  &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot;&gt;Search&lt;/button&gt;
&lt;/form&gt;
</description>
        <pubDate>Sat, 03 Jun 2017 00:00:00 +0000</pubDate>
        <link>https://simpleit.rocks/how-to-search-packages-using-yarn/</link>
        <guid isPermaLink="true">https://simpleit.rocks/how-to-search-packages-using-yarn/</guid>
        
        
        <category>docs</category>
        
        <category>javascript</category>
        
        <category>yarn</category>
        
      </item>
    
      <item>
        <title>How To Uninstall Old Versions Of Ruby Gems</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;Chances are that if you have been using Ruby for a while, your system
will be full of &lt;a href=&quot;https://rubygems.org/&quot;&gt;gems&lt;/a&gt; and more specifically,
&lt;strong&gt;outdated gems&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Every time you perform an update with &lt;kbd&gt;$ gem update&lt;/kbd&gt; the
default behaviour is to install a new gem version &lt;strong&gt;maintaining&lt;/strong&gt; the
older one.&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot;&gt;
  &lt;p&gt;The update command does not remove the previous version.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;Gem update command Help&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;removing-old-unused-gems&quot;&gt;Removing old unused gems&lt;/h2&gt;

&lt;p&gt;To remove older gems we use the &lt;code class=&quot;highlighter-rouge&quot;&gt;clean&lt;/code&gt; command:&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot;&gt;
  &lt;p&gt;The cleanup command removes old versions of gems from GEM_HOME that
are not required to meet a dependency.  If a gem is installed
elsewhere in GEM_PATH the cleanup command won‚Äôt delete it.&lt;/p&gt;

  &lt;p&gt;If no gems are named all gems in GEM_HOME are cleaned.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;Gem cleanup command Help&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;p&gt;We can choose to specify a gem to remove its older versions or remove
every old gem:&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;gem cleanup&lt;/kbd&gt;
Cleaning up installed gems...
Attempting to uninstall test-unit-3.1.7
Unable to uninstall test-unit-3.1.7:
        Gem::InstallError: test-unit is not installed in GEM_HOME, try:
        gem uninstall -i /usr/share/rubygems-integration/all test-unit
Attempting to uninstall public_suffix-2.0.4
Successfully uninstalled public_suffix-2.0.4
Attempting to uninstall power_assert-0.2.7
Unable to uninstall power_assert-0.2.7:
        Gem::InstallError: power_assert is not installed in GEM_HOME, try:
        gem uninstall -i /usr/share/rubygems-integration/all power_assert
Attempting to uninstall nokogiri-1.6.8.1
Successfully uninstalled nokogiri-1.6.8.1
Attempting to uninstall minitest-5.9.0
Unable to uninstall minitest-5.9.0:
        Gem::InstallError: minitest is not installed in GEM_HOME, try:
        gem uninstall -i /usr/share/rubygems-integration/all minitest
Attempting to uninstall rb-inotify-0.9.7
Successfully uninstalled rb-inotify-0.9.7
Attempting to uninstall kramdown-1.12.0
Successfully uninstalled kramdown-1.12.0
Attempting to uninstall jekyll-seo-tag-2.0.0
Successfully uninstalled jekyll-seo-tag-2.0.0
Attempting to uninstall jekyll-3.3.0
Successfully uninstalled jekyll-3.3.0
Attempting to uninstall jekyll-sass-converter-1.4.0
Successfully uninstalled jekyll-sass-converter-1.4.0
Attempting to uninstall sass-3.4.22
Successfully uninstalled sass-3.4.22
Attempting to uninstall kramdown-1.13.1
Successfully uninstalled kramdown-1.13.1
Attempting to uninstall html-proofer-3.3.1
Successfully uninstalled html-proofer-3.3.1
Attempting to uninstall parallel-1.9.0
Successfully uninstalled parallel-1.9.0
Attempting to uninstall nokogiri-1.7.0
Successfully uninstalled nokogiri-1.7.0
&lt;/samp&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/q/27933683/1165509&quot;&gt;Removing old versions of gems&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 25 May 2017 00:00:00 +0000</pubDate>
        <link>https://simpleit.rocks/how-to-uninstall-old-versions-of-ruby-gems/</link>
        <guid isPermaLink="true">https://simpleit.rocks/how-to-uninstall-old-versions-of-ruby-gems/</guid>
        
        
        <category>docs</category>
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Multilingual Jekyll Without Plugins</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;This article shows a solution to have a multi language jekyll website
based mainly in having a file that groups all the available
translations for each page.&lt;/p&gt;

&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;

&lt;p&gt;A common configuration for a multilanguage site is to use
subdirectories with Generic top-level domains (gTLDs).&lt;/p&gt;

&lt;p&gt;This way the URLs of your site would look like: &lt;code class=&quot;highlighter-rouge&quot;&gt;example.com/&amp;lt;lang&amp;gt;/&lt;/code&gt;,
e.g.:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;English &lt;code class=&quot;highlighter-rouge&quot;&gt;example.com/en/&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Spanish &lt;code class=&quot;highlighter-rouge&quot;&gt;example.com/es/&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;German &lt;code class=&quot;highlighter-rouge&quot;&gt;example.com/de/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This configuration has the benefit that it is easy to configure, can
use Search Console geotargeting and requires low maintenance as it is
in the same host.&lt;/p&gt;

&lt;p&gt;To indicate to Search Engines that the German URL is the
German-language equivalent of the Spanish page, one of three ways can
be used:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;HTML link element in header&lt;/li&gt;
  &lt;li&gt;HTTP header&lt;/li&gt;
  &lt;li&gt;Sitemap&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In this guide I will be using the first one, adding a &lt;code class=&quot;highlighter-rouge&quot;&gt;link&lt;/code&gt; element
in the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt; section of each HTML page. Each language page URL
should identify different language versions, &lt;strong&gt;including itself&lt;/strong&gt;&lt;sup id=&quot;fnref:confirmationlink&quot;&gt;&lt;a href=&quot;#fn:confirmationlink&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;So the markup to tell Search Engine‚Äôs algorithms to consider all of
these pages as alternate versions of each other is:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;link rel=&quot;alternate&quot; hreflang=&quot;es&quot; href=&quot;http://example.com/es&quot; /&amp;gt;
&amp;lt;link rel=&quot;alternate&quot; hreflang=&quot;de&quot; href=&quot;http://example.com/de&quot; /&amp;gt;
&amp;lt;link rel=&quot;alternate&quot; hreflang=&quot;en&quot; href=&quot;http://example.com/en&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To achieve this structure in Jekyll we will use:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;language subdirectories&lt;/li&gt;
  &lt;li&gt;two data files
    &lt;ul&gt;
      &lt;li&gt;one to specify the navigation structure of the website&lt;/li&gt;
      &lt;li&gt;another one to map posts and pages equivalents based in their full path&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;steps&quot;&gt;Steps&lt;/h2&gt;

&lt;p&gt;I will create a new Jekyll site to show the process:&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;jekyll new --blank mysite&lt;/kbd&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;cd mysite&lt;/kbd&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;bundle init&lt;/kbd&gt;
Writing new Gemfile to /mysite/Gemfile
&lt;span class=&quot;shell-prompt&quot;&gt;mysite$&lt;/span&gt; &lt;kbd&gt;tree&lt;/kbd&gt;
.
‚îú‚îÄ‚îÄ _drafts
‚îú‚îÄ‚îÄ Gemfile
‚îú‚îÄ‚îÄ index.html
‚îú‚îÄ‚îÄ _layouts
‚îî‚îÄ‚îÄ _posts

3 directories, 2 file
&lt;/samp&gt;
&lt;/pre&gt;

&lt;p&gt;Edit &lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt; to have the Jekyll gem:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;source &quot;https://rubygems.org&quot;

gem &quot;jekyll&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;bundle install&lt;/kbd&gt;
...
Bundle complete! 1 Gemfile dependency, 19 gems now installed.
&lt;/samp&gt;
&lt;/pre&gt;

&lt;h3 id=&quot;language-directories&quot;&gt;Language directories&lt;/h3&gt;

&lt;p&gt;For each language we create a new directory that will contain its
posts, pages and, eventually, some categories as subdirectories.&lt;/p&gt;

&lt;p&gt;In this example, one for English &lt;code class=&quot;highlighter-rouge&quot;&gt;/en&lt;/code&gt;, one for Spanish &lt;code class=&quot;highlighter-rouge&quot;&gt;/es&lt;/code&gt; and one
for German &lt;code class=&quot;highlighter-rouge&quot;&gt;/de&lt;/code&gt;.&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;mysite$&lt;/span&gt; &lt;kbd&gt;mkdir -vp {en,es/_posts,de/_posts}&lt;/kbd&gt;
mkdir: created directory 'en'
mkdir: created directory 'es'
mkdir: created directory 'es/_posts'
mkdir: created directory 'de'
mkdir: created directory 'de/_posts'
&lt;span class=&quot;shell-prompt&quot;&gt;mysite$&lt;/span&gt; &lt;kbd&gt;mv _posts/ en/&lt;/kbd&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;mysite$&lt;/span&gt; &lt;kbd&gt;tree&lt;/kbd&gt;
‚îú‚îÄ‚îÄ de
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ _posts
‚îú‚îÄ‚îÄ _drafts
‚îú‚îÄ‚îÄ en
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ _posts
‚îú‚îÄ‚îÄ es
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ _posts
‚îú‚îÄ‚îÄ index.html
‚îî‚îÄ‚îÄ _layouts

8 directories, 1 file
&lt;/samp&gt;
&lt;/pre&gt;

&lt;p&gt;This way our URLs will be generated containing the language at the
first level.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://example.com/es/...
http://example.com/de/...
http://example.com/en/...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Following this example we create example posts in each language.&lt;/p&gt;

&lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;en/_posts/2017-05-08-hello-world.md&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
title: Hello World
---

A &quot;Hello, World!&quot; program is a computer program that outputs or displays &quot;Hello, World!&quot; to a user. Being a very simple program in most programming languages...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;es/_posts/2017-05-08-hola-mundo.md&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
title: Hola Mundo
---

En inform√°tica, un programa Hola mundo es el que imprime el texto
¬´¬°Hola, mundo!¬ª ...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;de/_posts/2017-05-08-hallo-welt.md&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
title: Hallo Welt
---

Ein Hallo-Welt-Programm ist ein kleines Computerprogramm, das auf
m√∂glichst einfache Weise zeigen soll...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;tree&lt;/kbd&gt;
.
‚îú‚îÄ‚îÄ de
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ _posts
‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ 2017-05-08-hallo-welt.md
‚îú‚îÄ‚îÄ _drafts
‚îú‚îÄ‚îÄ en
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ _posts
‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ 2017-05-08-hello-world.md
‚îú‚îÄ‚îÄ es
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ _posts
‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ 2017-05-08-hola-mundo.md
‚îú‚îÄ‚îÄ Gemfile
‚îú‚îÄ‚îÄ Gemfile.lock
‚îú‚îÄ‚îÄ index.html
‚îî‚îÄ‚îÄ _layouts

8 directories, 6 files
&lt;/samp&gt;
&lt;/pre&gt;

&lt;h3 id=&quot;set-post-language&quot;&gt;Set post language&lt;/h3&gt;

&lt;p&gt;Now we automatically set the language of each post depending on the
above language folder
using
&lt;a href=&quot;https://jekyllrb.com/docs/configuration/#front-matter-defaults&quot;&gt;Front Matter Defaults&lt;/a&gt;,
in &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;defaults&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;#languages&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;en&quot;&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;default&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;es&quot;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;es&quot;&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;de&quot;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;de&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Every post and page located inside each folder, will automatically get
the right language.&lt;/p&gt;

&lt;p&gt;So each webpage should have the language specified at the opening html
tag: &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In the default layout in &lt;code class=&quot;highlighter-rouge&quot;&gt;_layouts/default.html&lt;/code&gt; using English as the
fallback language:&lt;/p&gt;

&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;site.lang&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'en'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&quot;&amp;gt;
    &amp;lt;head&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
	&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you don‚Äôt put the post/page in one of the language subdirectories,
then you will need to specify its language in the front matter, i.e.:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
title: &quot;Prueba&quot;
lang: es
---
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;map-set&quot;&gt;Map set&lt;/h3&gt;

&lt;p&gt;Each time we add a post or page, the full path of each page should be
added to a special &lt;code class=&quot;highlighter-rouge&quot;&gt;_data/map.yml&lt;/code&gt; where we specify which files are
equivalent in the other languages.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-
  en: en/_posts/2017-05-08-hello-world.md 
  es: es/_posts/2017-05-08-hola-mundo.md
  de: de/_posts/2017-05-08-hallo-welt.md
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;navigation-menu&quot;&gt;Navigation menu&lt;/h3&gt;

&lt;p&gt;We create an include that iterates through pages and posts and select
only the group (located in &lt;code class=&quot;highlighter-rouge&quot;&gt;_data/map.yml&lt;/code&gt;) which one of its items
equals the current page path. In &lt;code class=&quot;highlighter-rouge&quot;&gt;_includes/lang_nav.html&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;nav&amp;gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;block&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;site.data.map&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;item&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;block[page.lang]&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;trans&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;block&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;trans_path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;trans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;path&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;trans_path&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt; 

    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;item&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;posts&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &amp;lt;a hreflang=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&quot; class=&quot;active&quot;&amp;gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;locales&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&amp;lt;/a&amp;gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &amp;lt;a hreflang=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&quot; href=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;absolute_url}}&quot;&amp;gt;{{site.data.locales[item.lang].title}}&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;{%&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;endif&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endfor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;pages&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;pages&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;path&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;trans_path&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;item&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;pages&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &amp;lt;a hreflang=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&quot; class=&quot;active&quot;&amp;gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;locales&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&amp;lt;/a&amp;gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &amp;lt;a hreflang=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&quot; href=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;absolute_url}}&quot;&amp;gt;{{site.data.locales[item.lang].title}}&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;{%&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;endif&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endfor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endfor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;endif&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endfor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endfor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;

&amp;lt;/nav&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And use it in a layout:&lt;/p&gt;

&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;body&amp;gt;
...
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang_nav&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;alternate-links&quot;&gt;Alternate links&lt;/h3&gt;

&lt;p&gt;Finally to create the urls with the &lt;em&gt;alternate&lt;/em&gt; link tags, in
&lt;code class=&quot;highlighter-rouge&quot;&gt;_includes/alternate.html&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;block&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;site.data.map&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;item&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;block[page.lang]&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;trans&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;block&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;trans_path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;trans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;path&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;trans_path&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;item&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;posts&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&amp;lt;link rel=&quot;alternate&quot; hreflang=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&quot; href=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;absolute_url}}&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;/&amp;gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;{%&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;endfor&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;pages&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;pages&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;path&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;trans_path&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;item&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;pages&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&amp;lt;link rel=&quot;alternate&quot; hreflang=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&quot; href=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;absolute_url}}&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;/&amp;gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;{%&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;endfor&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endfor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;endif&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endfor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endfor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And use it in the head section of the layout:&lt;/p&gt;

&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;head&amp;gt;
...
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;alternate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&amp;lt;/head&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;repo&quot;&gt;Repo&lt;/h2&gt;

&lt;p&gt;Putting it all together: &lt;a href=&quot;https://github.com/marcanuy/jekyll-multilanguage&quot;&gt;https://github.com/marcanuy/jekyll-multilanguage&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://support.google.com/webmasters/answer/182192?hl=en#1&quot;&gt;Multi-regional and multilingual sites&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://support.google.com/webmasters/answer/189077?hl=en&amp;amp;ref_topic=2370587&quot;&gt;Use hreflang for language and regional URLs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://support.google.com/webmasters/answer/2620865?hl=en&amp;amp;ref_topic=2370587&quot;&gt;Use a sitemap to indicate alternate language pages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:confirmationlink&quot;&gt;

      &lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://support.google.com/webmasters/answer/189077?hl=en&amp;amp;ref_topic=2370587&quot;&gt;
        &lt;p&gt;If page A links to page B, page B must link back to page A. If
this is not the case for all pages that use hreflang
annotations, those annotations may be ignored or not interpreted
correctly.&lt;/p&gt;

        &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;Missing confirmation links in &lt;a href=&quot;https://support.google.com/webmasters/answer/189077?hl=en&amp;amp;ref_topic=2370587&quot;&gt;Common Mistakes&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
      &lt;/blockquote&gt;
      &lt;p&gt;&lt;a href=&quot;#fnref:confirmationlink&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 08 May 2017 00:00:00 +0000</pubDate>
        <link>https://simpleit.rocks/multilingual-jekyll-without-plugins/</link>
        <guid isPermaLink="true">https://simpleit.rocks/multilingual-jekyll-without-plugins/</guid>
        
        
        <category>docs</category>
        
        <category>ruby</category>
        
        <category>jekyll</category>
        
        <category>tutorials</category>
        
      </item>
    
      <item>
        <title>Host a Jekyll Website With Pretty Urls In Amazon S3 and Cloudfront</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;One of the problems in having pretty URLs when hosting a Jekyll site
in Amazon S3, is that even we set &lt;code class=&quot;highlighter-rouge&quot;&gt;permalinks&lt;/code&gt; URLs without &lt;code class=&quot;highlighter-rouge&quot;&gt;.html&lt;/code&gt;
extensions, the files generated by Jekyll include this extension.&lt;/p&gt;

&lt;p&gt;It relies on the server configuration to be able to detect its
content-type&lt;sup id=&quot;fnref:contenttype&quot;&gt;&lt;a href=&quot;#fn:contenttype&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; so it can handle URLs that does not include the &lt;code class=&quot;highlighter-rouge&quot;&gt;.html&lt;/code&gt;
extension, and serve the corresponding file.&lt;/p&gt;

&lt;p&gt;Amazon S3 isn‚Äôt able to make this translation, so it leaves us with
two options to have URLs without ending in &lt;code class=&quot;highlighter-rouge&quot;&gt;.html&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Create each post in Jekyll as a &lt;code class=&quot;highlighter-rouge&quot;&gt;(directory)/index.html&lt;/code&gt; file, so it
will serve each &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt;. E.g.:&lt;/p&gt;

    &lt;p&gt;We try to access &lt;code class=&quot;highlighter-rouge&quot;&gt;https://example.com/my-cool-page&lt;/code&gt;, then Amazon S3
  server will be able to respond to this request if it finds one of
  these files:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  /my-cool-page/index.html
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Or&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Generate HTML files without the extension:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  /my-cool-page
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, the &lt;strong&gt;Content-type&lt;/strong&gt; header of extension-less files should be
set to &lt;code class=&quot;highlighter-rouge&quot;&gt;text/html&lt;/code&gt; after renaming them.&lt;/p&gt;

&lt;h2 id=&quot;remove-extension-from-files-before-deploying&quot;&gt;Remove extension from files before deploying&lt;/h2&gt;

&lt;p&gt;If configuring Jekyll to generate posts/pages in subdirectories is not
an option, then we can remove the &lt;code class=&quot;highlighter-rouge&quot;&gt;.html&lt;/code&gt; extension to all the files,
&lt;strong&gt;except&lt;/strong&gt; those named &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt;, just before deploying them
to the server.&lt;/p&gt;

&lt;p&gt;An easy way to do it is to have a shell script that removes them after
building the site.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find _site/ -type f ! -iname &lt;span class=&quot;s1&quot;&gt;'index.html'&lt;/span&gt; -iname &lt;span class=&quot;s1&quot;&gt;'*.html'&lt;/span&gt; -print0 | &lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; -d &lt;span class=&quot;nv&quot;&gt;$'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' f; do mv &quot;$f&quot; &quot;${f%.html}&quot;; done
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Command explanation:&lt;/p&gt;

&lt;dl class=&quot;row&quot;&gt; 
&lt;dt class=&quot;col-sm-3&quot;&gt;-type f&lt;/dt&gt; 
&lt;dd class=&quot;col-sm-9&quot;&gt;
File is of type &quot;regular file&quot;
&lt;/dd&gt; 
&lt;dt class=&quot;col-sm-3&quot;&gt;! -iname 'index.html'&lt;/dt&gt; 
&lt;dd class=&quot;col-sm-9&quot;&gt;
Avoid matching index.html files.
&lt;/dd&gt; 
&lt;dt class=&quot;col-sm-3&quot;&gt;-iname pattern&lt;/dt&gt; 
&lt;dd class=&quot;col-sm-9&quot;&gt;
&lt;blockquote&gt;Base of file name (the path with the leading directories
removed) matches shell pattern pattern.&lt;/blockquote&gt; Case insensitive
&lt;/dd&gt; 
&lt;dt class=&quot;col-sm-3&quot;&gt;-print0&lt;/dt&gt; 
&lt;dd class=&quot;col-sm-9&quot;&gt;
&lt;blockquote&gt;True;  print the full file name on the standard output, followed by a
null character (instead of the newline character that -print uses).
This allows file names that contain newlines or other types of white
space to be correctly interpreted by programs that process the find
output. This option corresponds to the -0 option of xargs.&lt;/blockquote&gt;
&lt;/dd&gt; 
&lt;dt class=&quot;col-sm-3&quot;&gt;read -d delimiter&lt;/dt&gt; 
&lt;dd class=&quot;col-sm-9&quot;&gt;
&lt;blockquote&gt;The first character of DELIM is used to terminate the input line, rather than newline.&lt;/blockquote&gt;
&lt;/dd&gt; 
&lt;/dl&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;jekyll build&lt;/kbd&gt;
Configuration file: /tmp/j/_config.yml
            Source: /tmp/j
       Destination: /tmp/j/_site
 Incremental build: disabled. Enable with --incremental
      Generating... 
                    done in 1.433 seconds.
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;tree _site/&lt;/kbd&gt;
_site/
|-- about
|   `-- index.html
|-- assets
|   `-- main.css
|-- feed.xml
|-- index.html
`-- jekyll
    `-- update
        `-- 2017
            `-- 04
                `-- 24
                    `-- welcome-to-jekyll.html

7 directories, 5 files
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;find _site/ -type f ! -iname 'index.html' -iname '*.html' -print0 | while read -d $'\0' f; do mv &quot;$f&quot; &quot;${f%.html}&quot;; done&lt;/kbd&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;tree _site/&lt;/kbd&gt;
_site/
‚îú‚îÄ‚îÄ about
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ index.html
‚îú‚îÄ‚îÄ assets
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ main.css
‚îú‚îÄ‚îÄ feed.xml
‚îú‚îÄ‚îÄ index.html
‚îî‚îÄ‚îÄ jekyll
    ‚îî‚îÄ‚îÄ update
        ‚îî‚îÄ‚îÄ 2017
            ‚îî‚îÄ‚îÄ 04
                ‚îî‚îÄ‚îÄ 26
                    ‚îî‚îÄ‚îÄ welcome-to-jekyll

7 directories, 5 files
&lt;/samp&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;upload-files&quot;&gt;Upload files&lt;/h2&gt;

&lt;p&gt;When uploading the files to the server we must set the correct MIME
type to &lt;code class=&quot;highlighter-rouge&quot;&gt;Content-Type: text/html&lt;/code&gt; to the files that does not have
&lt;code class=&quot;highlighter-rouge&quot;&gt;.html&lt;/code&gt; extension, if we don‚Äôt set them, then the server will
interpret them as &lt;code class=&quot;highlighter-rouge&quot;&gt;Content-Type: binary/octet-stream&lt;/code&gt;. Other files
will get the correct &lt;em&gt;Content-Type&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The
&lt;a href=&quot;http://docs.aws.amazon.com/cli/latest/reference/s3/&quot;&gt;Amazon S3 Command Line Interface&lt;/a&gt; has
a special parameter to set the correct &lt;em&gt;Content-Type&lt;/em&gt; for each file
when
&lt;a href=&quot;http://docs.aws.amazon.com/cli/latest/reference/s3/cp.html&quot;&gt;copying&lt;/a&gt;
them: &lt;kbd&gt;aws s3 cp local_directory bucket-name --content-type
text/html&lt;/kbd&gt;&lt;/p&gt;

&lt;p&gt;In this approach, we are going to copy the files without extension,
setting the right &lt;em&gt;Content-Type&lt;/em&gt;, and then just copy the rest of the
files, leaving that task to the server.&lt;/p&gt;

&lt;h3 id=&quot;copy-files-without-extension&quot;&gt;Copy files without extension&lt;/h3&gt;

&lt;p&gt;Copy local files to the S3 bucket.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws s3 cp _site/ s3://cachedpage.co/ --content-type text/html --recursive --exclude &lt;span class=&quot;s2&quot;&gt;&quot;*.*&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;or synchronize the directory with the S3 bucket &lt;strong&gt;checking file
difference by size&lt;/strong&gt; not timestamps.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws s3 sync _site/ &lt;span class=&quot;nv&quot;&gt;$s3_bucket&lt;/span&gt; --size-only --exclude &lt;span class=&quot;s2&quot;&gt;&quot;*&quot;&lt;/span&gt; --include &lt;span class=&quot;s2&quot;&gt;&quot;*.*&quot;&lt;/span&gt; --delete
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p class=&quot;alert alert-info&quot;&gt;As every time the website is built, Jekyll regenerates all the files,
so &lt;em&gt;timestamps&lt;/em&gt; would always be different, checking file sizes would
only copy files if they are different.&lt;/p&gt;

&lt;h3 id=&quot;copy-the-rest-of-the-files&quot;&gt;Copy the rest of the files&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws s3 cp _site/ s3://cachedpage.co/ --recursive --exclude &lt;span class=&quot;s2&quot;&gt;&quot;*&quot;&lt;/span&gt; --include &lt;span class=&quot;s2&quot;&gt;&quot;*.*&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;or with &lt;kbd&gt;aws sync&lt;/kbd&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws s3 sync _site/ &lt;span class=&quot;nv&quot;&gt;$s3_bucket&lt;/span&gt; --size-only --content-type text/html --exclude &lt;span class=&quot;s2&quot;&gt;&quot;*.*&quot;&lt;/span&gt; --delete
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;http://docs.aws.amazon.com/cli/latest/reference/s3/#use-of-exclude-and-include-filters&quot;&gt;
  &lt;p&gt;Note that, by default, all files are included. This means that
providing only an ‚Äìinclude filter will not change what files are
transferred. ‚Äìinclude will only re-include files that have been
excluded from an ‚Äìexclude filter. If you only want to upload files
with a particular extension, you need to first exclude all files,
then re-include the files with the particular extension.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;&lt;a href=&quot;http://docs.aws.amazon.com/cli/latest/reference/s3/#use-of-exclude-and-include-filters&quot;&gt;Use of Exclude and Include Filters&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;invalidate-uploaded-files-in-cloudfront&quot;&gt;Invalidate uploaded files in Cloudfront&lt;/h2&gt;

&lt;p&gt;If we are using a Content Delivery Network, chances are that your
files has been cached and you need to refresh them. To remove an
object from CloudFront edge caches before it expires we need to
&lt;em&gt;invalidate&lt;/em&gt; them.&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Invalidation.html&quot;&gt;
  &lt;p&gt;The next time a viewer requests the object, CloudFront returns to
the origin to fetch the latest version of the object.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;&lt;a href=&quot;http://docs.aws.amazon.com/cli/latest/reference/s3/#use-of-exclude-and-include-filters&quot;&gt;Invalidating Objects (Web Distributions Only)&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;p&gt;For this we copy the modified file names to a temporal file, and then
create a new &lt;strong&gt;invalidation&lt;/strong&gt; with these names as they are access in
our website.&lt;/p&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;http://docs.aws.amazon.com/cli/latest/reference/cloudfront/create-invalidation.html&quot;&gt;
  &lt;p&gt;AWS CLI support for this service is only available in a preview
stage. You can enable this service by running: &lt;code class=&quot;highlighter-rouge&quot;&gt;aws configure set
preview.cloudfront true&lt;/code&gt;&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;&lt;a href=&quot;http://docs.aws.amazon.com/cli/latest/reference/s3/#use-of-exclude-and-include-filters&quot;&gt;create-invalidation&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;tempfile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;mktemp&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;distribution_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ASDFHDFSAF45234
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Copying files to server...&quot;&lt;/span&gt;
aws s3 sync _site/ &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;s3_bucket&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; --size-only --exclude &lt;span class=&quot;s2&quot;&gt;&quot;*&quot;&lt;/span&gt; --include &lt;span class=&quot;s2&quot;&gt;&quot;*.*&quot;&lt;/span&gt; --delete | tee -a &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;tempfile&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Copying files with content type...&quot;&lt;/span&gt;
aws s3 sync _site/ &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;s3_bucket&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; --size-only --content-type text/html --exclude &lt;span class=&quot;s2&quot;&gt;&quot;*.*&quot;&lt;/span&gt; --delete | tee -a &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;tempfile&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#invalidate only modified files&lt;/span&gt;
grep &lt;span class=&quot;s2&quot;&gt;&quot;upload&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;deleted&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;tempfile&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; | sed -e &lt;span class=&quot;s2&quot;&gt;&quot;s|.*upload.*to &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;s3_bucket&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;|/|&quot;&lt;/span&gt; | sed -e &lt;span class=&quot;s2&quot;&gt;&quot;s|.*delete: &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;s3_bucket&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;|/|&quot;&lt;/span&gt; | sed -e &lt;span class=&quot;s1&quot;&gt;'s/index.html//'&lt;/span&gt; | sed -e &lt;span class=&quot;s1&quot;&gt;'s/\(.*\).html/\1/'&lt;/span&gt; | tr &lt;span class=&quot;s1&quot;&gt;'\n'&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt; | xargs aws cloudfront create-invalidation --distribution-id &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;distribution_id&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; --paths
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;script-explanation&quot;&gt;Script explanation:&lt;/h3&gt;

&lt;p&gt;First we create the temporal file that will hold modified files with
&lt;code class=&quot;highlighter-rouge&quot;&gt;tempfile=$(mktemp)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then we synchronize the local directory with the remote one in S3,
redirecting the output to standard output and to the temporal file
with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws s3 sync _site/ $(s3_bucket) --size-only --exclude &quot;*&quot; --include &quot;*.*&quot; --delete | tee -a $(tempfile)
aws s3 sync _site/ $(s3_bucket) --size-only --content-type text/html --exclude &quot;*.*&quot; --delete | tee -a $(tempfile)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;After that we process the file names that were uploaded or deleted by
the &lt;code class=&quot;highlighter-rouge&quot;&gt;aws&lt;/code&gt; command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;grep &quot;upload\|deleted&quot; $(tempfile) 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then discard the string between &lt;code class=&quot;highlighter-rouge&quot;&gt;upload&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;delete&lt;/code&gt; and the name of
the bucket:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sed -e &quot;s|.*upload.*to $(s3_bucket)|/|&quot; | sed -e &quot;s|.*delete:
$(s3_bucket)|/|&quot; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As our URLs are accessed only with the URLs like &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt; instead of
&lt;code class=&quot;highlighter-rouge&quot;&gt;/index.html&lt;/code&gt; we remove them&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sed -e 's/index.html//' 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Our URLs doesn‚Äôt have the &lt;code class=&quot;highlighter-rouge&quot;&gt;.html&lt;/code&gt; extension also:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sed -e 's/\(.*\).html/\1/' 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Lastly we put all the URLs like names in a single line separated with 
a space to comply with the &lt;code class=&quot;highlighter-rouge&quot;&gt;aws cloudfront create-invalidation
--paths&lt;/code&gt; command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tr '\n' ' ' | xargs aws cloudfront create-invalidation --distribution-id $(distribution_id) --paths
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;final-script&quot;&gt;Final script&lt;/h2&gt;

&lt;p&gt;The complete process is reflected in the following &lt;code class=&quot;highlighter-rouge&quot;&gt;deploy.sh&lt;/code&gt; script,
you probably want to adapt it to a &lt;code class=&quot;highlighter-rouge&quot;&gt;Makefile&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Grunt&lt;/code&gt; or some other
program but I will leave it as a &lt;code class=&quot;highlighter-rouge&quot;&gt;bash&lt;/code&gt; script to reflect its usage:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/bin/env bash&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Copy Jekyll site to S3 bucket&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;####################################&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Custom vars&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;s3_bucket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;s3://example.com/&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;distribution_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ASDFHDFSAF45234
&lt;span class=&quot;c&quot;&gt;####################################&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; -e &lt;span class=&quot;c&quot;&gt;# halt script on error&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; -v &lt;span class=&quot;c&quot;&gt;# echo on&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;tempfile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;mktemp&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Building site...&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;JEKYLL_ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;production bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;jekyll build

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Removing .html extension&quot;&lt;/span&gt;
find _site/ -type f ! -iname &lt;span class=&quot;s1&quot;&gt;'index.html'&lt;/span&gt; -iname &lt;span class=&quot;s1&quot;&gt;'*.html'&lt;/span&gt; -print0 | &lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; -d &lt;span class=&quot;nv&quot;&gt;$'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' f; do mv &quot;$f&quot; &quot;${f%.html}&quot;; done

echo &quot;Copying files to server...&quot;
aws s3 sync _site/ $(s3_bucket) --size-only --exclude &quot;*&quot; --include &quot;*.*&quot; --delete | tee -a $(tempfile)
echo &quot;Copying files with content type...&quot;
aws s3 sync _site/ $(s3_bucket) --size-only --content-type text/html --exclude &quot;*.*&quot; --delete | tee -a $(tempfile)
#invalidate only modified files
grep &quot;upload\|deleted&quot; $(tempfile) | sed -e &quot;s|.*upload.*to $(s3_bucket)|/|&quot; | sed -e &quot;s|.*delete: $(s3_bucket)|/|&quot; | sed -e '&lt;/span&gt;s/index.html//&lt;span class=&quot;s1&quot;&gt;' | sed -e '&lt;/span&gt;s/&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;.&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\)&lt;/span&gt;.html/&lt;span class=&quot;se&quot;&gt;\1&lt;/span&gt;/&lt;span class=&quot;s1&quot;&gt;' | tr '&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' | xargs aws cloudfront create-invalidation --distribution-id $(distribution_id) --paths
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This approach will work in most situations, you have to be careful if
you have any other files without extension to avoid setting the wrong
media type.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Index documents in
S3
&lt;a href=&quot;http://docs.aws.amazon.com/AmazonS3/latest/dev/IndexDocumentSupport.html&quot;&gt;http://docs.aws.amazon.com/AmazonS3/latest/dev/IndexDocumentSupport.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Caching user input in bash &lt;a href=&quot;http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_08_02.html&quot;&gt;http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_08_02.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/users/507519/thkala&quot;&gt;thkala&lt;/a&gt; answer in &lt;a href=&quot;http://stackoverflow.com/a/4509530/1165509&quot;&gt;Linux: remove file extensions for multiple files&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;S3 cli docs &lt;a href=&quot;http://docs.aws.amazon.com/cli/latest/reference/s3/&quot;&gt;http://docs.aws.amazon.com/cli/latest/reference/s3/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;S3 Exclude and include
filters
&lt;a href=&quot;http://docs.aws.amazon.com/cli/latest/reference/s3/index.html#use-of-exclude-and-include-filters&quot;&gt;http://docs.aws.amazon.com/cli/latest/reference/s3/index.html#use-of-exclude-and-include-filters&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Complete list of MIME
types
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Complete_list_of_MIME_types&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Complete_list_of_MIME_types&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Content Type Header field &lt;a href=&quot;https://www.w3.org/Protocols/rfc1341/4_Content-Type.html&quot;&gt;https://www.w3.org/Protocols/rfc1341/4_Content-Type.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;MIME media type name : Text &lt;a href=&quot;https://www.iana.org/assignments/media-types/text/html&quot;&gt;https://www.iana.org/assignments/media-types/text/html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:contenttype&quot;&gt;

      &lt;p&gt;The Content-Type entity header is used to indicate the media type
of the resource, a string sent in the headers of a file to
indicate its type&lt;/p&gt;

      &lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://www.w3.org/Protocols/rfc1341/4_Content-Type.html&quot;&gt;
        &lt;p&gt;The purpose of the Content-Type field is to describe the data
contained in the body fully enough that the receiving user agent
can pick an appropriate agent or mechanism to present the data
to the user, or otherwise deal with the data in an appropriate
manner.&lt;/p&gt;

        &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;&lt;a href=&quot;https://www.w3.org/Protocols/rfc1341/4_Content-Type.html&quot;&gt;The content type header field&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
      &lt;/blockquote&gt;
      &lt;p&gt;&lt;a href=&quot;#fnref:contenttype&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 24 Apr 2017 00:00:00 +0000</pubDate>
        <link>https://simpleit.rocks/having-pretty-urls-in-a-jekyll-website-hosted-in-amazon-s3/</link>
        <guid isPermaLink="true">https://simpleit.rocks/having-pretty-urls-in-a-jekyll-website-hosted-in-amazon-s3/</guid>
        
        
        <category>docs</category>
        
        <category>ruby</category>
        
        <category>jekyll</category>
        
        <category>tutorials</category>
        
      </item>
    
      <item>
        <title>Replicate Installed Package Selections From One Ubuntu System To Another</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;This guide shows how to restore all packages used in an Ubuntu
instance into another one, to have the same programs available.&lt;/p&gt;

&lt;p&gt;Having a backup of the software used is a good practice to easily
replicate your environments accross multiple machines.&lt;/p&gt;

&lt;p&gt;We explore some methods to achieve this with their pros and cons.&lt;/p&gt;

&lt;h2 id=&quot;using-dpkg&quot;&gt;Using dpkg&lt;/h2&gt;

&lt;blockquote class=&quot;blockquote&quot; cite=&quot;https://help.ubuntu.com/lts/serverguide/dpkg.html&quot;&gt;
  &lt;p&gt;dpkg is a package manager for Debian-based systems. It can install,
remove, and build packages, but unlike other package management
systems, it cannot automatically download and install packages or
their dependencies.&lt;/p&gt;

  &lt;footer class=&quot;blockquote-footer&quot;&gt; &lt;cite&gt;Official docs &lt;a href=&quot;https://help.ubuntu.com/lts/serverguide/dpkg.html&quot;&gt;dpkg&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;p&gt;In one machine, we make a local copy of the package selection states running:&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;dpkg --get-selections &amp;gt; packages.txt&lt;/kbd&gt;
&lt;/samp&gt;
&lt;/pre&gt;

&lt;dl class=&quot;row&quot;&gt; 
&lt;dt class=&quot;col-sm-3&quot;&gt;dpkg --get-selections&lt;/dt&gt; 
&lt;dd class=&quot;col-sm-9&quot;&gt;
	Get list of package selections, and write it to
	stdout. Without a pattern, non-installed packages (i.e. those
	which have been previously purged) will not be shown.
&lt;/dd&gt; 
&lt;/dl&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;packages.txt&lt;/code&gt; file will look like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;...
xterm                                           install
xtrans-dev                                      install
xubuntu-artwork                                 install
xul-ext-ubufox                                  install
xz-utils                                        install
yarssr                                          install
yelp                                            install
youtube-dl                                      install
zeitgeist-core                                  install
zenity                                          install
zenity-common                                   install
zip                                             install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then we can backup this file to restore it later on another machine.&lt;/p&gt;

&lt;p&gt;To install these selections we need to do it in three steps:&lt;/p&gt;

&lt;h3 id=&quot;update-available-file&quot;&gt;Update available file&lt;/h3&gt;

&lt;p&gt;Update the &lt;strong&gt;available&lt;/strong&gt; file with the package manager.&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;sudo apt-cache dumpavail | sudo dpkg --merge-avail&lt;/kbd&gt;
Updating available packages info, using -.
Information about 85628 packages was updated.
&lt;/samp&gt;
&lt;/pre&gt;

&lt;dl class=&quot;row&quot;&gt;
&lt;dt class=&quot;col-sm-3&quot;&gt;apt-cache dumpavail&lt;/dt&gt;
&lt;dd class=&quot;col-sm-9&quot;&gt;&lt;blockquote&gt;dumpavail prints out an available list to stdout. This is suitable for use with dpkg(1) and is used by the dselect method.&lt;/blockquote&gt;&lt;/dd&gt;
&lt;dt class=&quot;col-sm-3&quot;&gt;dpkg --merge-avail&lt;/dt&gt;
&lt;dd class=&quot;col-sm-9&quot;&gt;&lt;blockquote&gt;Update dpkg's and dselect's idea of which packages are available. With action --merge-avail, old information is combined with information from Packages-file. dpkg keeps its record of available packages in /var/lib/dpkg/available.&lt;/blockquote&gt;&lt;/dd&gt;
&lt;/dl&gt;

&lt;h3 id=&quot;set-selection-state&quot;&gt;Set selection state&lt;/h3&gt;

&lt;p&gt;Set the selection state on the requested packages with &lt;code class=&quot;highlighter-rouge&quot;&gt;dpkg&lt;/code&gt;:&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;dpkg --set-selections &amp;lt; packages.txt&lt;/kbd&gt;
&lt;/samp&gt;
&lt;/pre&gt;

&lt;dl class=&quot;row&quot;&gt;
&lt;dt class=&quot;col-sm-3&quot;&gt;dpkg --clear-selections&lt;/dt&gt;
&lt;dt class=&quot;col-sm-3&quot;&gt;dpkg --set-selections&lt;/dt&gt;
&lt;dd class=&quot;col-sm-9&quot;&gt;Set package selections using file read from stdin.&lt;/dd&gt;
&lt;/dl&gt;

&lt;h3 id=&quot;download-and-install&quot;&gt;Download and install&lt;/h3&gt;

&lt;p&gt;Packages are not installed yet, to download and install the requested
packages. Execute &lt;code class=&quot;highlighter-rouge&quot;&gt;apt-get&lt;/code&gt; to perform the installation of the packages
specified previously in our file.&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;sudo apt-get -u dselect-upgrade&lt;/kbd&gt;
Reading package lists... Done
Building dependency tree       
Reading state information... Done
...
&lt;/samp&gt;
&lt;/pre&gt;

&lt;dl class=&quot;row&quot;&gt;
&lt;dt class=&quot;col-sm-3&quot;&gt;apt-get -u dselect-upgrade&lt;/dt&gt;
&lt;dd class=&quot;col-sm-9&quot;&gt;&lt;blockquote&gt;dselect-upgrade is used in conjunction with the traditional Debian packaging front-end, dselect.  dselect-upgrade follows the changes made by dselect(1) to the Status field of available packages, and performs the actions necessary to realize that state (for instance, the removal of old and the installation of new packages).&lt;/blockquote&gt;
&lt;/dd&gt;
&lt;/dl&gt;

&lt;h2 id=&quot;using-apt-mark&quot;&gt;Using apt-mark&lt;/h2&gt;

&lt;p&gt;&lt;kbd&gt;apt-mark&lt;/kbd&gt; handles various settings for packages. We can
separate our backup files in two files:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;One will hold the packages installed automatically&lt;/li&gt;
  &lt;li&gt;Other file will hold the packages we install manually&lt;/li&gt;
&lt;/ol&gt;

&lt;dl class=&quot;row&quot;&gt;
&lt;dt class=&quot;col-sm-3&quot;&gt;apt-mark showauto&lt;/dt&gt;
&lt;dd class=&quot;col-sm-9&quot;&gt;&lt;blockquote&gt;showauto is used to print a list of automatically installed packages with each package on a new line. All automatically installed packages will be listed if no package is given. If packages are given only those which are automatically installed will be shown.&lt;/blockquote&gt;
&lt;/dd&gt;
&lt;dt class=&quot;col-sm-3&quot;&gt;apt-mark showmanual&lt;/dt&gt;
&lt;dd class=&quot;col-sm-9&quot;&gt;&lt;blockquote&gt;showmanual can be used in the same way as showauto except that it will print a list of manually installed packages instead.&lt;/blockquote&gt;
&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;So we create these two files:&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;apt-mark showauto &amp;gt; pkgs_auto.lst&lt;/kbd&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;apt-mark showmanual &amp;gt; pkgs_manual.lst&lt;/kbd&gt;
&lt;/samp&gt;
&lt;/pre&gt;

&lt;p&gt;Then we restore the files in the target machine:&lt;/p&gt;

&lt;pre class=&quot;shell&quot;&gt;
&lt;samp&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;sudo apt-mark auto $(cat pkgs_auto.lst)&lt;/kbd&gt;
&lt;span class=&quot;shell-prompt&quot;&gt;$&lt;/span&gt; &lt;kbd&gt;sudo apt-mark manual $(cat pkgs_manual.lst)&lt;/kbd&gt;
&lt;/samp&gt;
&lt;/pre&gt;

&lt;dl class=&quot;row&quot;&gt;
&lt;dt class=&quot;col-sm-3&quot;&gt;apt-mark auto&lt;/dt&gt;
&lt;dd class=&quot;col-sm-9&quot;&gt;&lt;blockquote&gt;auto is used to mark a package as
being automatically installed, which will cause the package to be removed when no more manually installed packages depend on this package.&lt;/blockquote&gt;
&lt;/dd&gt;
&lt;dt class=&quot;col-sm-3&quot;&gt;apt-mark manual&lt;/dt&gt;
&lt;dd class=&quot;col-sm-9&quot;&gt;&lt;blockquote&gt;manual is used to mark a package as being manually installed, which will prevent the package from being automatically removed if no other packages depend on it.&lt;/blockquote&gt;
&lt;/dd&gt;
&lt;/dl&gt;

&lt;h2 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h2&gt;

&lt;p&gt;The problem with the first method is that package dependencies get
lost, so each package don‚Äôt know what other packages are related to
them, which makes something like &lt;kbd&gt;apt-get --purge remove ...&lt;/kbd&gt;
problematic.&lt;/p&gt;

&lt;p&gt;On the other side, the second method is safer and keeps all the
dependencies, and even know if they were installed automatically or
manually which makes it more suitable for this task.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;dpkg Ubuntu docs &lt;a href=&quot;https://help.ubuntu.com/lts/serverguide/dpkg.html&quot;&gt;https://help.ubuntu.com/lts/serverguide/dpkg.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Advanced Packaging
Tool &lt;a href=&quot;https://en.wikipedia.org/wiki/Advanced_Packaging_Tool&quot;&gt;https://en.wikipedia.org/wiki/Advanced_Packaging_Tool&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://askubuntu.com/users/3037/htorque&quot;&gt;htorque&lt;/a&gt; answer in &lt;a href=&quot;https://askubuntu.com/a/108760/43253&quot;&gt;Restoring all data and dependencies from dpkg ‚Äìset-selections ‚Äò*‚Äô&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 24 Apr 2017 00:00:00 +0000</pubDate>
        <link>https://simpleit.rocks/replicate-installed-package-selections-from-one-Ubuntu-system-to-another/</link>
        <guid isPermaLink="true">https://simpleit.rocks/replicate-installed-package-selections-from-one-Ubuntu-system-to-another/</guid>
        
        
        <category>docs</category>
        
        <category>linux</category>
        
      </item>
    
  </channel>
</rss>
