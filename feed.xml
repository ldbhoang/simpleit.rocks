<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Simple IT ü§ò Rocks</title>
    <description>Clutter-free software concepts. Written on the go.
</description>
    <link>http://simpleit.rocks/</link>
    <atom:link href="http://simpleit.rocks/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 03 Jul 2016 19:43:16 -0300</pubDate>
    <lastBuildDate>Sun, 03 Jul 2016 19:43:16 -0300</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>Creating a git server from a git repo</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;A Git project commonly consists of three main sections in a Developer environment and 
a single section in a Git Server:&lt;/p&gt;

&lt;div class=&quot;mermaid&quot;&gt;
graph TB
    subgraph GitServer
      server[&quot;Git&quot;]==&amp;gt;bare[&quot;the Git directory&quot;]
    end
    subgraph DeveloperRepo
      git[&quot;Git&quot;]
      git==&amp;gt;dir[&quot;the Git directory &lt;br /&gt; .git&quot;]
      git==&amp;gt;stage[&quot;Staging Area&quot;]
      git==&amp;gt;work[&quot;Working Directory&quot;]
    end
&lt;/div&gt;

&lt;p&gt;In order to ‚Äúmove‚Äù a git repo to a git server, a special directory 
has to be generated first. This is called a &lt;em&gt;bare repository&lt;/em&gt;, a directory
that only contains the git data but not the project source code files,
just like the &lt;strong&gt;.git&lt;/strong&gt; directory.&lt;/p&gt;

&lt;p&gt;Then this &lt;em&gt;bare repo&lt;/em&gt; should be moved to the server, so the server acts as
 a common &lt;em&gt;git server&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The repo from which the server was generated needs to add the &lt;em&gt;git server&lt;/em&gt; as a 
&lt;em&gt;remote&lt;/em&gt; and every other developer that wants to work in that project can
&lt;em&gt;clone&lt;/em&gt; it from the server directly.&lt;/p&gt;

&lt;h2 id=&quot;create-bare-repository&quot;&gt;Create bare repository&lt;/h2&gt;

&lt;p&gt;In order to set up a Git server, you have to export an existing repository
into a new &lt;em&gt;bare repository&lt;/em&gt; (a repository that doesn‚Äôt contain 
a &lt;em&gt;working directory&lt;/em&gt;).&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone --bare my_project my_project.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;copy-repo-to-remote-server&quot;&gt;Copy repo to remote server&lt;/h2&gt;

&lt;p&gt;Put the bare repository in the server.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;scp -r my_project.git user@git.example.com:/srv/git
 &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rm -r my_project.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;add-server-repo-as-a-remote-in-local-repo&quot;&gt;Add server repo as a remote in local repo&lt;/h2&gt;

&lt;p&gt;After having the repo in the remote server, the git server remote should be
added to the local repo so it is possible to pull and push changes to it.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Set a new remote&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git remote add origin git@server:/srv/git/my_project.git

&lt;span class=&quot;c&quot;&gt;# Verify new remote&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git remote -v
origin  git@server:/srv/git/my_project.git &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;fetch&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
origin  git@server:/srv/git/my_project.git &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;push&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://git-scm.com/book/en/v2/Git-on-the-Server-Getting-Git-on-a-Server&quot;&gt;https://git-scm.com/book/en/v2/Git-on-the-Server-Getting-Git-on-a-Server&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://git-scm.com/book/ch4-1.html&quot;&gt;https://git-scm.com/book/ch4-1.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 01 Jul 2016 00:00:00 -0300</pubDate>
        <link>http://simpleit.rocks/creating-a-git-server-from-a-git-repo/</link>
        <guid isPermaLink="true">http://simpleit.rocks/creating-a-git-server-from-a-git-repo/</guid>
        
        <category>git</category>
        
        <category>server</category>
        
        <category>bare-repository</category>
        
        
        <category>docs</category>
        
        <category>git</category>
        
        <category>tutorials</category>
        
      </item>
    
      <item>
        <title>Remotes</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes&quot;&gt;https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remote repositories are versions of your project that are hosted on the Internet or network somewhere. The clone command implicitly adds the origin remote for you.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Show remotes &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git remote -v&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Add a remote &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git remote add pb https://github.com/paulboone/ticgit&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;To get data from a remote project &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git fetch [remote-name]&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;If your current branch is set up to track a remote branch, you can use the &lt;em&gt;git pull&lt;/em&gt; command to automatically fetch and then merge that remote branch into your current branch &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git pull &lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 24 Jun 2016 00:00:00 -0300</pubDate>
        <link>http://simpleit.rocks/git-basic-commands/</link>
        <guid isPermaLink="true">http://simpleit.rocks/git-basic-commands/</guid>
        
        
        <category>docs</category>
        
        <category>git</category>
        
        <category>remotes</category>
        
      </item>
    
      <item>
        <title>Git Basic Concepts</title>
        <description>&lt;h2 id=&quot;strem-of-snapshots&quot;&gt;Strem of snapshots&lt;/h2&gt;

&lt;p&gt;Git saves data like a &lt;strong&gt;stream of snapshots&lt;/strong&gt;. Every time you commit, or save the state of your project in Git, it basically takes a picture of what all your files look like at that moment and stores a reference to that snapshot. if files have not changed, Git doesn‚Äôt store the file again, just a link to the previous identical file it has already stored.&lt;/p&gt;

&lt;h2 id=&quot;integrity&quot;&gt;Integrity&lt;/h2&gt;

&lt;p&gt;Git has &lt;strong&gt;integrity&lt;/strong&gt;. Everything in Git is check-summed before it is stored and is then referred to by that checksum. It uses &lt;a href=&quot;https://en.wikipedia.org/wiki/SHA-1&quot;&gt;SHA-1&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;file-states&quot;&gt;File states&lt;/h2&gt;

&lt;p&gt;There are three &lt;em&gt;file states&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Committed&lt;/strong&gt; means that the data is stored in your local database.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Modified&lt;/strong&gt; means that you have changed the file but have not committed it to your database yet.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Staged&lt;/strong&gt; means that you have marked a modified fi\e in its current version to go into your next commit snapshot.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;lifecycle-of-the-status-of-files&quot;&gt;Lifecycle of the status of files&lt;/h3&gt;

&lt;div class=&quot;mermaid&quot;&gt;
sequenceDiagram
    Untracked -&amp;gt;&amp;gt; Staged: Add the file
    Unmodified -&amp;gt;&amp;gt; Modified: Edit the file
   	Modified -&amp;gt;&amp;gt; Staged: Stage the file
    Unmodified -&amp;gt;&amp;gt; Untracked: Remove the file
    Staged -&amp;gt;&amp;gt; Unmodified: Commit
&lt;/div&gt;

&lt;h3 id=&quot;main-sections&quot;&gt;Main Sections&lt;/h3&gt;
&lt;p&gt;Sections of a Git project:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the &lt;em&gt;Git directory&lt;/em&gt; is where Git stores the metadata and object database
for your project. It is copied when cloning a repo.&lt;/li&gt;
  &lt;li&gt;the &lt;em&gt;working directory&lt;/em&gt; is a single checkout of one version of the 
project. These files are pulled out of the compressed database in the Git
directory and placed on disk for you to use or modify.&lt;/li&gt;
  &lt;li&gt;the &lt;em&gt;staging area&lt;/em&gt; is a file, generally contained in your Git directory,
that stores information about what will go into your next commit. 
It‚Äôs sometimes referred to as the &lt;strong&gt;index&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;mermaid text-sm-center&quot;&gt;
graph TB
      git[&quot;Git Project Sections&quot;]
      git==&amp;gt;dir[&quot;the Git directory &lt;br /&gt; .git&quot;]
      git==&amp;gt;stage[&quot;Staging Area&quot;]
      git==&amp;gt;work[&quot;Working Directory&quot;]
&lt;/div&gt;
</description>
        <pubDate>Fri, 24 Jun 2016 00:00:00 -0300</pubDate>
        <link>http://simpleit.rocks/git-basic-concepts/</link>
        <guid isPermaLink="true">http://simpleit.rocks/git-basic-concepts/</guid>
        
        
        <category>docs</category>
        
        <category>git</category>
        
        <category>concepts</category>
        
      </item>
    
      <item>
        <title>Git Commands</title>
        <description>&lt;hr /&gt;
&lt;p&gt;title: Git Commands
layout: post
‚Äî-&lt;/p&gt;

&lt;h1 id=&quot;commands&quot;&gt;Commands&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Git Config &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git config --list&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Git config username and email for all repos&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ git config --global user.name &quot;John Doe&quot;&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ git config --global user.email &quot;your_email@example.com&quot;&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Initialize a repository. Creates a new subdirectory named .git that contains all of your necessary repository files. &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git init .&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Get a copy of an existing Git repo. &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git clone [url]&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 24 Jun 2016 00:00:00 -0300</pubDate>
        <link>http://simpleit.rocks/git-commands/</link>
        <guid isPermaLink="true">http://simpleit.rocks/git-commands/</guid>
        
        
        <category>docs</category>
        
        <category>git</category>
        
        <category>commands</category>
        
      </item>
    
      <item>
        <title>kramdown General Concepts</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#concepts&quot; id=&quot;markdown-toc-concepts&quot;&gt;Concepts&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#syntax&quot; id=&quot;markdown-toc-syntax&quot;&gt;Syntax&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#blockquotes&quot; id=&quot;markdown-toc-blockquotes&quot;&gt;Blockquotes&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#code-syntax-highlighting&quot; id=&quot;markdown-toc-code-syntax-highlighting&quot;&gt;Code syntax highlighting&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#links&quot; id=&quot;markdown-toc-links&quot;&gt;Links&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#table-of-content-generation&quot; id=&quot;markdown-toc-table-of-content-generation&quot;&gt;Table of content generation&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#references&quot; id=&quot;markdown-toc-references&quot;&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;concepts&quot;&gt;Concepts&lt;/h1&gt;

&lt;p&gt;Markdown superset converter&lt;/p&gt;

&lt;h1 id=&quot;syntax&quot;&gt;Syntax&lt;/h1&gt;

&lt;h2 id=&quot;blockquotes&quot;&gt;Blockquotes&lt;/h2&gt;

&lt;p&gt;Two alternatives for fully semantically correct &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote&quot;&gt;blockquotes&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Adding the &lt;em&gt;cite&lt;/em&gt; attribute in &lt;em&gt;blockquote&lt;/em&gt; tag:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-kramdown&quot;&gt;&amp;gt; The rule of thumb is, don&#39;t introduce a new attribute outside of the __init__ method, otherwise you&#39;ve given the caller an object that isn&#39;t fully initialized.
{: cite=&quot;https://jeffknupp.com/blog/2014/06/18/improve-your-python-python-classes-and-object-oriented-programming/&quot;}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Generates the following HTML:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;blockquote&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cite=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://jeffknupp.com/blog/2014/06/18/improve-your-python-python-classes-and-object-oriented-programming/&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;The rule of thumb is, don‚Äôt introduce a new attribute outside of the &lt;span class=&quot;nt&quot;&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;init&lt;span class=&quot;nt&quot;&gt;&amp;lt;/strong&amp;gt;&lt;/span&gt; method, otherwise you‚Äôve given the caller an object that isn‚Äôt fully initialized.
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/blockquote&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Adding a &lt;em&gt;cite&lt;/em&gt; element inside the &lt;em&gt;blockquote&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gt&quot;&gt;&amp;gt; The secret to creativity is knowing how to hide your sources. &lt;/span&gt;
&lt;span class=&quot;gt&quot;&gt;&amp;gt; -- &amp;lt;cite&amp;gt;[Albert Einstein][1]&amp;lt;/cite&amp;gt;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;http://www.quotedb.com/quotes/2112&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Generates in HTML:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;blockquote&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;The secret to creativity is knowing how to hide your sources. 
  ‚Äì &lt;span class=&quot;nt&quot;&gt;&amp;lt;cite&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.quotedb.com/quotes/2112&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Albert Einstein&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/cite&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/blockquote&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;code-syntax-highlighting&quot;&gt;Code syntax highlighting&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;kramdown&lt;/em&gt; can use &lt;a href=&quot;https://github.com/jneen/rouge&quot;&gt;rouge&lt;/a&gt; or &lt;a href=&quot;http://coderay.rubychan.de/&quot;&gt;Coderay&lt;/a&gt; for &lt;a href=&quot;http://kramdown.gettalong.org/syntax_highlighter/coderay.html&quot;&gt;syntax highlighting&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The language of the source code can be specified appending the name of the language after the opening line. e.g. for HTML:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;With tildes&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~~~ html
&amp;lt;p&amp;gt; this is my paragraph&amp;lt;/p&amp;gt;
~~~
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Using &lt;abbr title=&quot;Inline Attribute List&quot;&gt;IAL&lt;/abbr&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~~~
def myfunction?
  1618
end
~~~
{: .language-ruby}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In Jekyll also works:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Using backticks:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;redcarpet&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;markdown&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Redcarpet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;markdown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_html&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Or with curly braces:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;foo&#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;links&quot;&gt;Links&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Languages Supported &lt;a href=&quot;https://highlightjs.org/static/demo/&quot;&gt;https://highlightjs.org/static/demo/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Languages supported by Rouge: &lt;a href=&quot;https://github.com/jneen/rouge/tree/master/lib/rouge/lexers&quot;&gt;https://github.com/jneen/rouge/tree/master/lib/rouge/lexers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;table-of-content-generation&quot;&gt;Table of content generation&lt;/h2&gt;

&lt;p&gt;Kramdown can generate an automatic &lt;a href=&quot;https://en.wikipedia.org/wiki/Table_of_contents&quot;&gt;Table of Contents&lt;/a&gt; for all the &lt;em&gt;headers&lt;/em&gt; that have an &lt;em&gt;id&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;As by default it generates automatic &lt;em&gt;ids&lt;/em&gt; for all the header, there is only needed to add a list and name using &lt;abbr title=&quot;Inline Attribute List&quot;&gt;IAL&lt;/abbr&gt; as the placeholder of the generated &lt;abbr title=&quot;Table Of Contents&quot;&gt;TOC&lt;/abbr&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; TOC
{:toc}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://kramdown.gettalong.org/converter/html.html#toc&quot;&gt;http://kramdown.gettalong.org/converter/html.html#toc&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Documentation &lt;a href=&quot;http://kramdown.gettalong.org/syntax.html&quot;&gt;http://kramdown.gettalong.org/syntax.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Quickref &lt;a href=&quot;http://kramdown.gettalong.org/quickref.html&quot;&gt;http://kramdown.gettalong.org/quickref.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 22 Jun 2016 00:00:00 -0300</pubDate>
        <link>http://simpleit.rocks/kramdown-general-concepts/</link>
        <guid isPermaLink="true">http://simpleit.rocks/kramdown-general-concepts/</guid>
        
        
        <category>docs</category>
        
        <category>kramdown</category>
        
      </item>
    
      <item>
        <title>HTML viewport meta tag for responsive designs</title>
        <description>&lt;h1 id=&quot;using-the-viewport-meta-tag&quot;&gt;Using the viewport meta tag&lt;/h1&gt;

&lt;blockquote cite=&quot;https://developers.google.com/speed/docs/insights/ConfigureViewport#overview&quot;&gt;
  &lt;p&gt;A viewport controls how a webpage is displayed on a mobile device. Without a viewport, mobile devices will render the page at a typical desktop screen width, scaled to fit the screen. Setting a viewport gives control over the page‚Äôs width and scaling on different devices.
 Pages optimized to display well on mobile devices should include a meta viewport in the head of the document specifying width=device-width, initial-scale=1.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, initial-scale=1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;CSS Media queries&lt;/em&gt; can be applied based on viewport size. Based on the characteristics of the device rendering the content, such as &lt;em&gt;width&lt;/em&gt; and &lt;em&gt;height&lt;/em&gt;, media queries can change the styles used for each device characteristic.&lt;/p&gt;

&lt;blockquote cite=&quot;https://developers.google.com/web/fundamentals/design-and-ui/responsive/fundamentals/use-media-queries?hl=en&quot;&gt;
  &lt;p&gt;Use min-width over min-device-width to ensure the broadest experience.
Use relative sizes for elements to avoid breaking layout.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;/* CSS Rules used when query matches */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Mozilla/Mobile/Viewport_meta_tag&quot;&gt;https://developer.mozilla.org/en/docs/Mozilla/Mobile/Viewport_meta_tag&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.google.com/speed/docs/insights/ConfigureViewport&quot;&gt;https://developers.google.com/speed/docs/insights/ConfigureViewport&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.w3.org/TR/mwabp/#bp-viewport&quot;&gt;https://www.w3.org/TR/mwabp/#bp-viewport&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.w3schools.com/css/css_rwd_viewport.asp&quot;&gt;http://www.w3schools.com/css/css_rwd_viewport.asp&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/design-and-ui/responsive/fundamentals/use-media-queries?hl=en&quot;&gt;https://developers.google.com/web/fundamentals/design-and-ui/responsive/fundamentals/use-media-queries?hl=en&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 21 Jun 2016 00:00:00 -0300</pubDate>
        <link>http://simpleit.rocks/viewport-metatag-html/</link>
        <guid isPermaLink="true">http://simpleit.rocks/viewport-metatag-html/</guid>
        
        
        <category>docs</category>
        
        <category>html</category>
        
        <category>responsive</category>
        
      </item>
    
      <item>
        <title>Python Language Basic Concepts</title>
        <description>&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Style guide&lt;/em&gt; for python code PEP-8 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0008/&quot;&gt;https://www.python.org/dev/peps/pep-0008/&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;Tools to help in formatting Python code:
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://pypi.python.org/pypi/pep8&quot;&gt;pep8&lt;/a&gt; checks your Python code against some of the style conventions.&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://pypi.python.org/pypi/autopep8&quot;&gt;autopep8&lt;/a&gt; automatically formats Python code to conform to the PEP 8 style guide.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Relative imports makes code more portable.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;absolut import&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;from core.views import absolute&lt;/code&gt; &amp;lt;‚Äî  To import from outside the app&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;explicit relative&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;from .models import CommandModel&lt;/code&gt; &amp;lt;‚Äî To import in current app&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Avoid Using &lt;code class=&quot;highlighter-rouge&quot;&gt;Import *&lt;/code&gt; as it can lead to undesirable results. You can‚Äôt really know which packages you are using.&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 14 Jun 2016 00:00:00 -0300</pubDate>
        <link>http://simpleit.rocks/python-language-basic-concepts/</link>
        <guid isPermaLink="true">http://simpleit.rocks/python-language-basic-concepts/</guid>
        
        
        <category>docs</category>
        
        <category>python</category>
        
        <category>language</category>
        
        <category>concepts</category>
        
      </item>
    
      <item>
        <title>Ruby</title>
        <description>&lt;!-- markdown-toc start - Don&#39;t edit this section. Run M-x markdown-toc-generate-toc again --&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#concepts&quot;&gt;Concepts&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#ruby-sandbox&quot;&gt;Ruby Sandbox&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#bundler&quot;&gt;Bundler&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#bundler-common-workflow&quot;&gt;Bundler common workflow&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#references&quot;&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- markdown-toc end --&gt;

&lt;h1 id=&quot;concepts&quot;&gt;Concepts&lt;/h1&gt;

&lt;h2 id=&quot;ruby-sandbox&quot;&gt;Ruby Sandbox&lt;/h2&gt;

&lt;p&gt;Manage dependencies independently of the current platform.&lt;/p&gt;

&lt;h3 id=&quot;bundler&quot;&gt;Bundler&lt;/h3&gt;

&lt;blockquote cite=&quot;http://bundler.io/&quot;&gt;
  &lt;p&gt;Bundler provides a consistent environment for Ruby projects by tracking and installing the exact gems and versions that are needed.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;bundler-common-workflow&quot;&gt;Bundler common workflow&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Declare dependencies of an application in a &lt;a href=&quot;http://bundler.io/gemfile.html&quot;&gt;Gemfile&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://bundler.io/bundle_install.html&quot;&gt;Install&lt;/a&gt; above versions of the dependencies into an isolated location &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle install&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;run the app: &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle exec&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Official Documentation &lt;a href=&quot;https://www.ruby-lang.org/&quot;&gt;https://www.ruby-lang.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 10 Jun 2016 00:00:00 -0300</pubDate>
        <link>http://simpleit.rocks/ruby/</link>
        <guid isPermaLink="true">http://simpleit.rocks/ruby/</guid>
        
        
        <category>docs</category>
        
        <category>ruby</category>
        
        <category>language</category>
        
      </item>
    
      <item>
        <title>Letters for Spanish in Linux</title>
        <description>&lt;h1 id=&quot;entering-unicode-values&quot;&gt;Entering Unicode values&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Enter any code: &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl+Shift+U +&amp;lt;a Hex Value&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Unicode Spanish codes:
    &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;√°&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00e1&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;√Å&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00c1&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;√©&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00e9&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;√â&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00c9&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;√≠&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00ed&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;√ç&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00cd&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;√≥&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00f3&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;√ì&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00d3&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;√∫&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00fa&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;√ö&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00da&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;√±&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00f1&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;√ë&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00d1&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;√º&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00fc&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;√ú&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00dc&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;¬°&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00a1&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;¬ø&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + u + 00bf&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 06 Jun 2016 00:00:00 -0300</pubDate>
        <link>http://simpleit.rocks/writing-spanish-in-linux/</link>
        <guid isPermaLink="true">http://simpleit.rocks/writing-spanish-in-linux/</guid>
        
        
        <category>docs</category>
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>Django</title>
        <description>&lt;h1 id=&quot;concepts&quot;&gt;Concepts&lt;/h1&gt;

&lt;p&gt;Fat models, thin views.&lt;/p&gt;

&lt;p&gt;Each Django &lt;em&gt;project&lt;/em&gt; can be composed of many &lt;em&gt;apps&lt;/em&gt;. An &lt;em&gt;app&lt;/em&gt; is a small project that should focus on performing one task (e.g. A website project can have: a blog, ratings, news apps).&lt;/p&gt;

&lt;h1 id=&quot;django-project-structure&quot;&gt;Django project structure&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://amzn.to/25QCIkE&quot;&gt;Two Scoops Of Django&lt;/a&gt; recommends the following structure: ( implemented in &lt;a href=&quot;https://github.com/pydanny/cookiecutter-django&quot;&gt;Cookiecutter&lt;/a&gt;)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ÃÉ /.virtualenvs/&amp;lt;django_project_name&amp;gt;/    #keep venv outside project structure
...
&amp;lt;repository_root&amp;gt;/ #git repo
    README.rst
	docs/
	.gitignore
	requirements/
		base.txt
		local.txt
		production.txt
		test.txt
	Makefile - Deployment tasks
    &amp;lt;django_project_root&amp;gt;/
	    manage.py
		media/ #only in development, user generated static media assets (e.g. photos)
		static/ #non user generated static media assets (e.g. css)
		        #controlled by STATICFILES DIRS config variable
		templates/ # site-wide templates
		&amp;lt;an_app&amp;gt;/
        &amp;lt;configuration_root&amp;gt;/
			__init.py__
			settings/
				__init.py__
				base.py
				local.py
				production.py
			urls.py
			wsgi.py
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Media&lt;/strong&gt; and &lt;strong&gt;static&lt;/strong&gt; directories in production should be located in a static media server.&lt;/p&gt;

&lt;h1 id=&quot;configuration-and-environment-isolation&quot;&gt;Configuration and environment isolation&lt;/h1&gt;

&lt;p&gt;Every config file should be version controlled, even the developers local configuration, all the developers of a project should use the same development configuration.&lt;/p&gt;

&lt;p&gt;However there are special config keys that should be left out of versioning, like the SECRET_KEY setting (used for &lt;a href=&quot;https://docs.djangoproject.com/en/1.9/topics/signing/&quot;&gt;cryptographic signing functionalities&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;The default &lt;em&gt;Config file&lt;/em&gt; that comes shipped with Django should be pulled apart into several settings for each environment: &lt;em&gt;local&lt;/em&gt;, &lt;em&gt;staging&lt;/em&gt;, &lt;em&gt;test&lt;/em&gt;, &lt;em&gt;production&lt;/em&gt;. This can be done easily inheriting from a &lt;em&gt;base config file&lt;/em&gt;, changing what the specific environment needs and &lt;strong&gt;&lt;a href=&quot;http://12factor.net/config&quot;&gt;leaving secret keys outside config files versioning using environment variables&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If &lt;em&gt;virtualenvwrapper&lt;/em&gt; is being used, the default development settings parameter to work with &lt;em&gt;manage.py&lt;/em&gt; can be specified in the &lt;em&gt;postactivate&lt;/em&gt; hook: &lt;code class=&quot;highlighter-rouge&quot;&gt;echo &quot;export DJANGO_SETTINGS_MODULE=settings.local&quot; &amp;gt;&amp;gt; $VIRTUAL_ENV/bin/postactivate&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;When using &lt;em&gt;manage.py&lt;/em&gt; many commands accepts the parameter to specify a specific settings file: &lt;code class=&quot;highlighter-rouge&quot;&gt;python manage.py runserver --settings=myproject.settings.local&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;To compare the current settings file with the one that installs Django by default: &lt;code class=&quot;highlighter-rouge&quot;&gt;$ manage.py diffsettings&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;setting-environment-variables&quot;&gt;Setting environment variables&lt;/h2&gt;

&lt;p&gt;In a &lt;strong&gt;development&lt;/strong&gt; environment, variables can be set with &lt;code class=&quot;highlighter-rouge&quot;&gt;$ export A_SECRET_KEY=shhh1234&lt;/code&gt;, and placed in:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;.bashrc&lt;/em&gt; or &lt;em&gt;.profile&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;virtualenvwrapper‚Äôs&lt;/em&gt; &lt;strong&gt;bin/activate&lt;/strong&gt; hook file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To check that the secret environment key is being loaded, it is possible to check it from a python shell:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;A_SECRET_KEY&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&quot;shhh1234&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then to get the value for a specific environment, the &lt;em&gt;production config file&lt;/em&gt; in version control only needs to get this environment variable value: &lt;code class=&quot;highlighter-rouge&quot;&gt;A_SECRET_KEY = os.environ[&quot;A_SECRET_KEY&quot;]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In a &lt;strong&gt;production&lt;/strong&gt; environment like &lt;a href=&quot;https://devcenter.heroku.com/articles/config-vars&quot;&gt;Heroku&lt;/a&gt;, this can be done with: &lt;code class=&quot;highlighter-rouge&quot;&gt;$ heroku config:set A_SECRET_KEY=shhh1234&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;splitting-the-default-djangos-settings-file-into-several-files-for-different-environments&quot;&gt;Splitting the default Django‚Äôs settings file into several files for different environments&lt;/h2&gt;

&lt;p&gt;Django automatically creates a configuration file in &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;project_name&amp;gt;/settings.py&lt;/code&gt;, to break it up into &lt;em&gt;local&lt;/em&gt;, &lt;em&gt;testing&lt;/em&gt;, &lt;em&gt;staging&lt;/em&gt; and &lt;em&gt;production&lt;/em&gt; config files, the best way is to create a &lt;code class=&quot;highlighter-rouge&quot;&gt;base.py&lt;/code&gt; config with common configurations accross all of them and leave:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create the settings directory &lt;code class=&quot;highlighter-rouge&quot;&gt;$ mkdir &amp;lt;project_name&amp;gt;/settings&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Add &lt;code class=&quot;highlighter-rouge&quot;&gt;__init__.py&lt;/code&gt; file to make Python treat the settings directory as containing packages &lt;code class=&quot;highlighter-rouge&quot;&gt;$ touch &amp;lt;project_name&amp;gt;/settings/__init__.py&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Move the default settings file into the settings directory and change its name &lt;code class=&quot;highlighter-rouge&quot;&gt;$ mv &amp;lt;project_name&amp;gt;/settings.py &amp;lt;project_name&amp;gt;/settings/base.py&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Create all the configuration files (&lt;em&gt;local.py&lt;/em&gt;, &lt;em&gt;testing.py&lt;/em&gt;, &lt;em&gt;staging&lt;/em&gt;, &lt;em&gt;production&lt;/em&gt; ) and specify to inherit &lt;em&gt;base.py&lt;/em&gt; configurations, for example, for the development file: &lt;code class=&quot;highlighter-rouge&quot;&gt;echo &quot;from .base import *&quot; &amp;gt;&amp;gt; &amp;lt;project_name&amp;gt;/settings/local.py&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Configure the current environment to use the appropriate settings file, in development: &lt;code class=&quot;highlighter-rouge&quot;&gt;$ export DJANGO_SETTINGS_MODULE=mysite.settings.local&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Django has two administrative scripts: &lt;strong&gt;django_admin.py&lt;/strong&gt; and &lt;strong&gt;manage.py&lt;/strong&gt; (that automatically configures the django instance with the current project). 
One of the &lt;a href=&quot;https://docs.djangoproject.com/en/1.9/ref/django-admin/&quot;&gt;differences&lt;/a&gt; between them is that &lt;em&gt;manage.py&lt;/em&gt; automatically configures the  &lt;strong&gt;DJANGO_SETTINGS_MODULE&lt;/strong&gt; environment variable using the project‚Äôs &lt;em&gt;settings.py&lt;/em&gt;.&lt;/p&gt;

&lt;blockquote cite=&quot;https://docs.djangoproject.com/en/1.9/ref/django-admin/&quot;&gt;
  &lt;p&gt;Generally, when working on a single Django project, it‚Äôs easier to use manage.py than django-admin. 
If you need to switch between multiple Django settings files, use django-admin with DJANGO_SETTINGS_MODULE or the ‚Äìsettings command line option.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;packages-for-each-environment&quot;&gt;Packages for each environment&lt;/h2&gt;

&lt;p&gt;Each environment needs a specific requirements file, having a &lt;em&gt;base.txt&lt;/em&gt; requirement file with common packages across environments and then adding the needed packages for each environment.&lt;/p&gt;

&lt;p&gt;Common commands:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;To make it possible for each environment to inherit the packages from the &lt;em&gt;base.txt&lt;/em&gt; requirement file, each new file should begin with: &lt;code class=&quot;highlighter-rouge&quot;&gt;-r base.txt&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;To generate a requirements file: &lt;a href=&quot;https://pip.pypa.io/en/stable/reference/pip_freeze/&quot;&gt;$ pip freeze&lt;/a&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;$ pip freeze --local &amp;gt; requirements/base.txt&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;To install the requirements file in a local environment: &lt;code class=&quot;highlighter-rouge&quot;&gt;$ pip install -r requirements/base.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;models&quot;&gt;Models&lt;/h2&gt;

&lt;h2 id=&quot;view&quot;&gt;View&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Generic views &lt;a href=&quot;https://docs.djangoproject.com/en/1.9/topics/class-based-views/generic-display/&quot;&gt;https://docs.djangoproject.com/en/1.9/topics/class-based-views/generic-display/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Model forms &lt;a href=&quot;https://docs.djangoproject.com/en/1.9/topics/forms/modelforms/&quot;&gt;https://docs.djangoproject.com/en/1.9/topics/forms/modelforms/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;testing&quot;&gt;Testing&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/1.9/topics/testing/&quot;&gt;https://docs.djangoproject.com/en/1.9/topics/testing/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Assertions available are from &lt;em&gt;unittest&lt;/em&gt; and from Django‚Äôs &lt;em&gt;TestCase&lt;/em&gt; so the full list of &lt;em&gt;assertions&lt;/em&gt; available are:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/dev/topics/testing/tools/#assertions&quot;&gt;https://docs.djangoproject.com/en/dev/topics/testing/tools/#assertions&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/library/unittest.html#assert-methods&quot;&gt;https://docs.python.org/3/library/unittest.html#assert-methods&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote cite=&quot;https://docs.djangoproject.com/en/1.9/topics/testing/&quot;&gt;
  &lt;p&gt;The preferred way to write tests in Django is using the &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#module-unittest&quot;&gt;unittest&lt;/a&gt; module built in to the Python standard library&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote cite=&quot;https://docs.djangoproject.com/en/1.9/topics/testing/overview/&quot;&gt;
  &lt;p&gt;In Django we subclasses from django.test.TestCase, which is a subclass of unittest.TestCase that runs each test inside a transaction to provide isolation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Django provides a &lt;a href=&quot;https://docs.djangoproject.com/en/1.9/intro/tutorial05/#the-django-test-client&quot;&gt;test Client&lt;/a&gt; to simulate a user interacting with the code at the view level. We can use it in tests.py&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;related-links&quot;&gt;Related Links&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Testing tutorial &lt;a href=&quot;https://docs.djangoproject.com/en/1.9/topics/testing/&quot;&gt;https://docs.djangoproject.com/en/1.9/topics/testing/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;admin&quot;&gt;Admin&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Edit models on the same page as a parent model with Model Inlines &lt;a href=&quot;https://docs.djangoproject.com/en/dev/ref/contrib/admin/#inlinemodeladmin-objects&quot;&gt;https://docs.djangoproject.com/en/dev/ref/contrib/admin/#inlinemodeladmin-objects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Official Documentation in categories &lt;a href=&quot;https://docs.djangoproject.com/en/&quot;&gt;https://docs.djangoproject.com/en/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Single page with links to each doc &lt;a href=&quot;https://docs.djangoproject.com/en/1.9/contents/&quot;&gt;https://docs.djangoproject.com/en/1.9/contents/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;books&quot;&gt;Books&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://amzn.to/25QCIkE&quot;&gt;Two Scoops Of Django&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 02 Jun 2016 00:00:00 -0300</pubDate>
        <link>http://simpleit.rocks/django/</link>
        <guid isPermaLink="true">http://simpleit.rocks/django/</guid>
        
        
        <category>docs</category>
        
        <category>python</category>
        
        <category>django</category>
        
      </item>
    
  </channel>
</rss>
